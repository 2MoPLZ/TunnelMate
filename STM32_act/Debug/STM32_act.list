
STM32_act.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004d78  0800010c  0800010c  0000110c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000128  08004e84  08004e84  00005e84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004fac  08004fac  000060c4  2**0
                  CONTENTS
  4 .ARM          00000000  08004fac  08004fac  000060c4  2**0
                  CONTENTS
  5 .preinit_array 00000000  08004fac  08004fac  000060c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004fac  08004fac  00005fac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004fb0  08004fb0  00005fb0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000000c4  20000000  08004fb4  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000438  200000c4  08005078  000060c4  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200004fc  08005078  000064fc  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000060c4  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000f0b0  00000000  00000000  000060ed  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000028e0  00000000  00000000  0001519d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000e18  00000000  00000000  00017a80  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000ae4  00000000  00000000  00018898  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00017c9c  00000000  00000000  0001937c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00011109  00000000  00000000  00031018  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008a67a  00000000  00000000  00042121  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000cc79b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003e08  00000000  00000000  000cc7e0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000054  00000000  00000000  000d05e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	@ (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	@ (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	200000c4 	.word	0x200000c4
 8000128:	00000000 	.word	0x00000000
 800012c:	08004e6c 	.word	0x08004e6c

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	@ (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	@ (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	@ (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	200000c8 	.word	0x200000c8
 8000148:	08004e6c 	.word	0x08004e6c

0800014c <initBuzzer>:
 800014c:	b580      	push	{r7, lr}
 800014e:	af00      	add	r7, sp, #0
 8000150:	2100      	movs	r1, #0
 8000152:	4802      	ldr	r0, [pc, #8]	@ (800015c <initBuzzer+0x10>)
 8000154:	f002 fcb2 	bl	8002abc <HAL_TIM_PWM_Start>
 8000158:	bf00      	nop
 800015a:	bd80      	pop	{r7, pc}
 800015c:	20000170 	.word	0x20000170

08000160 <setVolumeBuzzer>:
 8000160:	b480      	push	{r7}
 8000162:	b085      	sub	sp, #20
 8000164:	af00      	add	r7, sp, #0
 8000166:	4603      	mov	r3, r0
 8000168:	71fb      	strb	r3, [r7, #7]
 800016a:	4b09      	ldr	r3, [pc, #36]	@ (8000190 <setVolumeBuzzer+0x30>)
 800016c:	68db      	ldr	r3, [r3, #12]
 800016e:	79fa      	ldrb	r2, [r7, #7]
 8000170:	fb02 f303 	mul.w	r3, r2, r3
 8000174:	4a07      	ldr	r2, [pc, #28]	@ (8000194 <setVolumeBuzzer+0x34>)
 8000176:	fba2 2303 	umull	r2, r3, r2, r3
 800017a:	095b      	lsrs	r3, r3, #5
 800017c:	60fb      	str	r3, [r7, #12]
 800017e:	4b04      	ldr	r3, [pc, #16]	@ (8000190 <setVolumeBuzzer+0x30>)
 8000180:	681b      	ldr	r3, [r3, #0]
 8000182:	68fa      	ldr	r2, [r7, #12]
 8000184:	635a      	str	r2, [r3, #52]	@ 0x34
 8000186:	bf00      	nop
 8000188:	3714      	adds	r7, #20
 800018a:	46bd      	mov	sp, r7
 800018c:	bc80      	pop	{r7}
 800018e:	4770      	bx	lr
 8000190:	20000170 	.word	0x20000170
 8000194:	51eb851f 	.word	0x51eb851f

08000198 <setFrequencyBuzzer>:
 8000198:	b480      	push	{r7}
 800019a:	b085      	sub	sp, #20
 800019c:	af00      	add	r7, sp, #0
 800019e:	6078      	str	r0, [r7, #4]
 80001a0:	4b0e      	ldr	r3, [pc, #56]	@ (80001dc <setFrequencyBuzzer+0x44>)
 80001a2:	681a      	ldr	r2, [r3, #0]
 80001a4:	4b0e      	ldr	r3, [pc, #56]	@ (80001e0 <setFrequencyBuzzer+0x48>)
 80001a6:	685b      	ldr	r3, [r3, #4]
 80001a8:	3301      	adds	r3, #1
 80001aa:	fbb2 f2f3 	udiv	r2, r2, r3
 80001ae:	687b      	ldr	r3, [r7, #4]
 80001b0:	fbb2 f3f3 	udiv	r3, r2, r3
 80001b4:	60fb      	str	r3, [r7, #12]
 80001b6:	4b0a      	ldr	r3, [pc, #40]	@ (80001e0 <setFrequencyBuzzer+0x48>)
 80001b8:	681b      	ldr	r3, [r3, #0]
 80001ba:	68fa      	ldr	r2, [r7, #12]
 80001bc:	3a01      	subs	r2, #1
 80001be:	62da      	str	r2, [r3, #44]	@ 0x2c
 80001c0:	68fb      	ldr	r3, [r7, #12]
 80001c2:	3b01      	subs	r3, #1
 80001c4:	4a06      	ldr	r2, [pc, #24]	@ (80001e0 <setFrequencyBuzzer+0x48>)
 80001c6:	60d3      	str	r3, [r2, #12]
 80001c8:	4b05      	ldr	r3, [pc, #20]	@ (80001e0 <setFrequencyBuzzer+0x48>)
 80001ca:	681b      	ldr	r3, [r3, #0]
 80001cc:	68fa      	ldr	r2, [r7, #12]
 80001ce:	0852      	lsrs	r2, r2, #1
 80001d0:	635a      	str	r2, [r3, #52]	@ 0x34
 80001d2:	bf00      	nop
 80001d4:	3714      	adds	r7, #20
 80001d6:	46bd      	mov	sp, r7
 80001d8:	bc80      	pop	{r7}
 80001da:	4770      	bx	lr
 80001dc:	20000068 	.word	0x20000068
 80001e0:	20000170 	.word	0x20000170

080001e4 <onBuzzer>:
 80001e4:	b580      	push	{r7, lr}
 80001e6:	af00      	add	r7, sp, #0
 80001e8:	f44f 7048 	mov.w	r0, #800	@ 0x320
 80001ec:	f7ff ffd4 	bl	8000198 <setFrequencyBuzzer>
 80001f0:	bf00      	nop
 80001f2:	bd80      	pop	{r7, pc}

080001f4 <offBuzzer>:
 80001f4:	b580      	push	{r7, lr}
 80001f6:	af00      	add	r7, sp, #0
 80001f8:	2000      	movs	r0, #0
 80001fa:	f7ff ffb1 	bl	8000160 <setVolumeBuzzer>
 80001fe:	bf00      	nop
 8000200:	bd80      	pop	{r7, pc}
	...

08000204 <initFan>:
 8000204:	b580      	push	{r7, lr}
 8000206:	af00      	add	r7, sp, #0
 8000208:	2108      	movs	r1, #8
 800020a:	4802      	ldr	r0, [pc, #8]	@ (8000214 <initFan+0x10>)
 800020c:	f002 fc56 	bl	8002abc <HAL_TIM_PWM_Start>
 8000210:	bf00      	nop
 8000212:	bd80      	pop	{r7, pc}
 8000214:	200001b8 	.word	0x200001b8

08000218 <setInternalFan>:
 8000218:	b580      	push	{r7, lr}
 800021a:	af00      	add	r7, sp, #0
 800021c:	2200      	movs	r2, #0
 800021e:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000222:	4805      	ldr	r0, [pc, #20]	@ (8000238 <setInternalFan+0x20>)
 8000224:	f001 ff0e 	bl	8002044 <HAL_GPIO_WritePin>
 8000228:	2201      	movs	r2, #1
 800022a:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800022e:	4802      	ldr	r0, [pc, #8]	@ (8000238 <setInternalFan+0x20>)
 8000230:	f001 ff08 	bl	8002044 <HAL_GPIO_WritePin>
 8000234:	bf00      	nop
 8000236:	bd80      	pop	{r7, pc}
 8000238:	40011000 	.word	0x40011000

0800023c <stopFan>:
 800023c:	b580      	push	{r7, lr}
 800023e:	af00      	add	r7, sp, #0
 8000240:	2201      	movs	r2, #1
 8000242:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000246:	4802      	ldr	r0, [pc, #8]	@ (8000250 <stopFan+0x14>)
 8000248:	f001 fefc 	bl	8002044 <HAL_GPIO_WritePin>
 800024c:	bf00      	nop
 800024e:	bd80      	pop	{r7, pc}
 8000250:	40011000 	.word	0x40011000

08000254 <setSpeedFan>:
 8000254:	b480      	push	{r7}
 8000256:	b083      	sub	sp, #12
 8000258:	af00      	add	r7, sp, #0
 800025a:	4603      	mov	r3, r0
 800025c:	80fb      	strh	r3, [r7, #6]
 800025e:	88fb      	ldrh	r3, [r7, #6]
 8000260:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8000264:	d302      	bcc.n	800026c <setSpeedFan+0x18>
 8000266:	f240 33e7 	movw	r3, #999	@ 0x3e7
 800026a:	80fb      	strh	r3, [r7, #6]
 800026c:	4b04      	ldr	r3, [pc, #16]	@ (8000280 <setSpeedFan+0x2c>)
 800026e:	681b      	ldr	r3, [r3, #0]
 8000270:	88fa      	ldrh	r2, [r7, #6]
 8000272:	63da      	str	r2, [r3, #60]	@ 0x3c
 8000274:	bf00      	nop
 8000276:	370c      	adds	r7, #12
 8000278:	46bd      	mov	sp, r7
 800027a:	bc80      	pop	{r7}
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop
 8000280:	200001b8 	.word	0x200001b8

08000284 <setLevelFan>:
 8000284:	b580      	push	{r7, lr}
 8000286:	b082      	sub	sp, #8
 8000288:	af00      	add	r7, sp, #0
 800028a:	4603      	mov	r3, r0
 800028c:	71fb      	strb	r3, [r7, #7]
 800028e:	79fb      	ldrb	r3, [r7, #7]
 8000290:	2b03      	cmp	r3, #3
 8000292:	d826      	bhi.n	80002e2 <setLevelFan+0x5e>
 8000294:	a201      	add	r2, pc, #4	@ (adr r2, 800029c <setLevelFan+0x18>)
 8000296:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800029a:	bf00      	nop
 800029c:	080002ad 	.word	0x080002ad
 80002a0:	080002b9 	.word	0x080002b9
 80002a4:	080002c7 	.word	0x080002c7
 80002a8:	080002d5 	.word	0x080002d5
 80002ac:	f7ff ffc6 	bl	800023c <stopFan>
 80002b0:	2000      	movs	r0, #0
 80002b2:	f7ff ffcf 	bl	8000254 <setSpeedFan>
 80002b6:	e01a      	b.n	80002ee <setLevelFan+0x6a>
 80002b8:	f7ff ffae 	bl	8000218 <setInternalFan>
 80002bc:	f44f 70af 	mov.w	r0, #350	@ 0x15e
 80002c0:	f7ff ffc8 	bl	8000254 <setSpeedFan>
 80002c4:	e013      	b.n	80002ee <setLevelFan+0x6a>
 80002c6:	f7ff ffa7 	bl	8000218 <setInternalFan>
 80002ca:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 80002ce:	f7ff ffc1 	bl	8000254 <setSpeedFan>
 80002d2:	e00c      	b.n	80002ee <setLevelFan+0x6a>
 80002d4:	f7ff ffa0 	bl	8000218 <setInternalFan>
 80002d8:	f240 30e7 	movw	r0, #999	@ 0x3e7
 80002dc:	f7ff ffba 	bl	8000254 <setSpeedFan>
 80002e0:	e005      	b.n	80002ee <setLevelFan+0x6a>
 80002e2:	f7ff ffab 	bl	800023c <stopFan>
 80002e6:	2000      	movs	r0, #0
 80002e8:	f7ff ffb4 	bl	8000254 <setSpeedFan>
 80002ec:	bf00      	nop
 80002ee:	bf00      	nop
 80002f0:	3708      	adds	r7, #8
 80002f2:	46bd      	mov	sp, r7
 80002f4:	bd80      	pop	{r7, pc}
 80002f6:	bf00      	nop

080002f8 <onHeadLight>:
 80002f8:	b580      	push	{r7, lr}
 80002fa:	af00      	add	r7, sp, #0
 80002fc:	2201      	movs	r2, #1
 80002fe:	2180      	movs	r1, #128	@ 0x80
 8000300:	4802      	ldr	r0, [pc, #8]	@ (800030c <onHeadLight+0x14>)
 8000302:	f001 fe9f 	bl	8002044 <HAL_GPIO_WritePin>
 8000306:	bf00      	nop
 8000308:	bd80      	pop	{r7, pc}
 800030a:	bf00      	nop
 800030c:	40010800 	.word	0x40010800

08000310 <offHeadLight>:
 8000310:	b580      	push	{r7, lr}
 8000312:	af00      	add	r7, sp, #0
 8000314:	2200      	movs	r2, #0
 8000316:	2180      	movs	r1, #128	@ 0x80
 8000318:	4802      	ldr	r0, [pc, #8]	@ (8000324 <offHeadLight+0x14>)
 800031a:	f001 fe93 	bl	8002044 <HAL_GPIO_WritePin>
 800031e:	bf00      	nop
 8000320:	bd80      	pop	{r7, pc}
 8000322:	bf00      	nop
 8000324:	40010800 	.word	0x40010800

08000328 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000328:	b580      	push	{r7, lr}
 800032a:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800032c:	f001 fae4 	bl	80018f8 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000330:	f000 f838 	bl	80003a4 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000334:	f000 fab0 	bl	8000898 <MX_GPIO_Init>
  MX_TIM1_Init();
 8000338:	f000 f86e 	bl	8000418 <MX_TIM1_Init>
  MX_TIM3_Init();
 800033c:	f000 f972 	bl	8000624 <MX_TIM3_Init>
  MX_TIM2_Init();
 8000340:	f000 f90c 	bl	800055c <MX_TIM2_Init>
  MX_TIM4_Init();
 8000344:	f000 f9f0 	bl	8000728 <MX_TIM4_Init>
  MX_USART1_UART_Init();
 8000348:	f000 fa52 	bl	80007f0 <MX_USART1_UART_Init>
  MX_USART2_UART_Init();
 800034c:	f000 fa7a 	bl	8000844 <MX_USART2_UART_Init>
  /* USER CODE BEGIN 2 */
  initBuzzer();
 8000350:	f7ff fefc 	bl	800014c <initBuzzer>
  initFan();
 8000354:	f7ff ff56 	bl	8000204 <initFan>
  initRgb();
 8000358:	f000 fde0 	bl	8000f1c <initRgb>
  initServo();
 800035c:	f000 fefa 	bl	8001154 <initServo>
  initControlValue();
 8000360:	f000 fc1a 	bl	8000b98 <initControlValue>

  initScheduler();
 8000364:	f000 feba 	bl	80010dc <initScheduler>


//  if(HAL_UART_Receive_IT(&huart1,rx_buffer + rxPtr,ACTUATOR_PACKET_SIZE) != HAL_OK){
//	  Error_Handler();
//  }
  if(HAL_UART_Receive_IT(&huart1,rx_buffer_1,ACTUATOR_PACKET_SIZE) != HAL_OK){
 8000368:	220b      	movs	r2, #11
 800036a:	490b      	ldr	r1, [pc, #44]	@ (8000398 <main+0x70>)
 800036c:	480b      	ldr	r0, [pc, #44]	@ (800039c <main+0x74>)
 800036e:	f003 fb31 	bl	80039d4 <HAL_UART_Receive_IT>
 8000372:	4603      	mov	r3, r0
 8000374:	2b00      	cmp	r3, #0
 8000376:	d001      	beq.n	800037c <main+0x54>
  	  Error_Handler();
 8000378:	f000 fdca 	bl	8000f10 <Error_Handler>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    if(packetReceived == 1)
 800037c:	4b08      	ldr	r3, [pc, #32]	@ (80003a0 <main+0x78>)
 800037e:	781b      	ldrb	r3, [r3, #0]
 8000380:	2b01      	cmp	r3, #1
 8000382:	d106      	bne.n	8000392 <main+0x6a>
    {
      packetReceived = 0;
 8000384:	4b06      	ldr	r3, [pc, #24]	@ (80003a0 <main+0x78>)
 8000386:	2200      	movs	r2, #0
 8000388:	701a      	strb	r2, [r3, #0]
      handlePacket();
 800038a:	f000 fbb5 	bl	8000af8 <handlePacket>
      printActuatorPacket();
 800038e:	f000 fb07 	bl	80009a0 <printActuatorPacket>
    }
    scheduler();
 8000392:	f000 fead 	bl	80010f0 <scheduler>
    if(packetReceived == 1)
 8000396:	e7f1      	b.n	800037c <main+0x54>
 8000398:	20000290 	.word	0x20000290
 800039c:	20000200 	.word	0x20000200
 80003a0:	2000039b 	.word	0x2000039b

080003a4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80003a4:	b580      	push	{r7, lr}
 80003a6:	b090      	sub	sp, #64	@ 0x40
 80003a8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80003aa:	f107 0318 	add.w	r3, r7, #24
 80003ae:	2228      	movs	r2, #40	@ 0x28
 80003b0:	2100      	movs	r1, #0
 80003b2:	4618      	mov	r0, r3
 80003b4:	f004 f8ca 	bl	800454c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80003b8:	1d3b      	adds	r3, r7, #4
 80003ba:	2200      	movs	r2, #0
 80003bc:	601a      	str	r2, [r3, #0]
 80003be:	605a      	str	r2, [r3, #4]
 80003c0:	609a      	str	r2, [r3, #8]
 80003c2:	60da      	str	r2, [r3, #12]
 80003c4:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80003c6:	2301      	movs	r3, #1
 80003c8:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 80003ca:	f44f 23a0 	mov.w	r3, #327680	@ 0x50000
 80003ce:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80003d0:	2300      	movs	r3, #0
 80003d2:	637b      	str	r3, [r7, #52]	@ 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80003d4:	f107 0318 	add.w	r3, r7, #24
 80003d8:	4618      	mov	r0, r3
 80003da:	f001 fe6d 	bl	80020b8 <HAL_RCC_OscConfig>
 80003de:	4603      	mov	r3, r0
 80003e0:	2b00      	cmp	r3, #0
 80003e2:	d001      	beq.n	80003e8 <SystemClock_Config+0x44>
  {
    Error_Handler();
 80003e4:	f000 fd94 	bl	8000f10 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80003e8:	230f      	movs	r3, #15
 80003ea:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSE;
 80003ec:	2301      	movs	r3, #1
 80003ee:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80003f0:	2300      	movs	r3, #0
 80003f2:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80003f4:	2300      	movs	r3, #0
 80003f6:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80003f8:	2300      	movs	r3, #0
 80003fa:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80003fc:	1d3b      	adds	r3, r7, #4
 80003fe:	2100      	movs	r1, #0
 8000400:	4618      	mov	r0, r3
 8000402:	f002 f8db 	bl	80025bc <HAL_RCC_ClockConfig>
 8000406:	4603      	mov	r3, r0
 8000408:	2b00      	cmp	r3, #0
 800040a:	d001      	beq.n	8000410 <SystemClock_Config+0x6c>
  {
    Error_Handler();
 800040c:	f000 fd80 	bl	8000f10 <Error_Handler>
  }
}
 8000410:	bf00      	nop
 8000412:	3740      	adds	r7, #64	@ 0x40
 8000414:	46bd      	mov	sp, r7
 8000416:	bd80      	pop	{r7, pc}

08000418 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8000418:	b580      	push	{r7, lr}
 800041a:	b096      	sub	sp, #88	@ 0x58
 800041c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800041e:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 8000422:	2200      	movs	r2, #0
 8000424:	601a      	str	r2, [r3, #0]
 8000426:	605a      	str	r2, [r3, #4]
 8000428:	609a      	str	r2, [r3, #8]
 800042a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800042c:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8000430:	2200      	movs	r2, #0
 8000432:	601a      	str	r2, [r3, #0]
 8000434:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000436:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800043a:	2200      	movs	r2, #0
 800043c:	601a      	str	r2, [r3, #0]
 800043e:	605a      	str	r2, [r3, #4]
 8000440:	609a      	str	r2, [r3, #8]
 8000442:	60da      	str	r2, [r3, #12]
 8000444:	611a      	str	r2, [r3, #16]
 8000446:	615a      	str	r2, [r3, #20]
 8000448:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 800044a:	1d3b      	adds	r3, r7, #4
 800044c:	2220      	movs	r2, #32
 800044e:	2100      	movs	r1, #0
 8000450:	4618      	mov	r0, r3
 8000452:	f004 f87b 	bl	800454c <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8000456:	4b3f      	ldr	r3, [pc, #252]	@ (8000554 <MX_TIM1_Init+0x13c>)
 8000458:	4a3f      	ldr	r2, [pc, #252]	@ (8000558 <MX_TIM1_Init+0x140>)
 800045a:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 15;
 800045c:	4b3d      	ldr	r3, [pc, #244]	@ (8000554 <MX_TIM1_Init+0x13c>)
 800045e:	220f      	movs	r2, #15
 8000460:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000462:	4b3c      	ldr	r3, [pc, #240]	@ (8000554 <MX_TIM1_Init+0x13c>)
 8000464:	2200      	movs	r2, #0
 8000466:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 9999;
 8000468:	4b3a      	ldr	r3, [pc, #232]	@ (8000554 <MX_TIM1_Init+0x13c>)
 800046a:	f242 720f 	movw	r2, #9999	@ 0x270f
 800046e:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000470:	4b38      	ldr	r3, [pc, #224]	@ (8000554 <MX_TIM1_Init+0x13c>)
 8000472:	2200      	movs	r2, #0
 8000474:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8000476:	4b37      	ldr	r3, [pc, #220]	@ (8000554 <MX_TIM1_Init+0x13c>)
 8000478:	2200      	movs	r2, #0
 800047a:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800047c:	4b35      	ldr	r3, [pc, #212]	@ (8000554 <MX_TIM1_Init+0x13c>)
 800047e:	2200      	movs	r2, #0
 8000480:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8000482:	4834      	ldr	r0, [pc, #208]	@ (8000554 <MX_TIM1_Init+0x13c>)
 8000484:	f002 fa28 	bl	80028d8 <HAL_TIM_Base_Init>
 8000488:	4603      	mov	r3, r0
 800048a:	2b00      	cmp	r3, #0
 800048c:	d001      	beq.n	8000492 <MX_TIM1_Init+0x7a>
  {
    Error_Handler();
 800048e:	f000 fd3f 	bl	8000f10 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000492:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000496:	64bb      	str	r3, [r7, #72]	@ 0x48
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8000498:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 800049c:	4619      	mov	r1, r3
 800049e:	482d      	ldr	r0, [pc, #180]	@ (8000554 <MX_TIM1_Init+0x13c>)
 80004a0:	f002 fd60 	bl	8002f64 <HAL_TIM_ConfigClockSource>
 80004a4:	4603      	mov	r3, r0
 80004a6:	2b00      	cmp	r3, #0
 80004a8:	d001      	beq.n	80004ae <MX_TIM1_Init+0x96>
  {
    Error_Handler();
 80004aa:	f000 fd31 	bl	8000f10 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 80004ae:	4829      	ldr	r0, [pc, #164]	@ (8000554 <MX_TIM1_Init+0x13c>)
 80004b0:	f002 fab4 	bl	8002a1c <HAL_TIM_PWM_Init>
 80004b4:	4603      	mov	r3, r0
 80004b6:	2b00      	cmp	r3, #0
 80004b8:	d001      	beq.n	80004be <MX_TIM1_Init+0xa6>
  {
    Error_Handler();
 80004ba:	f000 fd29 	bl	8000f10 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80004be:	2300      	movs	r3, #0
 80004c0:	643b      	str	r3, [r7, #64]	@ 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80004c2:	2300      	movs	r3, #0
 80004c4:	647b      	str	r3, [r7, #68]	@ 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 80004c6:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 80004ca:	4619      	mov	r1, r3
 80004cc:	4821      	ldr	r0, [pc, #132]	@ (8000554 <MX_TIM1_Init+0x13c>)
 80004ce:	f003 f8e5 	bl	800369c <HAL_TIMEx_MasterConfigSynchronization>
 80004d2:	4603      	mov	r3, r0
 80004d4:	2b00      	cmp	r3, #0
 80004d6:	d001      	beq.n	80004dc <MX_TIM1_Init+0xc4>
  {
    Error_Handler();
 80004d8:	f000 fd1a 	bl	8000f10 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80004dc:	2360      	movs	r3, #96	@ 0x60
 80004de:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfigOC.Pulse = 850;
 80004e0:	f240 3352 	movw	r3, #850	@ 0x352
 80004e4:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80004e6:	2300      	movs	r3, #0
 80004e8:	62fb      	str	r3, [r7, #44]	@ 0x2c
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 80004ea:	2300      	movs	r3, #0
 80004ec:	633b      	str	r3, [r7, #48]	@ 0x30
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80004ee:	2300      	movs	r3, #0
 80004f0:	637b      	str	r3, [r7, #52]	@ 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 80004f2:	2300      	movs	r3, #0
 80004f4:	63bb      	str	r3, [r7, #56]	@ 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 80004f6:	2300      	movs	r3, #0
 80004f8:	63fb      	str	r3, [r7, #60]	@ 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80004fa:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80004fe:	2200      	movs	r2, #0
 8000500:	4619      	mov	r1, r3
 8000502:	4814      	ldr	r0, [pc, #80]	@ (8000554 <MX_TIM1_Init+0x13c>)
 8000504:	f002 fc6c 	bl	8002de0 <HAL_TIM_PWM_ConfigChannel>
 8000508:	4603      	mov	r3, r0
 800050a:	2b00      	cmp	r3, #0
 800050c:	d001      	beq.n	8000512 <MX_TIM1_Init+0xfa>
  {
    Error_Handler();
 800050e:	f000 fcff 	bl	8000f10 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8000512:	2300      	movs	r3, #0
 8000514:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8000516:	2300      	movs	r3, #0
 8000518:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 800051a:	2300      	movs	r3, #0
 800051c:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 800051e:	2300      	movs	r3, #0
 8000520:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8000522:	2300      	movs	r3, #0
 8000524:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8000526:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800052a:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 800052c:	2300      	movs	r3, #0
 800052e:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 8000530:	1d3b      	adds	r3, r7, #4
 8000532:	4619      	mov	r1, r3
 8000534:	4807      	ldr	r0, [pc, #28]	@ (8000554 <MX_TIM1_Init+0x13c>)
 8000536:	f003 f90f 	bl	8003758 <HAL_TIMEx_ConfigBreakDeadTime>
 800053a:	4603      	mov	r3, r0
 800053c:	2b00      	cmp	r3, #0
 800053e:	d001      	beq.n	8000544 <MX_TIM1_Init+0x12c>
  {
    Error_Handler();
 8000540:	f000 fce6 	bl	8000f10 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 8000544:	4803      	ldr	r0, [pc, #12]	@ (8000554 <MX_TIM1_Init+0x13c>)
 8000546:	f000 ffb9 	bl	80014bc <HAL_TIM_MspPostInit>

}
 800054a:	bf00      	nop
 800054c:	3758      	adds	r7, #88	@ 0x58
 800054e:	46bd      	mov	sp, r7
 8000550:	bd80      	pop	{r7, pc}
 8000552:	bf00      	nop
 8000554:	200000e0 	.word	0x200000e0
 8000558:	40012c00 	.word	0x40012c00

0800055c <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 800055c:	b580      	push	{r7, lr}
 800055e:	b08a      	sub	sp, #40	@ 0x28
 8000560:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000562:	f107 0320 	add.w	r3, r7, #32
 8000566:	2200      	movs	r2, #0
 8000568:	601a      	str	r2, [r3, #0]
 800056a:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800056c:	1d3b      	adds	r3, r7, #4
 800056e:	2200      	movs	r2, #0
 8000570:	601a      	str	r2, [r3, #0]
 8000572:	605a      	str	r2, [r3, #4]
 8000574:	609a      	str	r2, [r3, #8]
 8000576:	60da      	str	r2, [r3, #12]
 8000578:	611a      	str	r2, [r3, #16]
 800057a:	615a      	str	r2, [r3, #20]
 800057c:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 800057e:	4b28      	ldr	r3, [pc, #160]	@ (8000620 <MX_TIM2_Init+0xc4>)
 8000580:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000584:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 8-1;
 8000586:	4b26      	ldr	r3, [pc, #152]	@ (8000620 <MX_TIM2_Init+0xc4>)
 8000588:	2207      	movs	r2, #7
 800058a:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 800058c:	4b24      	ldr	r3, [pc, #144]	@ (8000620 <MX_TIM2_Init+0xc4>)
 800058e:	2200      	movs	r2, #0
 8000590:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 1000-1;
 8000592:	4b23      	ldr	r3, [pc, #140]	@ (8000620 <MX_TIM2_Init+0xc4>)
 8000594:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8000598:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800059a:	4b21      	ldr	r3, [pc, #132]	@ (8000620 <MX_TIM2_Init+0xc4>)
 800059c:	2200      	movs	r2, #0
 800059e:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80005a0:	4b1f      	ldr	r3, [pc, #124]	@ (8000620 <MX_TIM2_Init+0xc4>)
 80005a2:	2200      	movs	r2, #0
 80005a4:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 80005a6:	481e      	ldr	r0, [pc, #120]	@ (8000620 <MX_TIM2_Init+0xc4>)
 80005a8:	f002 fa38 	bl	8002a1c <HAL_TIM_PWM_Init>
 80005ac:	4603      	mov	r3, r0
 80005ae:	2b00      	cmp	r3, #0
 80005b0:	d001      	beq.n	80005b6 <MX_TIM2_Init+0x5a>
  {
    Error_Handler();
 80005b2:	f000 fcad 	bl	8000f10 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80005b6:	2300      	movs	r3, #0
 80005b8:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80005ba:	2300      	movs	r3, #0
 80005bc:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80005be:	f107 0320 	add.w	r3, r7, #32
 80005c2:	4619      	mov	r1, r3
 80005c4:	4816      	ldr	r0, [pc, #88]	@ (8000620 <MX_TIM2_Init+0xc4>)
 80005c6:	f003 f869 	bl	800369c <HAL_TIMEx_MasterConfigSynchronization>
 80005ca:	4603      	mov	r3, r0
 80005cc:	2b00      	cmp	r3, #0
 80005ce:	d001      	beq.n	80005d4 <MX_TIM2_Init+0x78>
  {
    Error_Handler();
 80005d0:	f000 fc9e 	bl	8000f10 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80005d4:	2360      	movs	r3, #96	@ 0x60
 80005d6:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80005d8:	2300      	movs	r3, #0
 80005da:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80005dc:	2300      	movs	r3, #0
 80005de:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80005e0:	2300      	movs	r3, #0
 80005e2:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80005e4:	1d3b      	adds	r3, r7, #4
 80005e6:	2204      	movs	r2, #4
 80005e8:	4619      	mov	r1, r3
 80005ea:	480d      	ldr	r0, [pc, #52]	@ (8000620 <MX_TIM2_Init+0xc4>)
 80005ec:	f002 fbf8 	bl	8002de0 <HAL_TIM_PWM_ConfigChannel>
 80005f0:	4603      	mov	r3, r0
 80005f2:	2b00      	cmp	r3, #0
 80005f4:	d001      	beq.n	80005fa <MX_TIM2_Init+0x9e>
  {
    Error_Handler();
 80005f6:	f000 fc8b 	bl	8000f10 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 80005fa:	1d3b      	adds	r3, r7, #4
 80005fc:	2208      	movs	r2, #8
 80005fe:	4619      	mov	r1, r3
 8000600:	4807      	ldr	r0, [pc, #28]	@ (8000620 <MX_TIM2_Init+0xc4>)
 8000602:	f002 fbed 	bl	8002de0 <HAL_TIM_PWM_ConfigChannel>
 8000606:	4603      	mov	r3, r0
 8000608:	2b00      	cmp	r3, #0
 800060a:	d001      	beq.n	8000610 <MX_TIM2_Init+0xb4>
  {
    Error_Handler();
 800060c:	f000 fc80 	bl	8000f10 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8000610:	4803      	ldr	r0, [pc, #12]	@ (8000620 <MX_TIM2_Init+0xc4>)
 8000612:	f000 ff53 	bl	80014bc <HAL_TIM_MspPostInit>

}
 8000616:	bf00      	nop
 8000618:	3728      	adds	r7, #40	@ 0x28
 800061a:	46bd      	mov	sp, r7
 800061c:	bd80      	pop	{r7, pc}
 800061e:	bf00      	nop
 8000620:	20000128 	.word	0x20000128

08000624 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8000624:	b580      	push	{r7, lr}
 8000626:	b08e      	sub	sp, #56	@ 0x38
 8000628:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800062a:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800062e:	2200      	movs	r2, #0
 8000630:	601a      	str	r2, [r3, #0]
 8000632:	605a      	str	r2, [r3, #4]
 8000634:	609a      	str	r2, [r3, #8]
 8000636:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000638:	f107 0320 	add.w	r3, r7, #32
 800063c:	2200      	movs	r2, #0
 800063e:	601a      	str	r2, [r3, #0]
 8000640:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000642:	1d3b      	adds	r3, r7, #4
 8000644:	2200      	movs	r2, #0
 8000646:	601a      	str	r2, [r3, #0]
 8000648:	605a      	str	r2, [r3, #4]
 800064a:	609a      	str	r2, [r3, #8]
 800064c:	60da      	str	r2, [r3, #12]
 800064e:	611a      	str	r2, [r3, #16]
 8000650:	615a      	str	r2, [r3, #20]
 8000652:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8000654:	4b32      	ldr	r3, [pc, #200]	@ (8000720 <MX_TIM3_Init+0xfc>)
 8000656:	4a33      	ldr	r2, [pc, #204]	@ (8000724 <MX_TIM3_Init+0x100>)
 8000658:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 15;
 800065a:	4b31      	ldr	r3, [pc, #196]	@ (8000720 <MX_TIM3_Init+0xfc>)
 800065c:	220f      	movs	r2, #15
 800065e:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000660:	4b2f      	ldr	r3, [pc, #188]	@ (8000720 <MX_TIM3_Init+0xfc>)
 8000662:	2200      	movs	r2, #0
 8000664:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 9999;
 8000666:	4b2e      	ldr	r3, [pc, #184]	@ (8000720 <MX_TIM3_Init+0xfc>)
 8000668:	f242 720f 	movw	r2, #9999	@ 0x270f
 800066c:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800066e:	4b2c      	ldr	r3, [pc, #176]	@ (8000720 <MX_TIM3_Init+0xfc>)
 8000670:	2200      	movs	r2, #0
 8000672:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000674:	4b2a      	ldr	r3, [pc, #168]	@ (8000720 <MX_TIM3_Init+0xfc>)
 8000676:	2200      	movs	r2, #0
 8000678:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 800067a:	4829      	ldr	r0, [pc, #164]	@ (8000720 <MX_TIM3_Init+0xfc>)
 800067c:	f002 f92c 	bl	80028d8 <HAL_TIM_Base_Init>
 8000680:	4603      	mov	r3, r0
 8000682:	2b00      	cmp	r3, #0
 8000684:	d001      	beq.n	800068a <MX_TIM3_Init+0x66>
  {
    Error_Handler();
 8000686:	f000 fc43 	bl	8000f10 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800068a:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800068e:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000690:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8000694:	4619      	mov	r1, r3
 8000696:	4822      	ldr	r0, [pc, #136]	@ (8000720 <MX_TIM3_Init+0xfc>)
 8000698:	f002 fc64 	bl	8002f64 <HAL_TIM_ConfigClockSource>
 800069c:	4603      	mov	r3, r0
 800069e:	2b00      	cmp	r3, #0
 80006a0:	d001      	beq.n	80006a6 <MX_TIM3_Init+0x82>
  {
    Error_Handler();
 80006a2:	f000 fc35 	bl	8000f10 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 80006a6:	481e      	ldr	r0, [pc, #120]	@ (8000720 <MX_TIM3_Init+0xfc>)
 80006a8:	f002 f9b8 	bl	8002a1c <HAL_TIM_PWM_Init>
 80006ac:	4603      	mov	r3, r0
 80006ae:	2b00      	cmp	r3, #0
 80006b0:	d001      	beq.n	80006b6 <MX_TIM3_Init+0x92>
  {
    Error_Handler();
 80006b2:	f000 fc2d 	bl	8000f10 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80006b6:	2300      	movs	r3, #0
 80006b8:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80006ba:	2300      	movs	r3, #0
 80006bc:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80006be:	f107 0320 	add.w	r3, r7, #32
 80006c2:	4619      	mov	r1, r3
 80006c4:	4816      	ldr	r0, [pc, #88]	@ (8000720 <MX_TIM3_Init+0xfc>)
 80006c6:	f002 ffe9 	bl	800369c <HAL_TIMEx_MasterConfigSynchronization>
 80006ca:	4603      	mov	r3, r0
 80006cc:	2b00      	cmp	r3, #0
 80006ce:	d001      	beq.n	80006d4 <MX_TIM3_Init+0xb0>
  {
    Error_Handler();
 80006d0:	f000 fc1e 	bl	8000f10 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80006d4:	2360      	movs	r3, #96	@ 0x60
 80006d6:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80006d8:	2300      	movs	r3, #0
 80006da:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80006dc:	2300      	movs	r3, #0
 80006de:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80006e0:	2300      	movs	r3, #0
 80006e2:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80006e4:	1d3b      	adds	r3, r7, #4
 80006e6:	2200      	movs	r2, #0
 80006e8:	4619      	mov	r1, r3
 80006ea:	480d      	ldr	r0, [pc, #52]	@ (8000720 <MX_TIM3_Init+0xfc>)
 80006ec:	f002 fb78 	bl	8002de0 <HAL_TIM_PWM_ConfigChannel>
 80006f0:	4603      	mov	r3, r0
 80006f2:	2b00      	cmp	r3, #0
 80006f4:	d001      	beq.n	80006fa <MX_TIM3_Init+0xd6>
  {
    Error_Handler();
 80006f6:	f000 fc0b 	bl	8000f10 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 80006fa:	1d3b      	adds	r3, r7, #4
 80006fc:	220c      	movs	r2, #12
 80006fe:	4619      	mov	r1, r3
 8000700:	4807      	ldr	r0, [pc, #28]	@ (8000720 <MX_TIM3_Init+0xfc>)
 8000702:	f002 fb6d 	bl	8002de0 <HAL_TIM_PWM_ConfigChannel>
 8000706:	4603      	mov	r3, r0
 8000708:	2b00      	cmp	r3, #0
 800070a:	d001      	beq.n	8000710 <MX_TIM3_Init+0xec>
  {
    Error_Handler();
 800070c:	f000 fc00 	bl	8000f10 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 8000710:	4803      	ldr	r0, [pc, #12]	@ (8000720 <MX_TIM3_Init+0xfc>)
 8000712:	f000 fed3 	bl	80014bc <HAL_TIM_MspPostInit>

}
 8000716:	bf00      	nop
 8000718:	3738      	adds	r7, #56	@ 0x38
 800071a:	46bd      	mov	sp, r7
 800071c:	bd80      	pop	{r7, pc}
 800071e:	bf00      	nop
 8000720:	20000170 	.word	0x20000170
 8000724:	40000400 	.word	0x40000400

08000728 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 8000728:	b580      	push	{r7, lr}
 800072a:	b08a      	sub	sp, #40	@ 0x28
 800072c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800072e:	f107 0320 	add.w	r3, r7, #32
 8000732:	2200      	movs	r2, #0
 8000734:	601a      	str	r2, [r3, #0]
 8000736:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000738:	1d3b      	adds	r3, r7, #4
 800073a:	2200      	movs	r2, #0
 800073c:	601a      	str	r2, [r3, #0]
 800073e:	605a      	str	r2, [r3, #4]
 8000740:	609a      	str	r2, [r3, #8]
 8000742:	60da      	str	r2, [r3, #12]
 8000744:	611a      	str	r2, [r3, #16]
 8000746:	615a      	str	r2, [r3, #20]
 8000748:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 800074a:	4b27      	ldr	r3, [pc, #156]	@ (80007e8 <MX_TIM4_Init+0xc0>)
 800074c:	4a27      	ldr	r2, [pc, #156]	@ (80007ec <MX_TIM4_Init+0xc4>)
 800074e:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 8-1;
 8000750:	4b25      	ldr	r3, [pc, #148]	@ (80007e8 <MX_TIM4_Init+0xc0>)
 8000752:	2207      	movs	r2, #7
 8000754:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000756:	4b24      	ldr	r3, [pc, #144]	@ (80007e8 <MX_TIM4_Init+0xc0>)
 8000758:	2200      	movs	r2, #0
 800075a:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 1000-1;
 800075c:	4b22      	ldr	r3, [pc, #136]	@ (80007e8 <MX_TIM4_Init+0xc0>)
 800075e:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8000762:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000764:	4b20      	ldr	r3, [pc, #128]	@ (80007e8 <MX_TIM4_Init+0xc0>)
 8000766:	2200      	movs	r2, #0
 8000768:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800076a:	4b1f      	ldr	r3, [pc, #124]	@ (80007e8 <MX_TIM4_Init+0xc0>)
 800076c:	2200      	movs	r2, #0
 800076e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 8000770:	481d      	ldr	r0, [pc, #116]	@ (80007e8 <MX_TIM4_Init+0xc0>)
 8000772:	f002 f953 	bl	8002a1c <HAL_TIM_PWM_Init>
 8000776:	4603      	mov	r3, r0
 8000778:	2b00      	cmp	r3, #0
 800077a:	d001      	beq.n	8000780 <MX_TIM4_Init+0x58>
  {
    Error_Handler();
 800077c:	f000 fbc8 	bl	8000f10 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000780:	2300      	movs	r3, #0
 8000782:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000784:	2300      	movs	r3, #0
 8000786:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8000788:	f107 0320 	add.w	r3, r7, #32
 800078c:	4619      	mov	r1, r3
 800078e:	4816      	ldr	r0, [pc, #88]	@ (80007e8 <MX_TIM4_Init+0xc0>)
 8000790:	f002 ff84 	bl	800369c <HAL_TIMEx_MasterConfigSynchronization>
 8000794:	4603      	mov	r3, r0
 8000796:	2b00      	cmp	r3, #0
 8000798:	d001      	beq.n	800079e <MX_TIM4_Init+0x76>
  {
    Error_Handler();
 800079a:	f000 fbb9 	bl	8000f10 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800079e:	2360      	movs	r3, #96	@ 0x60
 80007a0:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80007a2:	2300      	movs	r3, #0
 80007a4:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80007a6:	2300      	movs	r3, #0
 80007a8:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80007aa:	2300      	movs	r3, #0
 80007ac:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80007ae:	1d3b      	adds	r3, r7, #4
 80007b0:	2200      	movs	r2, #0
 80007b2:	4619      	mov	r1, r3
 80007b4:	480c      	ldr	r0, [pc, #48]	@ (80007e8 <MX_TIM4_Init+0xc0>)
 80007b6:	f002 fb13 	bl	8002de0 <HAL_TIM_PWM_ConfigChannel>
 80007ba:	4603      	mov	r3, r0
 80007bc:	2b00      	cmp	r3, #0
 80007be:	d001      	beq.n	80007c4 <MX_TIM4_Init+0x9c>
  {
    Error_Handler();
 80007c0:	f000 fba6 	bl	8000f10 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 80007c4:	1d3b      	adds	r3, r7, #4
 80007c6:	2208      	movs	r2, #8
 80007c8:	4619      	mov	r1, r3
 80007ca:	4807      	ldr	r0, [pc, #28]	@ (80007e8 <MX_TIM4_Init+0xc0>)
 80007cc:	f002 fb08 	bl	8002de0 <HAL_TIM_PWM_ConfigChannel>
 80007d0:	4603      	mov	r3, r0
 80007d2:	2b00      	cmp	r3, #0
 80007d4:	d001      	beq.n	80007da <MX_TIM4_Init+0xb2>
  {
    Error_Handler();
 80007d6:	f000 fb9b 	bl	8000f10 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */
  HAL_TIM_MspPostInit(&htim4);
 80007da:	4803      	ldr	r0, [pc, #12]	@ (80007e8 <MX_TIM4_Init+0xc0>)
 80007dc:	f000 fe6e 	bl	80014bc <HAL_TIM_MspPostInit>

}
 80007e0:	bf00      	nop
 80007e2:	3728      	adds	r7, #40	@ 0x28
 80007e4:	46bd      	mov	sp, r7
 80007e6:	bd80      	pop	{r7, pc}
 80007e8:	200001b8 	.word	0x200001b8
 80007ec:	40000800 	.word	0x40000800

080007f0 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 80007f0:	b580      	push	{r7, lr}
 80007f2:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 80007f4:	4b11      	ldr	r3, [pc, #68]	@ (800083c <MX_USART1_UART_Init+0x4c>)
 80007f6:	4a12      	ldr	r2, [pc, #72]	@ (8000840 <MX_USART1_UART_Init+0x50>)
 80007f8:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 9600;
 80007fa:	4b10      	ldr	r3, [pc, #64]	@ (800083c <MX_USART1_UART_Init+0x4c>)
 80007fc:	f44f 5216 	mov.w	r2, #9600	@ 0x2580
 8000800:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8000802:	4b0e      	ldr	r3, [pc, #56]	@ (800083c <MX_USART1_UART_Init+0x4c>)
 8000804:	2200      	movs	r2, #0
 8000806:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8000808:	4b0c      	ldr	r3, [pc, #48]	@ (800083c <MX_USART1_UART_Init+0x4c>)
 800080a:	2200      	movs	r2, #0
 800080c:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 800080e:	4b0b      	ldr	r3, [pc, #44]	@ (800083c <MX_USART1_UART_Init+0x4c>)
 8000810:	2200      	movs	r2, #0
 8000812:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8000814:	4b09      	ldr	r3, [pc, #36]	@ (800083c <MX_USART1_UART_Init+0x4c>)
 8000816:	220c      	movs	r2, #12
 8000818:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800081a:	4b08      	ldr	r3, [pc, #32]	@ (800083c <MX_USART1_UART_Init+0x4c>)
 800081c:	2200      	movs	r2, #0
 800081e:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8000820:	4b06      	ldr	r3, [pc, #24]	@ (800083c <MX_USART1_UART_Init+0x4c>)
 8000822:	2200      	movs	r2, #0
 8000824:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8000826:	4805      	ldr	r0, [pc, #20]	@ (800083c <MX_USART1_UART_Init+0x4c>)
 8000828:	f002 fff9 	bl	800381e <HAL_UART_Init>
 800082c:	4603      	mov	r3, r0
 800082e:	2b00      	cmp	r3, #0
 8000830:	d001      	beq.n	8000836 <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 8000832:	f000 fb6d 	bl	8000f10 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8000836:	bf00      	nop
 8000838:	bd80      	pop	{r7, pc}
 800083a:	bf00      	nop
 800083c:	20000200 	.word	0x20000200
 8000840:	40013800 	.word	0x40013800

08000844 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8000844:	b580      	push	{r7, lr}
 8000846:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8000848:	4b11      	ldr	r3, [pc, #68]	@ (8000890 <MX_USART2_UART_Init+0x4c>)
 800084a:	4a12      	ldr	r2, [pc, #72]	@ (8000894 <MX_USART2_UART_Init+0x50>)
 800084c:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 800084e:	4b10      	ldr	r3, [pc, #64]	@ (8000890 <MX_USART2_UART_Init+0x4c>)
 8000850:	f44f 5216 	mov.w	r2, #9600	@ 0x2580
 8000854:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8000856:	4b0e      	ldr	r3, [pc, #56]	@ (8000890 <MX_USART2_UART_Init+0x4c>)
 8000858:	2200      	movs	r2, #0
 800085a:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 800085c:	4b0c      	ldr	r3, [pc, #48]	@ (8000890 <MX_USART2_UART_Init+0x4c>)
 800085e:	2200      	movs	r2, #0
 8000860:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8000862:	4b0b      	ldr	r3, [pc, #44]	@ (8000890 <MX_USART2_UART_Init+0x4c>)
 8000864:	2200      	movs	r2, #0
 8000866:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8000868:	4b09      	ldr	r3, [pc, #36]	@ (8000890 <MX_USART2_UART_Init+0x4c>)
 800086a:	220c      	movs	r2, #12
 800086c:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800086e:	4b08      	ldr	r3, [pc, #32]	@ (8000890 <MX_USART2_UART_Init+0x4c>)
 8000870:	2200      	movs	r2, #0
 8000872:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8000874:	4b06      	ldr	r3, [pc, #24]	@ (8000890 <MX_USART2_UART_Init+0x4c>)
 8000876:	2200      	movs	r2, #0
 8000878:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800087a:	4805      	ldr	r0, [pc, #20]	@ (8000890 <MX_USART2_UART_Init+0x4c>)
 800087c:	f002 ffcf 	bl	800381e <HAL_UART_Init>
 8000880:	4603      	mov	r3, r0
 8000882:	2b00      	cmp	r3, #0
 8000884:	d001      	beq.n	800088a <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8000886:	f000 fb43 	bl	8000f10 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800088a:	bf00      	nop
 800088c:	bd80      	pop	{r7, pc}
 800088e:	bf00      	nop
 8000890:	20000248 	.word	0x20000248
 8000894:	40004400 	.word	0x40004400

08000898 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000898:	b580      	push	{r7, lr}
 800089a:	b088      	sub	sp, #32
 800089c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800089e:	f107 0310 	add.w	r3, r7, #16
 80008a2:	2200      	movs	r2, #0
 80008a4:	601a      	str	r2, [r3, #0]
 80008a6:	605a      	str	r2, [r3, #4]
 80008a8:	609a      	str	r2, [r3, #8]
 80008aa:	60da      	str	r2, [r3, #12]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80008ac:	4b38      	ldr	r3, [pc, #224]	@ (8000990 <MX_GPIO_Init+0xf8>)
 80008ae:	699b      	ldr	r3, [r3, #24]
 80008b0:	4a37      	ldr	r2, [pc, #220]	@ (8000990 <MX_GPIO_Init+0xf8>)
 80008b2:	f043 0310 	orr.w	r3, r3, #16
 80008b6:	6193      	str	r3, [r2, #24]
 80008b8:	4b35      	ldr	r3, [pc, #212]	@ (8000990 <MX_GPIO_Init+0xf8>)
 80008ba:	699b      	ldr	r3, [r3, #24]
 80008bc:	f003 0310 	and.w	r3, r3, #16
 80008c0:	60fb      	str	r3, [r7, #12]
 80008c2:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80008c4:	4b32      	ldr	r3, [pc, #200]	@ (8000990 <MX_GPIO_Init+0xf8>)
 80008c6:	699b      	ldr	r3, [r3, #24]
 80008c8:	4a31      	ldr	r2, [pc, #196]	@ (8000990 <MX_GPIO_Init+0xf8>)
 80008ca:	f043 0320 	orr.w	r3, r3, #32
 80008ce:	6193      	str	r3, [r2, #24]
 80008d0:	4b2f      	ldr	r3, [pc, #188]	@ (8000990 <MX_GPIO_Init+0xf8>)
 80008d2:	699b      	ldr	r3, [r3, #24]
 80008d4:	f003 0320 	and.w	r3, r3, #32
 80008d8:	60bb      	str	r3, [r7, #8]
 80008da:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80008dc:	4b2c      	ldr	r3, [pc, #176]	@ (8000990 <MX_GPIO_Init+0xf8>)
 80008de:	699b      	ldr	r3, [r3, #24]
 80008e0:	4a2b      	ldr	r2, [pc, #172]	@ (8000990 <MX_GPIO_Init+0xf8>)
 80008e2:	f043 0304 	orr.w	r3, r3, #4
 80008e6:	6193      	str	r3, [r2, #24]
 80008e8:	4b29      	ldr	r3, [pc, #164]	@ (8000990 <MX_GPIO_Init+0xf8>)
 80008ea:	699b      	ldr	r3, [r3, #24]
 80008ec:	f003 0304 	and.w	r3, r3, #4
 80008f0:	607b      	str	r3, [r7, #4]
 80008f2:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80008f4:	4b26      	ldr	r3, [pc, #152]	@ (8000990 <MX_GPIO_Init+0xf8>)
 80008f6:	699b      	ldr	r3, [r3, #24]
 80008f8:	4a25      	ldr	r2, [pc, #148]	@ (8000990 <MX_GPIO_Init+0xf8>)
 80008fa:	f043 0308 	orr.w	r3, r3, #8
 80008fe:	6193      	str	r3, [r2, #24]
 8000900:	4b23      	ldr	r3, [pc, #140]	@ (8000990 <MX_GPIO_Init+0xf8>)
 8000902:	699b      	ldr	r3, [r3, #24]
 8000904:	f003 0308 	and.w	r3, r3, #8
 8000908:	603b      	str	r3, [r7, #0]
 800090a:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(head_light_GPIO_Port, head_light_Pin, GPIO_PIN_RESET);
 800090c:	2200      	movs	r2, #0
 800090e:	2180      	movs	r1, #128	@ 0x80
 8000910:	4820      	ldr	r0, [pc, #128]	@ (8000994 <MX_GPIO_Init+0xfc>)
 8000912:	f001 fb97 	bl	8002044 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_10|GPIO_PIN_12, GPIO_PIN_RESET);
 8000916:	2200      	movs	r2, #0
 8000918:	f44f 51a0 	mov.w	r1, #5120	@ 0x1400
 800091c:	481e      	ldr	r0, [pc, #120]	@ (8000998 <MX_GPIO_Init+0x100>)
 800091e:	f001 fb91 	bl	8002044 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8000922:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8000926:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000928:	4b1c      	ldr	r3, [pc, #112]	@ (800099c <MX_GPIO_Init+0x104>)
 800092a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800092c:	2300      	movs	r3, #0
 800092e:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8000930:	f107 0310 	add.w	r3, r7, #16
 8000934:	4619      	mov	r1, r3
 8000936:	4818      	ldr	r0, [pc, #96]	@ (8000998 <MX_GPIO_Init+0x100>)
 8000938:	f001 fa00 	bl	8001d3c <HAL_GPIO_Init>

  /*Configure GPIO pin : head_light_Pin */
  GPIO_InitStruct.Pin = head_light_Pin;
 800093c:	2380      	movs	r3, #128	@ 0x80
 800093e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000940:	2301      	movs	r3, #1
 8000942:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000944:	2300      	movs	r3, #0
 8000946:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000948:	2302      	movs	r3, #2
 800094a:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(head_light_GPIO_Port, &GPIO_InitStruct);
 800094c:	f107 0310 	add.w	r3, r7, #16
 8000950:	4619      	mov	r1, r3
 8000952:	4810      	ldr	r0, [pc, #64]	@ (8000994 <MX_GPIO_Init+0xfc>)
 8000954:	f001 f9f2 	bl	8001d3c <HAL_GPIO_Init>

  /*Configure GPIO pins : PC10 PC12 */
  GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8000958:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 800095c:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800095e:	2301      	movs	r3, #1
 8000960:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000962:	2300      	movs	r3, #0
 8000964:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000966:	2302      	movs	r3, #2
 8000968:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800096a:	f107 0310 	add.w	r3, r7, #16
 800096e:	4619      	mov	r1, r3
 8000970:	4809      	ldr	r0, [pc, #36]	@ (8000998 <MX_GPIO_Init+0x100>)
 8000972:	f001 f9e3 	bl	8001d3c <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8000976:	2200      	movs	r2, #0
 8000978:	2100      	movs	r1, #0
 800097a:	2028      	movs	r0, #40	@ 0x28
 800097c:	f001 f8f5 	bl	8001b6a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8000980:	2028      	movs	r0, #40	@ 0x28
 8000982:	f001 f90e 	bl	8001ba2 <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000986:	bf00      	nop
 8000988:	3720      	adds	r7, #32
 800098a:	46bd      	mov	sp, r7
 800098c:	bd80      	pop	{r7, pc}
 800098e:	bf00      	nop
 8000990:	40021000 	.word	0x40021000
 8000994:	40010800 	.word	0x40010800
 8000998:	40011000 	.word	0x40011000
 800099c:	10110000 	.word	0x10110000

080009a0 <printActuatorPacket>:

/* USER CODE BEGIN 4 */
void printActuatorPacket(void)
{
 80009a0:	b590      	push	{r4, r7, lr}
 80009a2:	b097      	sub	sp, #92	@ 0x5c
 80009a4:	af04      	add	r7, sp, #16
    char msg[64];
    int len;

    // 1. start_byte
    len = snprintf(msg, sizeof(msg), "start_byte: 0x%02X\r\n", controlPacket.start_byte);
 80009a6:	4b4c      	ldr	r3, [pc, #304]	@ (8000ad8 <printActuatorPacket+0x138>)
 80009a8:	781b      	ldrb	r3, [r3, #0]
 80009aa:	1d38      	adds	r0, r7, #4
 80009ac:	4a4b      	ldr	r2, [pc, #300]	@ (8000adc <printActuatorPacket+0x13c>)
 80009ae:	2140      	movs	r1, #64	@ 0x40
 80009b0:	f003 fd98 	bl	80044e4 <sniprintf>
 80009b4:	6478      	str	r0, [r7, #68]	@ 0x44
    HAL_UART_Transmit(&huart2, (uint8_t*)msg, len, HAL_MAX_DELAY);
 80009b6:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80009b8:	b29a      	uxth	r2, r3
 80009ba:	1d39      	adds	r1, r7, #4
 80009bc:	f04f 33ff 	mov.w	r3, #4294967295
 80009c0:	4847      	ldr	r0, [pc, #284]	@ (8000ae0 <printActuatorPacket+0x140>)
 80009c2:	f002 ff7c 	bl	80038be <HAL_UART_Transmit>

    // 2. packet_id
    len = snprintf(msg, sizeof(msg), "packet_id:  0x%02X\r\n", controlPacket.packet_id);
 80009c6:	4b44      	ldr	r3, [pc, #272]	@ (8000ad8 <printActuatorPacket+0x138>)
 80009c8:	785b      	ldrb	r3, [r3, #1]
 80009ca:	1d38      	adds	r0, r7, #4
 80009cc:	4a45      	ldr	r2, [pc, #276]	@ (8000ae4 <printActuatorPacket+0x144>)
 80009ce:	2140      	movs	r1, #64	@ 0x40
 80009d0:	f003 fd88 	bl	80044e4 <sniprintf>
 80009d4:	6478      	str	r0, [r7, #68]	@ 0x44
    HAL_UART_Transmit(&huart2, (uint8_t*)msg, len, HAL_MAX_DELAY);
 80009d6:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80009d8:	b29a      	uxth	r2, r3
 80009da:	1d39      	adds	r1, r7, #4
 80009dc:	f04f 33ff 	mov.w	r3, #4294967295
 80009e0:	483f      	ldr	r0, [pc, #252]	@ (8000ae0 <printActuatorPacket+0x140>)
 80009e2:	f002 ff6c 	bl	80038be <HAL_UART_Transmit>

    // 3. RGB bits
    len = snprintf(msg, sizeof(msg),
        "LED RGB:    R=%u G=%u B=%u\r\n",
		controlPacket.R, controlPacket.G, controlPacket.B);
 80009e6:	4b3c      	ldr	r3, [pc, #240]	@ (8000ad8 <printActuatorPacket+0x138>)
 80009e8:	789b      	ldrb	r3, [r3, #2]
 80009ea:	f3c3 0300 	ubfx	r3, r3, #0, #1
 80009ee:	b2db      	uxtb	r3, r3
    len = snprintf(msg, sizeof(msg),
 80009f0:	4619      	mov	r1, r3
		controlPacket.R, controlPacket.G, controlPacket.B);
 80009f2:	4b39      	ldr	r3, [pc, #228]	@ (8000ad8 <printActuatorPacket+0x138>)
 80009f4:	789b      	ldrb	r3, [r3, #2]
 80009f6:	f3c3 0340 	ubfx	r3, r3, #1, #1
 80009fa:	b2db      	uxtb	r3, r3
    len = snprintf(msg, sizeof(msg),
 80009fc:	461a      	mov	r2, r3
		controlPacket.R, controlPacket.G, controlPacket.B);
 80009fe:	4b36      	ldr	r3, [pc, #216]	@ (8000ad8 <printActuatorPacket+0x138>)
 8000a00:	789b      	ldrb	r3, [r3, #2]
 8000a02:	f3c3 0380 	ubfx	r3, r3, #2, #1
 8000a06:	b2db      	uxtb	r3, r3
    len = snprintf(msg, sizeof(msg),
 8000a08:	1d38      	adds	r0, r7, #4
 8000a0a:	9301      	str	r3, [sp, #4]
 8000a0c:	9200      	str	r2, [sp, #0]
 8000a0e:	460b      	mov	r3, r1
 8000a10:	4a35      	ldr	r2, [pc, #212]	@ (8000ae8 <printActuatorPacket+0x148>)
 8000a12:	2140      	movs	r1, #64	@ 0x40
 8000a14:	f003 fd66 	bl	80044e4 <sniprintf>
 8000a18:	6478      	str	r0, [r7, #68]	@ 0x44
    HAL_UART_Transmit(&huart2, (uint8_t*)msg, len, HAL_MAX_DELAY);
 8000a1a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8000a1c:	b29a      	uxth	r2, r3
 8000a1e:	1d39      	adds	r1, r7, #4
 8000a20:	f04f 33ff 	mov.w	r3, #4294967295
 8000a24:	482e      	ldr	r0, [pc, #184]	@ (8000ae0 <printActuatorPacket+0x140>)
 8000a26:	f002 ff4a 	bl	80038be <HAL_UART_Transmit>

    // 4. fan, led, buzzer, driving_mode
    len = snprintf(msg, sizeof(msg),
        "fan: %u  led: %u  buzzer: %u  mode: %u\r\n",
        controlPacket.fan, controlPacket.led, controlPacket.buzzer, controlPacket.driving_mode);
 8000a2a:	4b2b      	ldr	r3, [pc, #172]	@ (8000ad8 <printActuatorPacket+0x138>)
 8000a2c:	78db      	ldrb	r3, [r3, #3]
 8000a2e:	f3c3 0301 	ubfx	r3, r3, #0, #2
 8000a32:	b2db      	uxtb	r3, r3
    len = snprintf(msg, sizeof(msg),
 8000a34:	461c      	mov	r4, r3
        controlPacket.fan, controlPacket.led, controlPacket.buzzer, controlPacket.driving_mode);
 8000a36:	4b28      	ldr	r3, [pc, #160]	@ (8000ad8 <printActuatorPacket+0x138>)
 8000a38:	78db      	ldrb	r3, [r3, #3]
 8000a3a:	f3c3 0380 	ubfx	r3, r3, #2, #1
 8000a3e:	b2db      	uxtb	r3, r3
    len = snprintf(msg, sizeof(msg),
 8000a40:	461a      	mov	r2, r3
        controlPacket.fan, controlPacket.led, controlPacket.buzzer, controlPacket.driving_mode);
 8000a42:	4b25      	ldr	r3, [pc, #148]	@ (8000ad8 <printActuatorPacket+0x138>)
 8000a44:	78db      	ldrb	r3, [r3, #3]
 8000a46:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8000a4a:	b2db      	uxtb	r3, r3
    len = snprintf(msg, sizeof(msg),
 8000a4c:	4619      	mov	r1, r3
        controlPacket.fan, controlPacket.led, controlPacket.buzzer, controlPacket.driving_mode);
 8000a4e:	4b22      	ldr	r3, [pc, #136]	@ (8000ad8 <printActuatorPacket+0x138>)
 8000a50:	78db      	ldrb	r3, [r3, #3]
 8000a52:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8000a56:	b2db      	uxtb	r3, r3
    len = snprintf(msg, sizeof(msg),
 8000a58:	1d38      	adds	r0, r7, #4
 8000a5a:	9302      	str	r3, [sp, #8]
 8000a5c:	9101      	str	r1, [sp, #4]
 8000a5e:	9200      	str	r2, [sp, #0]
 8000a60:	4623      	mov	r3, r4
 8000a62:	4a22      	ldr	r2, [pc, #136]	@ (8000aec <printActuatorPacket+0x14c>)
 8000a64:	2140      	movs	r1, #64	@ 0x40
 8000a66:	f003 fd3d 	bl	80044e4 <sniprintf>
 8000a6a:	6478      	str	r0, [r7, #68]	@ 0x44
    HAL_UART_Transmit(&huart2, (uint8_t*)msg, len, HAL_MAX_DELAY);
 8000a6c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8000a6e:	b29a      	uxth	r2, r3
 8000a70:	1d39      	adds	r1, r7, #4
 8000a72:	f04f 33ff 	mov.w	r3, #4294967295
 8000a76:	481a      	ldr	r0, [pc, #104]	@ (8000ae0 <printActuatorPacket+0x140>)
 8000a78:	f002 ff21 	bl	80038be <HAL_UART_Transmit>
    // 5. servo angles
    len = snprintf(msg, sizeof(msg),
        "servo_chair:  %u\r\n"
        "servo_window: %u\r\n"
        "front_distance: %u\r\n",
        controlPacket.servo_chair,
 8000a7c:	4b16      	ldr	r3, [pc, #88]	@ (8000ad8 <printActuatorPacket+0x138>)
 8000a7e:	889b      	ldrh	r3, [r3, #4]
    len = snprintf(msg, sizeof(msg),
 8000a80:	4619      	mov	r1, r3
        controlPacket.servo_window,
 8000a82:	4b15      	ldr	r3, [pc, #84]	@ (8000ad8 <printActuatorPacket+0x138>)
 8000a84:	88db      	ldrh	r3, [r3, #6]
    len = snprintf(msg, sizeof(msg),
 8000a86:	461a      	mov	r2, r3
        controlPacket.front_distance);
 8000a88:	4b13      	ldr	r3, [pc, #76]	@ (8000ad8 <printActuatorPacket+0x138>)
 8000a8a:	891b      	ldrh	r3, [r3, #8]
    len = snprintf(msg, sizeof(msg),
 8000a8c:	1d38      	adds	r0, r7, #4
 8000a8e:	9301      	str	r3, [sp, #4]
 8000a90:	9200      	str	r2, [sp, #0]
 8000a92:	460b      	mov	r3, r1
 8000a94:	4a16      	ldr	r2, [pc, #88]	@ (8000af0 <printActuatorPacket+0x150>)
 8000a96:	2140      	movs	r1, #64	@ 0x40
 8000a98:	f003 fd24 	bl	80044e4 <sniprintf>
 8000a9c:	6478      	str	r0, [r7, #68]	@ 0x44
    HAL_UART_Transmit(&huart2, (uint8_t*)msg, len, HAL_MAX_DELAY);
 8000a9e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8000aa0:	b29a      	uxth	r2, r3
 8000aa2:	1d39      	adds	r1, r7, #4
 8000aa4:	f04f 33ff 	mov.w	r3, #4294967295
 8000aa8:	480d      	ldr	r0, [pc, #52]	@ (8000ae0 <printActuatorPacket+0x140>)
 8000aaa:	f002 ff08 	bl	80038be <HAL_UART_Transmit>

    // 6. crc
    len = snprintf(msg, sizeof(msg), "crc: 0x%02X\r\n\r\n", controlPacket.crc);
 8000aae:	4b0a      	ldr	r3, [pc, #40]	@ (8000ad8 <printActuatorPacket+0x138>)
 8000ab0:	7a9b      	ldrb	r3, [r3, #10]
 8000ab2:	1d38      	adds	r0, r7, #4
 8000ab4:	4a0f      	ldr	r2, [pc, #60]	@ (8000af4 <printActuatorPacket+0x154>)
 8000ab6:	2140      	movs	r1, #64	@ 0x40
 8000ab8:	f003 fd14 	bl	80044e4 <sniprintf>
 8000abc:	6478      	str	r0, [r7, #68]	@ 0x44
    HAL_UART_Transmit(&huart2, (uint8_t*)msg, len, HAL_MAX_DELAY);
 8000abe:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8000ac0:	b29a      	uxth	r2, r3
 8000ac2:	1d39      	adds	r1, r7, #4
 8000ac4:	f04f 33ff 	mov.w	r3, #4294967295
 8000ac8:	4805      	ldr	r0, [pc, #20]	@ (8000ae0 <printActuatorPacket+0x140>)
 8000aca:	f002 fef8 	bl	80038be <HAL_UART_Transmit>
}
 8000ace:	bf00      	nop
 8000ad0:	374c      	adds	r7, #76	@ 0x4c
 8000ad2:	46bd      	mov	sp, r7
 8000ad4:	bd90      	pop	{r4, r7, pc}
 8000ad6:	bf00      	nop
 8000ad8:	20000390 	.word	0x20000390
 8000adc:	08004e84 	.word	0x08004e84
 8000ae0:	20000248 	.word	0x20000248
 8000ae4:	08004e9c 	.word	0x08004e9c
 8000ae8:	08004eb4 	.word	0x08004eb4
 8000aec:	08004ed4 	.word	0x08004ed4
 8000af0:	08004f00 	.word	0x08004f00
 8000af4:	08004f3c 	.word	0x08004f3c

08000af8 <handlePacket>:
void handlePacket(void)
{
 8000af8:	b580      	push	{r7, lr}
 8000afa:	b082      	sub	sp, #8
 8000afc:	af00      	add	r7, sp, #0
//  {
//    rxPtr += ACTUATOR_PACKET_SIZE;
//  }
//  HAL_UART_Receive_IT(&huart1,rx_buffer+rxPtr,ACTUATOR_PACKET_SIZE);

  uint8_t _crc = calculate_checksum(rx_buffer_1,ACTUATOR_PACKET_SIZE-1);
 8000afe:	210a      	movs	r1, #10
 8000b00:	480b      	ldr	r0, [pc, #44]	@ (8000b30 <handlePacket+0x38>)
 8000b02:	f000 fea7 	bl	8001854 <calculate_checksum>
 8000b06:	4603      	mov	r3, r0
 8000b08:	71fb      	strb	r3, [r7, #7]
  	if(_crc == rx_buffer_1[ACTUATOR_PACKET_SIZE-1])
 8000b0a:	4b09      	ldr	r3, [pc, #36]	@ (8000b30 <handlePacket+0x38>)
 8000b0c:	7a9b      	ldrb	r3, [r3, #10]
 8000b0e:	79fa      	ldrb	r2, [r7, #7]
 8000b10:	429a      	cmp	r2, r3
 8000b12:	d103      	bne.n	8000b1c <handlePacket+0x24>
  	{
      deserialize_actuator_packet(rx_buffer_1, &controlPacket);
 8000b14:	4907      	ldr	r1, [pc, #28]	@ (8000b34 <handlePacket+0x3c>)
 8000b16:	4806      	ldr	r0, [pc, #24]	@ (8000b30 <handlePacket+0x38>)
 8000b18:	f000 feba 	bl	8001890 <deserialize_actuator_packet>
    {
      //do nothing
    }


    HAL_UART_Receive_IT(&huart1,rx_buffer_1,ACTUATOR_PACKET_SIZE);
 8000b1c:	220b      	movs	r2, #11
 8000b1e:	4904      	ldr	r1, [pc, #16]	@ (8000b30 <handlePacket+0x38>)
 8000b20:	4805      	ldr	r0, [pc, #20]	@ (8000b38 <handlePacket+0x40>)
 8000b22:	f002 ff57 	bl	80039d4 <HAL_UART_Receive_IT>
}
 8000b26:	bf00      	nop
 8000b28:	3708      	adds	r7, #8
 8000b2a:	46bd      	mov	sp, r7
 8000b2c:	bd80      	pop	{r7, pc}
 8000b2e:	bf00      	nop
 8000b30:	20000290 	.word	0x20000290
 8000b34:	20000390 	.word	0x20000390
 8000b38:	20000200 	.word	0x20000200

08000b3c <HAL_UART_RxCpltCallback>:
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8000b3c:	b480      	push	{r7}
 8000b3e:	b083      	sub	sp, #12
 8000b40:	af00      	add	r7, sp, #0
 8000b42:	6078      	str	r0, [r7, #4]
  if(huart->Instance == huart1.Instance)
 8000b44:	687b      	ldr	r3, [r7, #4]
 8000b46:	681a      	ldr	r2, [r3, #0]
 8000b48:	4b05      	ldr	r3, [pc, #20]	@ (8000b60 <HAL_UART_RxCpltCallback+0x24>)
 8000b4a:	681b      	ldr	r3, [r3, #0]
 8000b4c:	429a      	cmp	r2, r3
 8000b4e:	d102      	bne.n	8000b56 <HAL_UART_RxCpltCallback+0x1a>
  {
    packetReceived = 1;
 8000b50:	4b04      	ldr	r3, [pc, #16]	@ (8000b64 <HAL_UART_RxCpltCallback+0x28>)
 8000b52:	2201      	movs	r2, #1
 8000b54:	701a      	strb	r2, [r3, #0]
  }
}
 8000b56:	bf00      	nop
 8000b58:	370c      	adds	r7, #12
 8000b5a:	46bd      	mov	sp, r7
 8000b5c:	bc80      	pop	{r7}
 8000b5e:	4770      	bx	lr
 8000b60:	20000200 	.word	0x20000200
 8000b64:	2000039b 	.word	0x2000039b

08000b68 <HAL_UART_ErrorCallback>:
void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
{
 8000b68:	b580      	push	{r7, lr}
 8000b6a:	b082      	sub	sp, #8
 8000b6c:	af00      	add	r7, sp, #0
 8000b6e:	6078      	str	r0, [r7, #4]
  if(huart->Instance == huart1.Instance)
 8000b70:	687b      	ldr	r3, [r7, #4]
 8000b72:	681a      	ldr	r2, [r3, #0]
 8000b74:	4b06      	ldr	r3, [pc, #24]	@ (8000b90 <HAL_UART_ErrorCallback+0x28>)
 8000b76:	681b      	ldr	r3, [r3, #0]
 8000b78:	429a      	cmp	r2, r3
 8000b7a:	d104      	bne.n	8000b86 <HAL_UART_ErrorCallback+0x1e>
  {
    //HAL_UART_Receive_IT(&huart1, rx_buffer + rxPtr, ACTUATOR_PACKET_SIZE);
    HAL_UART_Receive_IT(&huart1, rx_buffer_1, ACTUATOR_PACKET_SIZE);
 8000b7c:	220b      	movs	r2, #11
 8000b7e:	4905      	ldr	r1, [pc, #20]	@ (8000b94 <HAL_UART_ErrorCallback+0x2c>)
 8000b80:	4803      	ldr	r0, [pc, #12]	@ (8000b90 <HAL_UART_ErrorCallback+0x28>)
 8000b82:	f002 ff27 	bl	80039d4 <HAL_UART_Receive_IT>
  }
}
 8000b86:	bf00      	nop
 8000b88:	3708      	adds	r7, #8
 8000b8a:	46bd      	mov	sp, r7
 8000b8c:	bd80      	pop	{r7, pc}
 8000b8e:	bf00      	nop
 8000b90:	20000200 	.word	0x20000200
 8000b94:	20000290 	.word	0x20000290

08000b98 <initControlValue>:
void initControlValue(void)
{
 8000b98:	b480      	push	{r7}
 8000b9a:	af00      	add	r7, sp, #0
  controlPacket.driving_mode = DRIVING_NORMAL;
 8000b9c:	4a12      	ldr	r2, [pc, #72]	@ (8000be8 <initControlValue+0x50>)
 8000b9e:	78d3      	ldrb	r3, [r2, #3]
 8000ba0:	2101      	movs	r1, #1
 8000ba2:	f361 1307 	bfi	r3, r1, #4, #4
 8000ba6:	70d3      	strb	r3, [r2, #3]
	controlPacket.servo_chair = arrayServo[SERVO_SEAT].initialPulse;
 8000ba8:	4b10      	ldr	r3, [pc, #64]	@ (8000bec <initControlValue+0x54>)
 8000baa:	89da      	ldrh	r2, [r3, #14]
 8000bac:	4b0e      	ldr	r3, [pc, #56]	@ (8000be8 <initControlValue+0x50>)
 8000bae:	809a      	strh	r2, [r3, #4]
	controlPacket.servo_window = arrayServo[SERVO_WINDOW].initialPulse;
 8000bb0:	4b0e      	ldr	r3, [pc, #56]	@ (8000bec <initControlValue+0x54>)
 8000bb2:	8bda      	ldrh	r2, [r3, #30]
 8000bb4:	4b0c      	ldr	r3, [pc, #48]	@ (8000be8 <initControlValue+0x50>)
 8000bb6:	80da      	strh	r2, [r3, #6]
	controlPacket.led = 0;
 8000bb8:	4a0b      	ldr	r2, [pc, #44]	@ (8000be8 <initControlValue+0x50>)
 8000bba:	78d3      	ldrb	r3, [r2, #3]
 8000bbc:	f36f 0382 	bfc	r3, #2, #1
 8000bc0:	70d3      	strb	r3, [r2, #3]
	controlPacket.buzzer = 0;
 8000bc2:	4a09      	ldr	r2, [pc, #36]	@ (8000be8 <initControlValue+0x50>)
 8000bc4:	78d3      	ldrb	r3, [r2, #3]
 8000bc6:	f36f 03c3 	bfc	r3, #3, #1
 8000bca:	70d3      	strb	r3, [r2, #3]
	controlPacket.fan = 0;
 8000bcc:	4a06      	ldr	r2, [pc, #24]	@ (8000be8 <initControlValue+0x50>)
 8000bce:	78d3      	ldrb	r3, [r2, #3]
 8000bd0:	f36f 0301 	bfc	r3, #0, #2
 8000bd4:	70d3      	strb	r3, [r2, #3]
	controlPacket.led_rgb = 0;
 8000bd6:	4a04      	ldr	r2, [pc, #16]	@ (8000be8 <initControlValue+0x50>)
 8000bd8:	7893      	ldrb	r3, [r2, #2]
 8000bda:	f36f 0302 	bfc	r3, #0, #3
 8000bde:	7093      	strb	r3, [r2, #2]
}
 8000be0:	bf00      	nop
 8000be2:	46bd      	mov	sp, r7
 8000be4:	bc80      	pop	{r7}
 8000be6:	4770      	bx	lr
 8000be8:	20000390 	.word	0x20000390
 8000bec:	20000048 	.word	0x20000048

08000bf0 <seatTask>:
		  Error_Handler();
		}
	}
}
void seatTask(void)
{
 8000bf0:	b580      	push	{r7, lr}
 8000bf2:	b082      	sub	sp, #8
 8000bf4:	af00      	add	r7, sp, #0
	uint16_t unitPulse = getUnitPulse(SERVO_SEAT);
 8000bf6:	2000      	movs	r0, #0
 8000bf8:	f000 fb68 	bl	80012cc <getUnitPulse>
 8000bfc:	4603      	mov	r3, r0
 8000bfe:	80fb      	strh	r3, [r7, #6]
	uint16_t currentPulse = getPulse(SERVO_SEAT);
 8000c00:	2000      	movs	r0, #0
 8000c02:	f000 fb1b 	bl	800123c <getPulse>
 8000c06:	4603      	mov	r3, r0
 8000c08:	80bb      	strh	r3, [r7, #4]
	if(controlPacket.servo_chair > currentPulse)
 8000c0a:	4b17      	ldr	r3, [pc, #92]	@ (8000c68 <seatTask+0x78>)
 8000c0c:	889b      	ldrh	r3, [r3, #4]
 8000c0e:	88ba      	ldrh	r2, [r7, #4]
 8000c10:	429a      	cmp	r2, r3
 8000c12:	d210      	bcs.n	8000c36 <seatTask+0x46>
	{
		if((controlPacket.servo_chair) - currentPulse > unitPulse)
 8000c14:	4b14      	ldr	r3, [pc, #80]	@ (8000c68 <seatTask+0x78>)
 8000c16:	889b      	ldrh	r3, [r3, #4]
 8000c18:	461a      	mov	r2, r3
 8000c1a:	88bb      	ldrh	r3, [r7, #4]
 8000c1c:	1ad2      	subs	r2, r2, r3
 8000c1e:	88fb      	ldrh	r3, [r7, #6]
 8000c20:	429a      	cmp	r2, r3
 8000c22:	dd1c      	ble.n	8000c5e <seatTask+0x6e>
		{
			setPulse(SERVO_SEAT,(currentPulse+unitPulse));
 8000c24:	88ba      	ldrh	r2, [r7, #4]
 8000c26:	88fb      	ldrh	r3, [r7, #6]
 8000c28:	4413      	add	r3, r2
 8000c2a:	b29b      	uxth	r3, r3
 8000c2c:	4619      	mov	r1, r3
 8000c2e:	2000      	movs	r0, #0
 8000c30:	f000 fb5e 	bl	80012f0 <setPulse>
		else
		{
			//do nothing
		}
	}
}
 8000c34:	e013      	b.n	8000c5e <seatTask+0x6e>
	else if(controlPacket.servo_chair < currentPulse)
 8000c36:	4b0c      	ldr	r3, [pc, #48]	@ (8000c68 <seatTask+0x78>)
 8000c38:	889b      	ldrh	r3, [r3, #4]
 8000c3a:	88ba      	ldrh	r2, [r7, #4]
 8000c3c:	429a      	cmp	r2, r3
 8000c3e:	d90e      	bls.n	8000c5e <seatTask+0x6e>
		if((currentPulse - controlPacket.servo_chair) > unitPulse)
 8000c40:	88bb      	ldrh	r3, [r7, #4]
 8000c42:	4a09      	ldr	r2, [pc, #36]	@ (8000c68 <seatTask+0x78>)
 8000c44:	8892      	ldrh	r2, [r2, #4]
 8000c46:	1a9a      	subs	r2, r3, r2
 8000c48:	88fb      	ldrh	r3, [r7, #6]
 8000c4a:	429a      	cmp	r2, r3
 8000c4c:	dd07      	ble.n	8000c5e <seatTask+0x6e>
			setPulse(SERVO_SEAT,(currentPulse-unitPulse));
 8000c4e:	88ba      	ldrh	r2, [r7, #4]
 8000c50:	88fb      	ldrh	r3, [r7, #6]
 8000c52:	1ad3      	subs	r3, r2, r3
 8000c54:	b29b      	uxth	r3, r3
 8000c56:	4619      	mov	r1, r3
 8000c58:	2000      	movs	r0, #0
 8000c5a:	f000 fb49 	bl	80012f0 <setPulse>
}
 8000c5e:	bf00      	nop
 8000c60:	3708      	adds	r7, #8
 8000c62:	46bd      	mov	sp, r7
 8000c64:	bd80      	pop	{r7, pc}
 8000c66:	bf00      	nop
 8000c68:	20000390 	.word	0x20000390

08000c6c <windowTask>:
void windowTask(void)
{
 8000c6c:	b580      	push	{r7, lr}
 8000c6e:	b082      	sub	sp, #8
 8000c70:	af00      	add	r7, sp, #0
	uint16_t unitPulse = getUnitPulse(SERVO_WINDOW);
 8000c72:	2001      	movs	r0, #1
 8000c74:	f000 fb2a 	bl	80012cc <getUnitPulse>
 8000c78:	4603      	mov	r3, r0
 8000c7a:	80fb      	strh	r3, [r7, #6]
	uint16_t currentPulse = getPulse(SERVO_WINDOW);
 8000c7c:	2001      	movs	r0, #1
 8000c7e:	f000 fadd 	bl	800123c <getPulse>
 8000c82:	4603      	mov	r3, r0
 8000c84:	80bb      	strh	r3, [r7, #4]
	if(controlPacket.servo_window > currentPulse)
 8000c86:	4b17      	ldr	r3, [pc, #92]	@ (8000ce4 <windowTask+0x78>)
 8000c88:	88db      	ldrh	r3, [r3, #6]
 8000c8a:	88ba      	ldrh	r2, [r7, #4]
 8000c8c:	429a      	cmp	r2, r3
 8000c8e:	d210      	bcs.n	8000cb2 <windowTask+0x46>
	{
		if((controlPacket.servo_window) - currentPulse > unitPulse)
 8000c90:	4b14      	ldr	r3, [pc, #80]	@ (8000ce4 <windowTask+0x78>)
 8000c92:	88db      	ldrh	r3, [r3, #6]
 8000c94:	461a      	mov	r2, r3
 8000c96:	88bb      	ldrh	r3, [r7, #4]
 8000c98:	1ad2      	subs	r2, r2, r3
 8000c9a:	88fb      	ldrh	r3, [r7, #6]
 8000c9c:	429a      	cmp	r2, r3
 8000c9e:	dd1c      	ble.n	8000cda <windowTask+0x6e>
		{
			setPulse(SERVO_WINDOW,(currentPulse+unitPulse));
 8000ca0:	88ba      	ldrh	r2, [r7, #4]
 8000ca2:	88fb      	ldrh	r3, [r7, #6]
 8000ca4:	4413      	add	r3, r2
 8000ca6:	b29b      	uxth	r3, r3
 8000ca8:	4619      	mov	r1, r3
 8000caa:	2001      	movs	r0, #1
 8000cac:	f000 fb20 	bl	80012f0 <setPulse>
		else
		{
			//do nothing
		}
	}
}
 8000cb0:	e013      	b.n	8000cda <windowTask+0x6e>
	else if(controlPacket.servo_window < currentPulse)
 8000cb2:	4b0c      	ldr	r3, [pc, #48]	@ (8000ce4 <windowTask+0x78>)
 8000cb4:	88db      	ldrh	r3, [r3, #6]
 8000cb6:	88ba      	ldrh	r2, [r7, #4]
 8000cb8:	429a      	cmp	r2, r3
 8000cba:	d90e      	bls.n	8000cda <windowTask+0x6e>
		if((currentPulse - controlPacket.servo_window) > unitPulse)
 8000cbc:	88bb      	ldrh	r3, [r7, #4]
 8000cbe:	4a09      	ldr	r2, [pc, #36]	@ (8000ce4 <windowTask+0x78>)
 8000cc0:	88d2      	ldrh	r2, [r2, #6]
 8000cc2:	1a9a      	subs	r2, r3, r2
 8000cc4:	88fb      	ldrh	r3, [r7, #6]
 8000cc6:	429a      	cmp	r2, r3
 8000cc8:	dd07      	ble.n	8000cda <windowTask+0x6e>
			setPulse(SERVO_WINDOW,(currentPulse-unitPulse));
 8000cca:	88ba      	ldrh	r2, [r7, #4]
 8000ccc:	88fb      	ldrh	r3, [r7, #6]
 8000cce:	1ad3      	subs	r3, r2, r3
 8000cd0:	b29b      	uxth	r3, r3
 8000cd2:	4619      	mov	r1, r3
 8000cd4:	2001      	movs	r0, #1
 8000cd6:	f000 fb0b 	bl	80012f0 <setPulse>
}
 8000cda:	bf00      	nop
 8000cdc:	3708      	adds	r7, #8
 8000cde:	46bd      	mov	sp, r7
 8000ce0:	bd80      	pop	{r7, pc}
 8000ce2:	bf00      	nop
 8000ce4:	20000390 	.word	0x20000390

08000ce8 <fanTask>:
void fanTask(void)
{
 8000ce8:	b580      	push	{r7, lr}
 8000cea:	af00      	add	r7, sp, #0
	if(controlPacket.fan == 0)
 8000cec:	4b09      	ldr	r3, [pc, #36]	@ (8000d14 <fanTask+0x2c>)
 8000cee:	78db      	ldrb	r3, [r3, #3]
 8000cf0:	f003 0303 	and.w	r3, r3, #3
 8000cf4:	b2db      	uxtb	r3, r3
 8000cf6:	2b00      	cmp	r3, #0
 8000cf8:	d102      	bne.n	8000d00 <fanTask+0x18>
	{
		stopFan();
 8000cfa:	f7ff fa9f 	bl	800023c <stopFan>
	}
	else
	{
		setLevelFan(controlPacket.fan);
	}
}
 8000cfe:	e007      	b.n	8000d10 <fanTask+0x28>
		setLevelFan(controlPacket.fan);
 8000d00:	4b04      	ldr	r3, [pc, #16]	@ (8000d14 <fanTask+0x2c>)
 8000d02:	78db      	ldrb	r3, [r3, #3]
 8000d04:	f3c3 0301 	ubfx	r3, r3, #0, #2
 8000d08:	b2db      	uxtb	r3, r3
 8000d0a:	4618      	mov	r0, r3
 8000d0c:	f7ff faba 	bl	8000284 <setLevelFan>
}
 8000d10:	bf00      	nop
 8000d12:	bd80      	pop	{r7, pc}
 8000d14:	20000390 	.word	0x20000390

08000d18 <ledTask>:
void ledTask(void)
{
 8000d18:	b580      	push	{r7, lr}
 8000d1a:	af00      	add	r7, sp, #0
	if(controlPacket.led == 0)
 8000d1c:	4b06      	ldr	r3, [pc, #24]	@ (8000d38 <ledTask+0x20>)
 8000d1e:	78db      	ldrb	r3, [r3, #3]
 8000d20:	f003 0304 	and.w	r3, r3, #4
 8000d24:	b2db      	uxtb	r3, r3
 8000d26:	2b00      	cmp	r3, #0
 8000d28:	d102      	bne.n	8000d30 <ledTask+0x18>
	{
		offHeadLight();
 8000d2a:	f7ff faf1 	bl	8000310 <offHeadLight>
	}
	else
	{
		onHeadLight();
	}
}
 8000d2e:	e001      	b.n	8000d34 <ledTask+0x1c>
		onHeadLight();
 8000d30:	f7ff fae2 	bl	80002f8 <onHeadLight>
}
 8000d34:	bf00      	nop
 8000d36:	bd80      	pop	{r7, pc}
 8000d38:	20000390 	.word	0x20000390

08000d3c <rgbTask>:
void rgbTask(void)
{
 8000d3c:	b598      	push	{r3, r4, r7, lr}
 8000d3e:	af00      	add	r7, sp, #0
	static uint8_t rgb_red =0;
	static uint8_t rgb_green =0;
	static uint8_t rgb_blue =0;
	static uint8_t rgb_mode =0;
	rgb_red = 0x1 & controlPacket.led_rgb ;
 8000d40:	4b38      	ldr	r3, [pc, #224]	@ (8000e24 <rgbTask+0xe8>)
 8000d42:	789b      	ldrb	r3, [r3, #2]
 8000d44:	f3c3 0302 	ubfx	r3, r3, #0, #3
 8000d48:	b2db      	uxtb	r3, r3
 8000d4a:	f003 0301 	and.w	r3, r3, #1
 8000d4e:	b2da      	uxtb	r2, r3
 8000d50:	4b35      	ldr	r3, [pc, #212]	@ (8000e28 <rgbTask+0xec>)
 8000d52:	701a      	strb	r2, [r3, #0]
	rgb_green = 0x2 & controlPacket.led_rgb ;
 8000d54:	4b33      	ldr	r3, [pc, #204]	@ (8000e24 <rgbTask+0xe8>)
 8000d56:	789b      	ldrb	r3, [r3, #2]
 8000d58:	f3c3 0302 	ubfx	r3, r3, #0, #3
 8000d5c:	b2db      	uxtb	r3, r3
 8000d5e:	f003 0302 	and.w	r3, r3, #2
 8000d62:	b2da      	uxtb	r2, r3
 8000d64:	4b31      	ldr	r3, [pc, #196]	@ (8000e2c <rgbTask+0xf0>)
 8000d66:	701a      	strb	r2, [r3, #0]
	rgb_blue = 0x4 & controlPacket.led_rgb ;
 8000d68:	4b2e      	ldr	r3, [pc, #184]	@ (8000e24 <rgbTask+0xe8>)
 8000d6a:	789b      	ldrb	r3, [r3, #2]
 8000d6c:	f3c3 0302 	ubfx	r3, r3, #0, #3
 8000d70:	b2db      	uxtb	r3, r3
 8000d72:	f003 0304 	and.w	r3, r3, #4
 8000d76:	b2da      	uxtb	r2, r3
 8000d78:	4b2d      	ldr	r3, [pc, #180]	@ (8000e30 <rgbTask+0xf4>)
 8000d7a:	701a      	strb	r2, [r3, #0]
	rgb_mode = 0x8 & controlPacket.led_rgb; //led_rgb의 4번쨰 비트가 0이면 일반 모드, 1이면 터널모드(밝기 30퍼)
 8000d7c:	4b29      	ldr	r3, [pc, #164]	@ (8000e24 <rgbTask+0xe8>)
 8000d7e:	789b      	ldrb	r3, [r3, #2]
 8000d80:	f3c3 0302 	ubfx	r3, r3, #0, #3
 8000d84:	b2db      	uxtb	r3, r3
 8000d86:	f003 0308 	and.w	r3, r3, #8
 8000d8a:	b2da      	uxtb	r2, r3
 8000d8c:	4b29      	ldr	r3, [pc, #164]	@ (8000e34 <rgbTask+0xf8>)
 8000d8e:	701a      	strb	r2, [r3, #0]

	if(rgb_mode)
 8000d90:	4b28      	ldr	r3, [pc, #160]	@ (8000e34 <rgbTask+0xf8>)
 8000d92:	781b      	ldrb	r3, [r3, #0]
 8000d94:	2b00      	cmp	r3, #0
 8000d96:	d018      	beq.n	8000dca <rgbTask+0x8e>
  {
    setColorRgb(30*rgb_red, 30*rgb_green, 30*rgb_blue);
 8000d98:	4b23      	ldr	r3, [pc, #140]	@ (8000e28 <rgbTask+0xec>)
 8000d9a:	781b      	ldrb	r3, [r3, #0]
 8000d9c:	461a      	mov	r2, r3
 8000d9e:	0112      	lsls	r2, r2, #4
 8000da0:	1ad3      	subs	r3, r2, r3
 8000da2:	005b      	lsls	r3, r3, #1
 8000da4:	b298      	uxth	r0, r3
 8000da6:	4b21      	ldr	r3, [pc, #132]	@ (8000e2c <rgbTask+0xf0>)
 8000da8:	781b      	ldrb	r3, [r3, #0]
 8000daa:	461a      	mov	r2, r3
 8000dac:	0112      	lsls	r2, r2, #4
 8000dae:	1ad3      	subs	r3, r2, r3
 8000db0:	005b      	lsls	r3, r3, #1
 8000db2:	b299      	uxth	r1, r3
 8000db4:	4b1e      	ldr	r3, [pc, #120]	@ (8000e30 <rgbTask+0xf4>)
 8000db6:	781b      	ldrb	r3, [r3, #0]
 8000db8:	461a      	mov	r2, r3
 8000dba:	0112      	lsls	r2, r2, #4
 8000dbc:	1ad3      	subs	r3, r2, r3
 8000dbe:	005b      	lsls	r3, r3, #1
 8000dc0:	b29b      	uxth	r3, r3
 8000dc2:	461a      	mov	r2, r3
 8000dc4:	f000 f8be 	bl	8000f44 <setColorRgb>
  }
	else
  {
		setColorRgb(999*rgb_red, 999*rgb_green, 999*rgb_blue);
	}
}
 8000dc8:	e029      	b.n	8000e1e <rgbTask+0xe2>
		setColorRgb(999*rgb_red, 999*rgb_green, 999*rgb_blue);
 8000dca:	4b17      	ldr	r3, [pc, #92]	@ (8000e28 <rgbTask+0xec>)
 8000dcc:	781b      	ldrb	r3, [r3, #0]
 8000dce:	461a      	mov	r2, r3
 8000dd0:	00d2      	lsls	r2, r2, #3
 8000dd2:	1ad2      	subs	r2, r2, r3
 8000dd4:	0112      	lsls	r2, r2, #4
 8000dd6:	1ad3      	subs	r3, r2, r3
 8000dd8:	461a      	mov	r2, r3
 8000dda:	00d1      	lsls	r1, r2, #3
 8000ddc:	461a      	mov	r2, r3
 8000dde:	460b      	mov	r3, r1
 8000de0:	4413      	add	r3, r2
 8000de2:	b298      	uxth	r0, r3
 8000de4:	4b11      	ldr	r3, [pc, #68]	@ (8000e2c <rgbTask+0xf0>)
 8000de6:	781b      	ldrb	r3, [r3, #0]
 8000de8:	461a      	mov	r2, r3
 8000dea:	00d2      	lsls	r2, r2, #3
 8000dec:	1ad2      	subs	r2, r2, r3
 8000dee:	0112      	lsls	r2, r2, #4
 8000df0:	1ad3      	subs	r3, r2, r3
 8000df2:	461a      	mov	r2, r3
 8000df4:	00d1      	lsls	r1, r2, #3
 8000df6:	461a      	mov	r2, r3
 8000df8:	460b      	mov	r3, r1
 8000dfa:	4413      	add	r3, r2
 8000dfc:	b299      	uxth	r1, r3
 8000dfe:	4b0c      	ldr	r3, [pc, #48]	@ (8000e30 <rgbTask+0xf4>)
 8000e00:	781b      	ldrb	r3, [r3, #0]
 8000e02:	461a      	mov	r2, r3
 8000e04:	00d2      	lsls	r2, r2, #3
 8000e06:	1ad2      	subs	r2, r2, r3
 8000e08:	0112      	lsls	r2, r2, #4
 8000e0a:	1ad3      	subs	r3, r2, r3
 8000e0c:	461a      	mov	r2, r3
 8000e0e:	00d4      	lsls	r4, r2, #3
 8000e10:	461a      	mov	r2, r3
 8000e12:	4623      	mov	r3, r4
 8000e14:	4413      	add	r3, r2
 8000e16:	b29b      	uxth	r3, r3
 8000e18:	461a      	mov	r2, r3
 8000e1a:	f000 f893 	bl	8000f44 <setColorRgb>
}
 8000e1e:	bf00      	nop
 8000e20:	bd98      	pop	{r3, r4, r7, pc}
 8000e22:	bf00      	nop
 8000e24:	20000390 	.word	0x20000390
 8000e28:	2000039c 	.word	0x2000039c
 8000e2c:	2000039d 	.word	0x2000039d
 8000e30:	2000039e 	.word	0x2000039e
 8000e34:	2000039f 	.word	0x2000039f

08000e38 <buzzerTask>:
void buzzerTask(void)
{
 8000e38:	b580      	push	{r7, lr}
 8000e3a:	b082      	sub	sp, #8
 8000e3c:	af00      	add	r7, sp, #0
    static uint32_t last_tick = 0;
    static uint8_t buzzer_state = 0;
    static uint8_t step_count = 0;
    static uint8_t buzzer_on = 0;

    uint32_t now = HAL_GetTick();
 8000e3e:	f000 fdb3 	bl	80019a8 <HAL_GetTick>
 8000e42:	6078      	str	r0, [r7, #4]

    if(controlPacket.buzzer != 0 && buzzer_on == 0)
 8000e44:	4b2d      	ldr	r3, [pc, #180]	@ (8000efc <buzzerTask+0xc4>)
 8000e46:	78db      	ldrb	r3, [r3, #3]
 8000e48:	f003 0308 	and.w	r3, r3, #8
 8000e4c:	b2db      	uxtb	r3, r3
 8000e4e:	2b00      	cmp	r3, #0
 8000e50:	d006      	beq.n	8000e60 <buzzerTask+0x28>
 8000e52:	4b2b      	ldr	r3, [pc, #172]	@ (8000f00 <buzzerTask+0xc8>)
 8000e54:	781b      	ldrb	r3, [r3, #0]
 8000e56:	2b00      	cmp	r3, #0
 8000e58:	d102      	bne.n	8000e60 <buzzerTask+0x28>
    {
      buzzer_on = 1;
 8000e5a:	4b29      	ldr	r3, [pc, #164]	@ (8000f00 <buzzerTask+0xc8>)
 8000e5c:	2201      	movs	r2, #1
 8000e5e:	701a      	strb	r2, [r3, #0]
    }

    if(buzzer_on)
 8000e60:	4b27      	ldr	r3, [pc, #156]	@ (8000f00 <buzzerTask+0xc8>)
 8000e62:	781b      	ldrb	r3, [r3, #0]
 8000e64:	2b00      	cmp	r3, #0
 8000e66:	d044      	beq.n	8000ef2 <buzzerTask+0xba>
    {
      switch (buzzer_state) {
 8000e68:	4b26      	ldr	r3, [pc, #152]	@ (8000f04 <buzzerTask+0xcc>)
 8000e6a:	781b      	ldrb	r3, [r3, #0]
 8000e6c:	2b02      	cmp	r3, #2
 8000e6e:	d01f      	beq.n	8000eb0 <buzzerTask+0x78>
 8000e70:	2b02      	cmp	r3, #2
 8000e72:	dc3e      	bgt.n	8000ef2 <buzzerTask+0xba>
 8000e74:	2b00      	cmp	r3, #0
 8000e76:	d002      	beq.n	8000e7e <buzzerTask+0x46>
 8000e78:	2b01      	cmp	r3, #1
 8000e7a:	d009      	beq.n	8000e90 <buzzerTask+0x58>
            }
            break;
      }
    }
   
   return; 
 8000e7c:	e039      	b.n	8000ef2 <buzzerTask+0xba>
            onBuzzer();
 8000e7e:	f7ff f9b1 	bl	80001e4 <onBuzzer>
            last_tick = now;
 8000e82:	4a21      	ldr	r2, [pc, #132]	@ (8000f08 <buzzerTask+0xd0>)
 8000e84:	687b      	ldr	r3, [r7, #4]
 8000e86:	6013      	str	r3, [r2, #0]
            buzzer_state = 1;
 8000e88:	4b1e      	ldr	r3, [pc, #120]	@ (8000f04 <buzzerTask+0xcc>)
 8000e8a:	2201      	movs	r2, #1
 8000e8c:	701a      	strb	r2, [r3, #0]
            break;
 8000e8e:	e02f      	b.n	8000ef0 <buzzerTask+0xb8>
            if (now - last_tick >= 300) {
 8000e90:	4b1d      	ldr	r3, [pc, #116]	@ (8000f08 <buzzerTask+0xd0>)
 8000e92:	681b      	ldr	r3, [r3, #0]
 8000e94:	687a      	ldr	r2, [r7, #4]
 8000e96:	1ad3      	subs	r3, r2, r3
 8000e98:	f5b3 7f96 	cmp.w	r3, #300	@ 0x12c
 8000e9c:	d325      	bcc.n	8000eea <buzzerTask+0xb2>
                offBuzzer();
 8000e9e:	f7ff f9a9 	bl	80001f4 <offBuzzer>
                last_tick = now;
 8000ea2:	4a19      	ldr	r2, [pc, #100]	@ (8000f08 <buzzerTask+0xd0>)
 8000ea4:	687b      	ldr	r3, [r7, #4]
 8000ea6:	6013      	str	r3, [r2, #0]
                buzzer_state = 2;
 8000ea8:	4b16      	ldr	r3, [pc, #88]	@ (8000f04 <buzzerTask+0xcc>)
 8000eaa:	2202      	movs	r2, #2
 8000eac:	701a      	strb	r2, [r3, #0]
            break;
 8000eae:	e01c      	b.n	8000eea <buzzerTask+0xb2>
            if (now - last_tick >= 100) {
 8000eb0:	4b15      	ldr	r3, [pc, #84]	@ (8000f08 <buzzerTask+0xd0>)
 8000eb2:	681b      	ldr	r3, [r3, #0]
 8000eb4:	687a      	ldr	r2, [r7, #4]
 8000eb6:	1ad3      	subs	r3, r2, r3
 8000eb8:	2b63      	cmp	r3, #99	@ 0x63
 8000eba:	d918      	bls.n	8000eee <buzzerTask+0xb6>
                step_count++;
 8000ebc:	4b13      	ldr	r3, [pc, #76]	@ (8000f0c <buzzerTask+0xd4>)
 8000ebe:	781b      	ldrb	r3, [r3, #0]
 8000ec0:	3301      	adds	r3, #1
 8000ec2:	b2da      	uxtb	r2, r3
 8000ec4:	4b11      	ldr	r3, [pc, #68]	@ (8000f0c <buzzerTask+0xd4>)
 8000ec6:	701a      	strb	r2, [r3, #0]
                if (step_count >= 3) {
 8000ec8:	4b10      	ldr	r3, [pc, #64]	@ (8000f0c <buzzerTask+0xd4>)
 8000eca:	781b      	ldrb	r3, [r3, #0]
 8000ecc:	2b02      	cmp	r3, #2
 8000ece:	d903      	bls.n	8000ed8 <buzzerTask+0xa0>
                    buzzer_on = 0;
 8000ed0:	4b0b      	ldr	r3, [pc, #44]	@ (8000f00 <buzzerTask+0xc8>)
 8000ed2:	2200      	movs	r2, #0
 8000ed4:	701a      	strb	r2, [r3, #0]
            break;
 8000ed6:	e00a      	b.n	8000eee <buzzerTask+0xb6>
                    onBuzzer();
 8000ed8:	f7ff f984 	bl	80001e4 <onBuzzer>
                    last_tick = now;
 8000edc:	4a0a      	ldr	r2, [pc, #40]	@ (8000f08 <buzzerTask+0xd0>)
 8000ede:	687b      	ldr	r3, [r7, #4]
 8000ee0:	6013      	str	r3, [r2, #0]
                    buzzer_state = 1;
 8000ee2:	4b08      	ldr	r3, [pc, #32]	@ (8000f04 <buzzerTask+0xcc>)
 8000ee4:	2201      	movs	r2, #1
 8000ee6:	701a      	strb	r2, [r3, #0]
            break;
 8000ee8:	e001      	b.n	8000eee <buzzerTask+0xb6>
            break;
 8000eea:	bf00      	nop
 8000eec:	e000      	b.n	8000ef0 <buzzerTask+0xb8>
            break;
 8000eee:	bf00      	nop
   return; 
 8000ef0:	bf00      	nop
 8000ef2:	bf00      	nop
}
 8000ef4:	3708      	adds	r7, #8
 8000ef6:	46bd      	mov	sp, r7
 8000ef8:	bd80      	pop	{r7, pc}
 8000efa:	bf00      	nop
 8000efc:	20000390 	.word	0x20000390
 8000f00:	200003a0 	.word	0x200003a0
 8000f04:	200003a1 	.word	0x200003a1
 8000f08:	200003a4 	.word	0x200003a4
 8000f0c:	200003a8 	.word	0x200003a8

08000f10 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000f10:	b480      	push	{r7}
 8000f12:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000f14:	b672      	cpsid	i
}
 8000f16:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000f18:	bf00      	nop
 8000f1a:	e7fd      	b.n	8000f18 <Error_Handler+0x8>

08000f1c <initRgb>:
extern TIM_HandleTypeDef htim2;
extern TIM_HandleTypeDef htim4;


void initRgb(void)
{
 8000f1c:	b580      	push	{r7, lr}
 8000f1e:	af00      	add	r7, sp, #0
    HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8000f20:	2104      	movs	r1, #4
 8000f22:	4806      	ldr	r0, [pc, #24]	@ (8000f3c <initRgb+0x20>)
 8000f24:	f001 fdca 	bl	8002abc <HAL_TIM_PWM_Start>
    HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_1);
 8000f28:	2100      	movs	r1, #0
 8000f2a:	4805      	ldr	r0, [pc, #20]	@ (8000f40 <initRgb+0x24>)
 8000f2c:	f001 fdc6 	bl	8002abc <HAL_TIM_PWM_Start>
    HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_3);
 8000f30:	2108      	movs	r1, #8
 8000f32:	4802      	ldr	r0, [pc, #8]	@ (8000f3c <initRgb+0x20>)
 8000f34:	f001 fdc2 	bl	8002abc <HAL_TIM_PWM_Start>
}
 8000f38:	bf00      	nop
 8000f3a:	bd80      	pop	{r7, pc}
 8000f3c:	20000128 	.word	0x20000128
 8000f40:	200001b8 	.word	0x200001b8

08000f44 <setColorRgb>:

void setColorRgb(uint16_t red, uint16_t green, uint16_t blue)
{
 8000f44:	b480      	push	{r7}
 8000f46:	b083      	sub	sp, #12
 8000f48:	af00      	add	r7, sp, #0
 8000f4a:	4603      	mov	r3, r0
 8000f4c:	80fb      	strh	r3, [r7, #6]
 8000f4e:	460b      	mov	r3, r1
 8000f50:	80bb      	strh	r3, [r7, #4]
 8000f52:	4613      	mov	r3, r2
 8000f54:	807b      	strh	r3, [r7, #2]
    if (red > 999) red = 999;
 8000f56:	88fb      	ldrh	r3, [r7, #6]
 8000f58:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8000f5c:	d302      	bcc.n	8000f64 <setColorRgb+0x20>
 8000f5e:	f240 33e7 	movw	r3, #999	@ 0x3e7
 8000f62:	80fb      	strh	r3, [r7, #6]
    if (green > 999) green = 999;
 8000f64:	88bb      	ldrh	r3, [r7, #4]
 8000f66:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8000f6a:	d302      	bcc.n	8000f72 <setColorRgb+0x2e>
 8000f6c:	f240 33e7 	movw	r3, #999	@ 0x3e7
 8000f70:	80bb      	strh	r3, [r7, #4]
    if (blue > 999) blue = 999;
 8000f72:	887b      	ldrh	r3, [r7, #2]
 8000f74:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8000f78:	d302      	bcc.n	8000f80 <setColorRgb+0x3c>
 8000f7a:	f240 33e7 	movw	r3, #999	@ 0x3e7
 8000f7e:	807b      	strh	r3, [r7, #2]

    __HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_2, red);
 8000f80:	4b08      	ldr	r3, [pc, #32]	@ (8000fa4 <setColorRgb+0x60>)
 8000f82:	681b      	ldr	r3, [r3, #0]
 8000f84:	88fa      	ldrh	r2, [r7, #6]
 8000f86:	639a      	str	r2, [r3, #56]	@ 0x38
    __HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, green);
 8000f88:	4b07      	ldr	r3, [pc, #28]	@ (8000fa8 <setColorRgb+0x64>)
 8000f8a:	681b      	ldr	r3, [r3, #0]
 8000f8c:	88ba      	ldrh	r2, [r7, #4]
 8000f8e:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_3, blue);
 8000f90:	4b04      	ldr	r3, [pc, #16]	@ (8000fa4 <setColorRgb+0x60>)
 8000f92:	681b      	ldr	r3, [r3, #0]
 8000f94:	887a      	ldrh	r2, [r7, #2]
 8000f96:	63da      	str	r2, [r3, #60]	@ 0x3c
}
 8000f98:	bf00      	nop
 8000f9a:	370c      	adds	r7, #12
 8000f9c:	46bd      	mov	sp, r7
 8000f9e:	bc80      	pop	{r7}
 8000fa0:	4770      	bx	lr
 8000fa2:	bf00      	nop
 8000fa4:	20000128 	.word	0x20000128
 8000fa8:	200001b8 	.word	0x200001b8

08000fac <HAL_TIM_PeriodElapsedCallback>:
extern TIM_HandleTypeDef htim2;
extern task_t taskTable[NUM_TASK]; //메인에 정의

/*1ms 주기로 발생하는 tim2 인터럽트 처리 루틴*/
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8000fac:	b580      	push	{r7, lr}
 8000fae:	b082      	sub	sp, #8
 8000fb0:	af00      	add	r7, sp, #0
 8000fb2:	6078      	str	r0, [r7, #4]
	if((htim->Instance) == htim2.Instance)
 8000fb4:	687b      	ldr	r3, [r7, #4]
 8000fb6:	681a      	ldr	r2, [r3, #0]
 8000fb8:	4b04      	ldr	r3, [pc, #16]	@ (8000fcc <HAL_TIM_PeriodElapsedCallback+0x20>)
 8000fba:	681b      	ldr	r3, [r3, #0]
 8000fbc:	429a      	cmp	r2, r3
 8000fbe:	d101      	bne.n	8000fc4 <HAL_TIM_PeriodElapsedCallback+0x18>
	{
		taskManager();
 8000fc0:	f000 f806 	bl	8000fd0 <taskManager>
	}
}
 8000fc4:	bf00      	nop
 8000fc6:	3708      	adds	r7, #8
 8000fc8:	46bd      	mov	sp, r7
 8000fca:	bd80      	pop	{r7, pc}
 8000fcc:	20000128 	.word	0x20000128

08000fd0 <taskManager>:

/*타이머 카운트 기반으로 태스크 활성화 여부 결정*/
void taskManager(void){
 8000fd0:	b480      	push	{r7}
 8000fd2:	b083      	sub	sp, #12
 8000fd4:	af00      	add	r7, sp, #0
	uint8_t i;

	for(i = 0; i < NUM_TASK; i++){
 8000fd6:	2300      	movs	r3, #0
 8000fd8:	71fb      	strb	r3, [r7, #7]
 8000fda:	e073      	b.n	80010c4 <taskManager+0xf4>
		if(taskTable[i].offsetTime > 0)
 8000fdc:	79fa      	ldrb	r2, [r7, #7]
 8000fde:	493e      	ldr	r1, [pc, #248]	@ (80010d8 <taskManager+0x108>)
 8000fe0:	4613      	mov	r3, r2
 8000fe2:	005b      	lsls	r3, r3, #1
 8000fe4:	4413      	add	r3, r2
 8000fe6:	009b      	lsls	r3, r3, #2
 8000fe8:	440b      	add	r3, r1
 8000fea:	3304      	adds	r3, #4
 8000fec:	881b      	ldrh	r3, [r3, #0]
 8000fee:	2b00      	cmp	r3, #0
 8000ff0:	d029      	beq.n	8001046 <taskManager+0x76>
		{
			taskTable[i].offsetTime--;
 8000ff2:	79fa      	ldrb	r2, [r7, #7]
 8000ff4:	4938      	ldr	r1, [pc, #224]	@ (80010d8 <taskManager+0x108>)
 8000ff6:	4613      	mov	r3, r2
 8000ff8:	005b      	lsls	r3, r3, #1
 8000ffa:	4413      	add	r3, r2
 8000ffc:	009b      	lsls	r3, r3, #2
 8000ffe:	440b      	add	r3, r1
 8001000:	3304      	adds	r3, #4
 8001002:	881b      	ldrh	r3, [r3, #0]
 8001004:	3b01      	subs	r3, #1
 8001006:	b298      	uxth	r0, r3
 8001008:	4933      	ldr	r1, [pc, #204]	@ (80010d8 <taskManager+0x108>)
 800100a:	4613      	mov	r3, r2
 800100c:	005b      	lsls	r3, r3, #1
 800100e:	4413      	add	r3, r2
 8001010:	009b      	lsls	r3, r3, #2
 8001012:	440b      	add	r3, r1
 8001014:	3304      	adds	r3, #4
 8001016:	4602      	mov	r2, r0
 8001018:	801a      	strh	r2, [r3, #0]
			if(taskTable[i].offsetTime == 0)
 800101a:	79fa      	ldrb	r2, [r7, #7]
 800101c:	492e      	ldr	r1, [pc, #184]	@ (80010d8 <taskManager+0x108>)
 800101e:	4613      	mov	r3, r2
 8001020:	005b      	lsls	r3, r3, #1
 8001022:	4413      	add	r3, r2
 8001024:	009b      	lsls	r3, r3, #2
 8001026:	440b      	add	r3, r1
 8001028:	3304      	adds	r3, #4
 800102a:	881b      	ldrh	r3, [r3, #0]
 800102c:	2b00      	cmp	r3, #0
 800102e:	d146      	bne.n	80010be <taskManager+0xee>
			{
				taskTable[i].status = ACTIVATED;
 8001030:	79fa      	ldrb	r2, [r7, #7]
 8001032:	4929      	ldr	r1, [pc, #164]	@ (80010d8 <taskManager+0x108>)
 8001034:	4613      	mov	r3, r2
 8001036:	005b      	lsls	r3, r3, #1
 8001038:	4413      	add	r3, r2
 800103a:	009b      	lsls	r3, r3, #2
 800103c:	440b      	add	r3, r1
 800103e:	330a      	adds	r3, #10
 8001040:	2201      	movs	r2, #1
 8001042:	701a      	strb	r2, [r3, #0]
 8001044:	e03b      	b.n	80010be <taskManager+0xee>
			}
		}
		else
		{
			taskTable[i].waitedTime++;
 8001046:	79fa      	ldrb	r2, [r7, #7]
 8001048:	4923      	ldr	r1, [pc, #140]	@ (80010d8 <taskManager+0x108>)
 800104a:	4613      	mov	r3, r2
 800104c:	005b      	lsls	r3, r3, #1
 800104e:	4413      	add	r3, r2
 8001050:	009b      	lsls	r3, r3, #2
 8001052:	440b      	add	r3, r1
 8001054:	3308      	adds	r3, #8
 8001056:	881b      	ldrh	r3, [r3, #0]
 8001058:	3301      	adds	r3, #1
 800105a:	b298      	uxth	r0, r3
 800105c:	491e      	ldr	r1, [pc, #120]	@ (80010d8 <taskManager+0x108>)
 800105e:	4613      	mov	r3, r2
 8001060:	005b      	lsls	r3, r3, #1
 8001062:	4413      	add	r3, r2
 8001064:	009b      	lsls	r3, r3, #2
 8001066:	440b      	add	r3, r1
 8001068:	3308      	adds	r3, #8
 800106a:	4602      	mov	r2, r0
 800106c:	801a      	strh	r2, [r3, #0]
			if(taskTable[i].waitedTime == taskTable[i].period)
 800106e:	79fa      	ldrb	r2, [r7, #7]
 8001070:	4919      	ldr	r1, [pc, #100]	@ (80010d8 <taskManager+0x108>)
 8001072:	4613      	mov	r3, r2
 8001074:	005b      	lsls	r3, r3, #1
 8001076:	4413      	add	r3, r2
 8001078:	009b      	lsls	r3, r3, #2
 800107a:	440b      	add	r3, r1
 800107c:	3308      	adds	r3, #8
 800107e:	8819      	ldrh	r1, [r3, #0]
 8001080:	79fa      	ldrb	r2, [r7, #7]
 8001082:	4815      	ldr	r0, [pc, #84]	@ (80010d8 <taskManager+0x108>)
 8001084:	4613      	mov	r3, r2
 8001086:	005b      	lsls	r3, r3, #1
 8001088:	4413      	add	r3, r2
 800108a:	009b      	lsls	r3, r3, #2
 800108c:	4403      	add	r3, r0
 800108e:	3306      	adds	r3, #6
 8001090:	881b      	ldrh	r3, [r3, #0]
 8001092:	4299      	cmp	r1, r3
 8001094:	d113      	bne.n	80010be <taskManager+0xee>
			{
				taskTable[i].status = ACTIVATED;
 8001096:	79fa      	ldrb	r2, [r7, #7]
 8001098:	490f      	ldr	r1, [pc, #60]	@ (80010d8 <taskManager+0x108>)
 800109a:	4613      	mov	r3, r2
 800109c:	005b      	lsls	r3, r3, #1
 800109e:	4413      	add	r3, r2
 80010a0:	009b      	lsls	r3, r3, #2
 80010a2:	440b      	add	r3, r1
 80010a4:	330a      	adds	r3, #10
 80010a6:	2201      	movs	r2, #1
 80010a8:	701a      	strb	r2, [r3, #0]
				taskTable[i].waitedTime = 0;
 80010aa:	79fa      	ldrb	r2, [r7, #7]
 80010ac:	490a      	ldr	r1, [pc, #40]	@ (80010d8 <taskManager+0x108>)
 80010ae:	4613      	mov	r3, r2
 80010b0:	005b      	lsls	r3, r3, #1
 80010b2:	4413      	add	r3, r2
 80010b4:	009b      	lsls	r3, r3, #2
 80010b6:	440b      	add	r3, r1
 80010b8:	3308      	adds	r3, #8
 80010ba:	2200      	movs	r2, #0
 80010bc:	801a      	strh	r2, [r3, #0]
	for(i = 0; i < NUM_TASK; i++){
 80010be:	79fb      	ldrb	r3, [r7, #7]
 80010c0:	3301      	adds	r3, #1
 80010c2:	71fb      	strb	r3, [r7, #7]
 80010c4:	79fb      	ldrb	r3, [r7, #7]
 80010c6:	2b05      	cmp	r3, #5
 80010c8:	d988      	bls.n	8000fdc <taskManager+0xc>
			{
				//do nothing
			}
		}
	}
}
 80010ca:	bf00      	nop
 80010cc:	bf00      	nop
 80010ce:	370c      	adds	r7, #12
 80010d0:	46bd      	mov	sp, r7
 80010d2:	bc80      	pop	{r7}
 80010d4:	4770      	bx	lr
 80010d6:	bf00      	nop
 80010d8:	20000000 	.word	0x20000000

080010dc <initScheduler>:

void initScheduler(void)
{
 80010dc:	b580      	push	{r7, lr}
 80010de:	af00      	add	r7, sp, #0
	HAL_TIM_Base_Start_IT(&htim2);
 80010e0:	4802      	ldr	r0, [pc, #8]	@ (80010ec <initScheduler+0x10>)
 80010e2:	f001 fc49 	bl	8002978 <HAL_TIM_Base_Start_IT>
}
 80010e6:	bf00      	nop
 80010e8:	bd80      	pop	{r7, pc}
 80010ea:	bf00      	nop
 80010ec:	20000128 	.word	0x20000128

080010f0 <scheduler>:

/*메인 루프에서 호출하여 사용*/
void scheduler(void)
{
 80010f0:	b580      	push	{r7, lr}
 80010f2:	b082      	sub	sp, #8
 80010f4:	af00      	add	r7, sp, #0
	uint8_t i;

	for(i = 0; i < NUM_TASK; i++)
 80010f6:	2300      	movs	r3, #0
 80010f8:	71fb      	strb	r3, [r7, #7]
 80010fa:	e020      	b.n	800113e <scheduler+0x4e>
	{
		if(taskTable[i].status == ACTIVATED)
 80010fc:	79fa      	ldrb	r2, [r7, #7]
 80010fe:	4914      	ldr	r1, [pc, #80]	@ (8001150 <scheduler+0x60>)
 8001100:	4613      	mov	r3, r2
 8001102:	005b      	lsls	r3, r3, #1
 8001104:	4413      	add	r3, r2
 8001106:	009b      	lsls	r3, r3, #2
 8001108:	440b      	add	r3, r1
 800110a:	330a      	adds	r3, #10
 800110c:	781b      	ldrb	r3, [r3, #0]
 800110e:	2b01      	cmp	r3, #1
 8001110:	d112      	bne.n	8001138 <scheduler+0x48>
		{
			taskTable[i].status = DEACTIVATED;
 8001112:	79fa      	ldrb	r2, [r7, #7]
 8001114:	490e      	ldr	r1, [pc, #56]	@ (8001150 <scheduler+0x60>)
 8001116:	4613      	mov	r3, r2
 8001118:	005b      	lsls	r3, r3, #1
 800111a:	4413      	add	r3, r2
 800111c:	009b      	lsls	r3, r3, #2
 800111e:	440b      	add	r3, r1
 8001120:	330a      	adds	r3, #10
 8001122:	2200      	movs	r2, #0
 8001124:	701a      	strb	r2, [r3, #0]
			taskTable[i].task();
 8001126:	79fa      	ldrb	r2, [r7, #7]
 8001128:	4909      	ldr	r1, [pc, #36]	@ (8001150 <scheduler+0x60>)
 800112a:	4613      	mov	r3, r2
 800112c:	005b      	lsls	r3, r3, #1
 800112e:	4413      	add	r3, r2
 8001130:	009b      	lsls	r3, r3, #2
 8001132:	440b      	add	r3, r1
 8001134:	681b      	ldr	r3, [r3, #0]
 8001136:	4798      	blx	r3
	for(i = 0; i < NUM_TASK; i++)
 8001138:	79fb      	ldrb	r3, [r7, #7]
 800113a:	3301      	adds	r3, #1
 800113c:	71fb      	strb	r3, [r7, #7]
 800113e:	79fb      	ldrb	r3, [r7, #7]
 8001140:	2b05      	cmp	r3, #5
 8001142:	d9db      	bls.n	80010fc <scheduler+0xc>
		}
	}
}
 8001144:	bf00      	nop
 8001146:	bf00      	nop
 8001148:	3708      	adds	r7, #8
 800114a:	46bd      	mov	sp, r7
 800114c:	bd80      	pop	{r7, pc}
 800114e:	bf00      	nop
 8001150:	20000000 	.word	0x20000000

08001154 <initServo>:
 8001154:	b580      	push	{r7, lr}
 8001156:	b082      	sub	sp, #8
 8001158:	af00      	add	r7, sp, #0
 800115a:	2300      	movs	r3, #0
 800115c:	607b      	str	r3, [r7, #4]
 800115e:	e064      	b.n	800122a <initServo+0xd6>
 8001160:	4a35      	ldr	r2, [pc, #212]	@ (8001238 <initServo+0xe4>)
 8001162:	687b      	ldr	r3, [r7, #4]
 8001164:	011b      	lsls	r3, r3, #4
 8001166:	4413      	add	r3, r2
 8001168:	3304      	adds	r3, #4
 800116a:	681b      	ldr	r3, [r3, #0]
 800116c:	2b00      	cmp	r3, #0
 800116e:	d10e      	bne.n	800118e <initServo+0x3a>
 8001170:	4a31      	ldr	r2, [pc, #196]	@ (8001238 <initServo+0xe4>)
 8001172:	687b      	ldr	r3, [r7, #4]
 8001174:	011b      	lsls	r3, r3, #4
 8001176:	4413      	add	r3, r2
 8001178:	330e      	adds	r3, #14
 800117a:	8819      	ldrh	r1, [r3, #0]
 800117c:	4a2e      	ldr	r2, [pc, #184]	@ (8001238 <initServo+0xe4>)
 800117e:	687b      	ldr	r3, [r7, #4]
 8001180:	011b      	lsls	r3, r3, #4
 8001182:	4413      	add	r3, r2
 8001184:	681b      	ldr	r3, [r3, #0]
 8001186:	681b      	ldr	r3, [r3, #0]
 8001188:	460a      	mov	r2, r1
 800118a:	635a      	str	r2, [r3, #52]	@ 0x34
 800118c:	e03b      	b.n	8001206 <initServo+0xb2>
 800118e:	4a2a      	ldr	r2, [pc, #168]	@ (8001238 <initServo+0xe4>)
 8001190:	687b      	ldr	r3, [r7, #4]
 8001192:	011b      	lsls	r3, r3, #4
 8001194:	4413      	add	r3, r2
 8001196:	3304      	adds	r3, #4
 8001198:	681b      	ldr	r3, [r3, #0]
 800119a:	2b04      	cmp	r3, #4
 800119c:	d10e      	bne.n	80011bc <initServo+0x68>
 800119e:	4a26      	ldr	r2, [pc, #152]	@ (8001238 <initServo+0xe4>)
 80011a0:	687b      	ldr	r3, [r7, #4]
 80011a2:	011b      	lsls	r3, r3, #4
 80011a4:	4413      	add	r3, r2
 80011a6:	330e      	adds	r3, #14
 80011a8:	8819      	ldrh	r1, [r3, #0]
 80011aa:	4a23      	ldr	r2, [pc, #140]	@ (8001238 <initServo+0xe4>)
 80011ac:	687b      	ldr	r3, [r7, #4]
 80011ae:	011b      	lsls	r3, r3, #4
 80011b0:	4413      	add	r3, r2
 80011b2:	681b      	ldr	r3, [r3, #0]
 80011b4:	681a      	ldr	r2, [r3, #0]
 80011b6:	460b      	mov	r3, r1
 80011b8:	6393      	str	r3, [r2, #56]	@ 0x38
 80011ba:	e024      	b.n	8001206 <initServo+0xb2>
 80011bc:	4a1e      	ldr	r2, [pc, #120]	@ (8001238 <initServo+0xe4>)
 80011be:	687b      	ldr	r3, [r7, #4]
 80011c0:	011b      	lsls	r3, r3, #4
 80011c2:	4413      	add	r3, r2
 80011c4:	3304      	adds	r3, #4
 80011c6:	681b      	ldr	r3, [r3, #0]
 80011c8:	2b08      	cmp	r3, #8
 80011ca:	d10e      	bne.n	80011ea <initServo+0x96>
 80011cc:	4a1a      	ldr	r2, [pc, #104]	@ (8001238 <initServo+0xe4>)
 80011ce:	687b      	ldr	r3, [r7, #4]
 80011d0:	011b      	lsls	r3, r3, #4
 80011d2:	4413      	add	r3, r2
 80011d4:	330e      	adds	r3, #14
 80011d6:	8819      	ldrh	r1, [r3, #0]
 80011d8:	4a17      	ldr	r2, [pc, #92]	@ (8001238 <initServo+0xe4>)
 80011da:	687b      	ldr	r3, [r7, #4]
 80011dc:	011b      	lsls	r3, r3, #4
 80011de:	4413      	add	r3, r2
 80011e0:	681b      	ldr	r3, [r3, #0]
 80011e2:	681a      	ldr	r2, [r3, #0]
 80011e4:	460b      	mov	r3, r1
 80011e6:	63d3      	str	r3, [r2, #60]	@ 0x3c
 80011e8:	e00d      	b.n	8001206 <initServo+0xb2>
 80011ea:	4a13      	ldr	r2, [pc, #76]	@ (8001238 <initServo+0xe4>)
 80011ec:	687b      	ldr	r3, [r7, #4]
 80011ee:	011b      	lsls	r3, r3, #4
 80011f0:	4413      	add	r3, r2
 80011f2:	330e      	adds	r3, #14
 80011f4:	8819      	ldrh	r1, [r3, #0]
 80011f6:	4a10      	ldr	r2, [pc, #64]	@ (8001238 <initServo+0xe4>)
 80011f8:	687b      	ldr	r3, [r7, #4]
 80011fa:	011b      	lsls	r3, r3, #4
 80011fc:	4413      	add	r3, r2
 80011fe:	681b      	ldr	r3, [r3, #0]
 8001200:	681a      	ldr	r2, [r3, #0]
 8001202:	460b      	mov	r3, r1
 8001204:	6413      	str	r3, [r2, #64]	@ 0x40
 8001206:	4a0c      	ldr	r2, [pc, #48]	@ (8001238 <initServo+0xe4>)
 8001208:	687b      	ldr	r3, [r7, #4]
 800120a:	011b      	lsls	r3, r3, #4
 800120c:	4413      	add	r3, r2
 800120e:	681a      	ldr	r2, [r3, #0]
 8001210:	4909      	ldr	r1, [pc, #36]	@ (8001238 <initServo+0xe4>)
 8001212:	687b      	ldr	r3, [r7, #4]
 8001214:	011b      	lsls	r3, r3, #4
 8001216:	440b      	add	r3, r1
 8001218:	3304      	adds	r3, #4
 800121a:	681b      	ldr	r3, [r3, #0]
 800121c:	4619      	mov	r1, r3
 800121e:	4610      	mov	r0, r2
 8001220:	f001 fc4c 	bl	8002abc <HAL_TIM_PWM_Start>
 8001224:	687b      	ldr	r3, [r7, #4]
 8001226:	3301      	adds	r3, #1
 8001228:	607b      	str	r3, [r7, #4]
 800122a:	687b      	ldr	r3, [r7, #4]
 800122c:	2b01      	cmp	r3, #1
 800122e:	dd97      	ble.n	8001160 <initServo+0xc>
 8001230:	bf00      	nop
 8001232:	3708      	adds	r7, #8
 8001234:	46bd      	mov	sp, r7
 8001236:	bd80      	pop	{r7, pc}
 8001238:	20000048 	.word	0x20000048

0800123c <getPulse>:
 800123c:	b480      	push	{r7}
 800123e:	b083      	sub	sp, #12
 8001240:	af00      	add	r7, sp, #0
 8001242:	4603      	mov	r3, r0
 8001244:	71fb      	strb	r3, [r7, #7]
 8001246:	79fb      	ldrb	r3, [r7, #7]
 8001248:	4a1f      	ldr	r2, [pc, #124]	@ (80012c8 <getPulse+0x8c>)
 800124a:	011b      	lsls	r3, r3, #4
 800124c:	4413      	add	r3, r2
 800124e:	3304      	adds	r3, #4
 8001250:	681b      	ldr	r3, [r3, #0]
 8001252:	2b00      	cmp	r3, #0
 8001254:	d108      	bne.n	8001268 <getPulse+0x2c>
 8001256:	79fb      	ldrb	r3, [r7, #7]
 8001258:	4a1b      	ldr	r2, [pc, #108]	@ (80012c8 <getPulse+0x8c>)
 800125a:	011b      	lsls	r3, r3, #4
 800125c:	4413      	add	r3, r2
 800125e:	681b      	ldr	r3, [r3, #0]
 8001260:	681b      	ldr	r3, [r3, #0]
 8001262:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8001264:	b29b      	uxth	r3, r3
 8001266:	e029      	b.n	80012bc <getPulse+0x80>
 8001268:	79fb      	ldrb	r3, [r7, #7]
 800126a:	4a17      	ldr	r2, [pc, #92]	@ (80012c8 <getPulse+0x8c>)
 800126c:	011b      	lsls	r3, r3, #4
 800126e:	4413      	add	r3, r2
 8001270:	3304      	adds	r3, #4
 8001272:	681b      	ldr	r3, [r3, #0]
 8001274:	2b04      	cmp	r3, #4
 8001276:	d108      	bne.n	800128a <getPulse+0x4e>
 8001278:	79fb      	ldrb	r3, [r7, #7]
 800127a:	4a13      	ldr	r2, [pc, #76]	@ (80012c8 <getPulse+0x8c>)
 800127c:	011b      	lsls	r3, r3, #4
 800127e:	4413      	add	r3, r2
 8001280:	681b      	ldr	r3, [r3, #0]
 8001282:	681b      	ldr	r3, [r3, #0]
 8001284:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001286:	b29b      	uxth	r3, r3
 8001288:	e018      	b.n	80012bc <getPulse+0x80>
 800128a:	79fb      	ldrb	r3, [r7, #7]
 800128c:	4a0e      	ldr	r2, [pc, #56]	@ (80012c8 <getPulse+0x8c>)
 800128e:	011b      	lsls	r3, r3, #4
 8001290:	4413      	add	r3, r2
 8001292:	3304      	adds	r3, #4
 8001294:	681b      	ldr	r3, [r3, #0]
 8001296:	2b08      	cmp	r3, #8
 8001298:	d108      	bne.n	80012ac <getPulse+0x70>
 800129a:	79fb      	ldrb	r3, [r7, #7]
 800129c:	4a0a      	ldr	r2, [pc, #40]	@ (80012c8 <getPulse+0x8c>)
 800129e:	011b      	lsls	r3, r3, #4
 80012a0:	4413      	add	r3, r2
 80012a2:	681b      	ldr	r3, [r3, #0]
 80012a4:	681b      	ldr	r3, [r3, #0]
 80012a6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80012a8:	b29b      	uxth	r3, r3
 80012aa:	e007      	b.n	80012bc <getPulse+0x80>
 80012ac:	79fb      	ldrb	r3, [r7, #7]
 80012ae:	4a06      	ldr	r2, [pc, #24]	@ (80012c8 <getPulse+0x8c>)
 80012b0:	011b      	lsls	r3, r3, #4
 80012b2:	4413      	add	r3, r2
 80012b4:	681b      	ldr	r3, [r3, #0]
 80012b6:	681b      	ldr	r3, [r3, #0]
 80012b8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80012ba:	b29b      	uxth	r3, r3
 80012bc:	4618      	mov	r0, r3
 80012be:	370c      	adds	r7, #12
 80012c0:	46bd      	mov	sp, r7
 80012c2:	bc80      	pop	{r7}
 80012c4:	4770      	bx	lr
 80012c6:	bf00      	nop
 80012c8:	20000048 	.word	0x20000048

080012cc <getUnitPulse>:
 80012cc:	b480      	push	{r7}
 80012ce:	b083      	sub	sp, #12
 80012d0:	af00      	add	r7, sp, #0
 80012d2:	4603      	mov	r3, r0
 80012d4:	71fb      	strb	r3, [r7, #7]
 80012d6:	79fb      	ldrb	r3, [r7, #7]
 80012d8:	4a04      	ldr	r2, [pc, #16]	@ (80012ec <getUnitPulse+0x20>)
 80012da:	011b      	lsls	r3, r3, #4
 80012dc:	4413      	add	r3, r2
 80012de:	330c      	adds	r3, #12
 80012e0:	881b      	ldrh	r3, [r3, #0]
 80012e2:	4618      	mov	r0, r3
 80012e4:	370c      	adds	r7, #12
 80012e6:	46bd      	mov	sp, r7
 80012e8:	bc80      	pop	{r7}
 80012ea:	4770      	bx	lr
 80012ec:	20000048 	.word	0x20000048

080012f0 <setPulse>:
 80012f0:	b480      	push	{r7}
 80012f2:	b083      	sub	sp, #12
 80012f4:	af00      	add	r7, sp, #0
 80012f6:	4603      	mov	r3, r0
 80012f8:	460a      	mov	r2, r1
 80012fa:	71fb      	strb	r3, [r7, #7]
 80012fc:	4613      	mov	r3, r2
 80012fe:	80bb      	strh	r3, [r7, #4]
 8001300:	79fb      	ldrb	r3, [r7, #7]
 8001302:	4a1f      	ldr	r2, [pc, #124]	@ (8001380 <setPulse+0x90>)
 8001304:	011b      	lsls	r3, r3, #4
 8001306:	4413      	add	r3, r2
 8001308:	3304      	adds	r3, #4
 800130a:	681b      	ldr	r3, [r3, #0]
 800130c:	2b00      	cmp	r3, #0
 800130e:	d108      	bne.n	8001322 <setPulse+0x32>
 8001310:	79fb      	ldrb	r3, [r7, #7]
 8001312:	4a1b      	ldr	r2, [pc, #108]	@ (8001380 <setPulse+0x90>)
 8001314:	011b      	lsls	r3, r3, #4
 8001316:	4413      	add	r3, r2
 8001318:	681b      	ldr	r3, [r3, #0]
 800131a:	681b      	ldr	r3, [r3, #0]
 800131c:	88ba      	ldrh	r2, [r7, #4]
 800131e:	635a      	str	r2, [r3, #52]	@ 0x34
 8001320:	e02a      	b.n	8001378 <setPulse+0x88>
 8001322:	79fb      	ldrb	r3, [r7, #7]
 8001324:	4a16      	ldr	r2, [pc, #88]	@ (8001380 <setPulse+0x90>)
 8001326:	011b      	lsls	r3, r3, #4
 8001328:	4413      	add	r3, r2
 800132a:	3304      	adds	r3, #4
 800132c:	681b      	ldr	r3, [r3, #0]
 800132e:	2b04      	cmp	r3, #4
 8001330:	d108      	bne.n	8001344 <setPulse+0x54>
 8001332:	79fb      	ldrb	r3, [r7, #7]
 8001334:	4a12      	ldr	r2, [pc, #72]	@ (8001380 <setPulse+0x90>)
 8001336:	011b      	lsls	r3, r3, #4
 8001338:	4413      	add	r3, r2
 800133a:	681b      	ldr	r3, [r3, #0]
 800133c:	681a      	ldr	r2, [r3, #0]
 800133e:	88bb      	ldrh	r3, [r7, #4]
 8001340:	6393      	str	r3, [r2, #56]	@ 0x38
 8001342:	e019      	b.n	8001378 <setPulse+0x88>
 8001344:	79fb      	ldrb	r3, [r7, #7]
 8001346:	4a0e      	ldr	r2, [pc, #56]	@ (8001380 <setPulse+0x90>)
 8001348:	011b      	lsls	r3, r3, #4
 800134a:	4413      	add	r3, r2
 800134c:	3304      	adds	r3, #4
 800134e:	681b      	ldr	r3, [r3, #0]
 8001350:	2b08      	cmp	r3, #8
 8001352:	d108      	bne.n	8001366 <setPulse+0x76>
 8001354:	79fb      	ldrb	r3, [r7, #7]
 8001356:	4a0a      	ldr	r2, [pc, #40]	@ (8001380 <setPulse+0x90>)
 8001358:	011b      	lsls	r3, r3, #4
 800135a:	4413      	add	r3, r2
 800135c:	681b      	ldr	r3, [r3, #0]
 800135e:	681a      	ldr	r2, [r3, #0]
 8001360:	88bb      	ldrh	r3, [r7, #4]
 8001362:	63d3      	str	r3, [r2, #60]	@ 0x3c
 8001364:	e008      	b.n	8001378 <setPulse+0x88>
 8001366:	79fb      	ldrb	r3, [r7, #7]
 8001368:	4a05      	ldr	r2, [pc, #20]	@ (8001380 <setPulse+0x90>)
 800136a:	011b      	lsls	r3, r3, #4
 800136c:	4413      	add	r3, r2
 800136e:	681b      	ldr	r3, [r3, #0]
 8001370:	681a      	ldr	r2, [r3, #0]
 8001372:	88bb      	ldrh	r3, [r7, #4]
 8001374:	6413      	str	r3, [r2, #64]	@ 0x40
 8001376:	bf00      	nop
 8001378:	370c      	adds	r7, #12
 800137a:	46bd      	mov	sp, r7
 800137c:	bc80      	pop	{r7}
 800137e:	4770      	bx	lr
 8001380:	20000048 	.word	0x20000048

08001384 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                                                                /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001384:	b480      	push	{r7}
 8001386:	b085      	sub	sp, #20
 8001388:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 800138a:	4b15      	ldr	r3, [pc, #84]	@ (80013e0 <HAL_MspInit+0x5c>)
 800138c:	699b      	ldr	r3, [r3, #24]
 800138e:	4a14      	ldr	r2, [pc, #80]	@ (80013e0 <HAL_MspInit+0x5c>)
 8001390:	f043 0301 	orr.w	r3, r3, #1
 8001394:	6193      	str	r3, [r2, #24]
 8001396:	4b12      	ldr	r3, [pc, #72]	@ (80013e0 <HAL_MspInit+0x5c>)
 8001398:	699b      	ldr	r3, [r3, #24]
 800139a:	f003 0301 	and.w	r3, r3, #1
 800139e:	60bb      	str	r3, [r7, #8]
 80013a0:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 80013a2:	4b0f      	ldr	r3, [pc, #60]	@ (80013e0 <HAL_MspInit+0x5c>)
 80013a4:	69db      	ldr	r3, [r3, #28]
 80013a6:	4a0e      	ldr	r2, [pc, #56]	@ (80013e0 <HAL_MspInit+0x5c>)
 80013a8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80013ac:	61d3      	str	r3, [r2, #28]
 80013ae:	4b0c      	ldr	r3, [pc, #48]	@ (80013e0 <HAL_MspInit+0x5c>)
 80013b0:	69db      	ldr	r3, [r3, #28]
 80013b2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80013b6:	607b      	str	r3, [r7, #4]
 80013b8:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 80013ba:	4b0a      	ldr	r3, [pc, #40]	@ (80013e4 <HAL_MspInit+0x60>)
 80013bc:	685b      	ldr	r3, [r3, #4]
 80013be:	60fb      	str	r3, [r7, #12]
 80013c0:	68fb      	ldr	r3, [r7, #12]
 80013c2:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 80013c6:	60fb      	str	r3, [r7, #12]
 80013c8:	68fb      	ldr	r3, [r7, #12]
 80013ca:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 80013ce:	60fb      	str	r3, [r7, #12]
 80013d0:	4a04      	ldr	r2, [pc, #16]	@ (80013e4 <HAL_MspInit+0x60>)
 80013d2:	68fb      	ldr	r3, [r7, #12]
 80013d4:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80013d6:	bf00      	nop
 80013d8:	3714      	adds	r7, #20
 80013da:	46bd      	mov	sp, r7
 80013dc:	bc80      	pop	{r7}
 80013de:	4770      	bx	lr
 80013e0:	40021000 	.word	0x40021000
 80013e4:	40010000 	.word	0x40010000

080013e8 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 80013e8:	b480      	push	{r7}
 80013ea:	b085      	sub	sp, #20
 80013ec:	af00      	add	r7, sp, #0
 80013ee:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM1)
 80013f0:	687b      	ldr	r3, [r7, #4]
 80013f2:	681b      	ldr	r3, [r3, #0]
 80013f4:	4a12      	ldr	r2, [pc, #72]	@ (8001440 <HAL_TIM_Base_MspInit+0x58>)
 80013f6:	4293      	cmp	r3, r2
 80013f8:	d10c      	bne.n	8001414 <HAL_TIM_Base_MspInit+0x2c>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 80013fa:	4b12      	ldr	r3, [pc, #72]	@ (8001444 <HAL_TIM_Base_MspInit+0x5c>)
 80013fc:	699b      	ldr	r3, [r3, #24]
 80013fe:	4a11      	ldr	r2, [pc, #68]	@ (8001444 <HAL_TIM_Base_MspInit+0x5c>)
 8001400:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8001404:	6193      	str	r3, [r2, #24]
 8001406:	4b0f      	ldr	r3, [pc, #60]	@ (8001444 <HAL_TIM_Base_MspInit+0x5c>)
 8001408:	699b      	ldr	r3, [r3, #24]
 800140a:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800140e:	60fb      	str	r3, [r7, #12]
 8001410:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8001412:	e010      	b.n	8001436 <HAL_TIM_Base_MspInit+0x4e>
  else if(htim_base->Instance==TIM3)
 8001414:	687b      	ldr	r3, [r7, #4]
 8001416:	681b      	ldr	r3, [r3, #0]
 8001418:	4a0b      	ldr	r2, [pc, #44]	@ (8001448 <HAL_TIM_Base_MspInit+0x60>)
 800141a:	4293      	cmp	r3, r2
 800141c:	d10b      	bne.n	8001436 <HAL_TIM_Base_MspInit+0x4e>
    __HAL_RCC_TIM3_CLK_ENABLE();
 800141e:	4b09      	ldr	r3, [pc, #36]	@ (8001444 <HAL_TIM_Base_MspInit+0x5c>)
 8001420:	69db      	ldr	r3, [r3, #28]
 8001422:	4a08      	ldr	r2, [pc, #32]	@ (8001444 <HAL_TIM_Base_MspInit+0x5c>)
 8001424:	f043 0302 	orr.w	r3, r3, #2
 8001428:	61d3      	str	r3, [r2, #28]
 800142a:	4b06      	ldr	r3, [pc, #24]	@ (8001444 <HAL_TIM_Base_MspInit+0x5c>)
 800142c:	69db      	ldr	r3, [r3, #28]
 800142e:	f003 0302 	and.w	r3, r3, #2
 8001432:	60bb      	str	r3, [r7, #8]
 8001434:	68bb      	ldr	r3, [r7, #8]
}
 8001436:	bf00      	nop
 8001438:	3714      	adds	r7, #20
 800143a:	46bd      	mov	sp, r7
 800143c:	bc80      	pop	{r7}
 800143e:	4770      	bx	lr
 8001440:	40012c00 	.word	0x40012c00
 8001444:	40021000 	.word	0x40021000
 8001448:	40000400 	.word	0x40000400

0800144c <HAL_TIM_PWM_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 800144c:	b580      	push	{r7, lr}
 800144e:	b084      	sub	sp, #16
 8001450:	af00      	add	r7, sp, #0
 8001452:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM2)
 8001454:	687b      	ldr	r3, [r7, #4]
 8001456:	681b      	ldr	r3, [r3, #0]
 8001458:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800145c:	d114      	bne.n	8001488 <HAL_TIM_PWM_MspInit+0x3c>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 800145e:	4b15      	ldr	r3, [pc, #84]	@ (80014b4 <HAL_TIM_PWM_MspInit+0x68>)
 8001460:	69db      	ldr	r3, [r3, #28]
 8001462:	4a14      	ldr	r2, [pc, #80]	@ (80014b4 <HAL_TIM_PWM_MspInit+0x68>)
 8001464:	f043 0301 	orr.w	r3, r3, #1
 8001468:	61d3      	str	r3, [r2, #28]
 800146a:	4b12      	ldr	r3, [pc, #72]	@ (80014b4 <HAL_TIM_PWM_MspInit+0x68>)
 800146c:	69db      	ldr	r3, [r3, #28]
 800146e:	f003 0301 	and.w	r3, r3, #1
 8001472:	60fb      	str	r3, [r7, #12]
 8001474:	68fb      	ldr	r3, [r7, #12]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 8001476:	2200      	movs	r2, #0
 8001478:	2100      	movs	r1, #0
 800147a:	201c      	movs	r0, #28
 800147c:	f000 fb75 	bl	8001b6a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8001480:	201c      	movs	r0, #28
 8001482:	f000 fb8e 	bl	8001ba2 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }

}
 8001486:	e010      	b.n	80014aa <HAL_TIM_PWM_MspInit+0x5e>
  else if(htim_pwm->Instance==TIM4)
 8001488:	687b      	ldr	r3, [r7, #4]
 800148a:	681b      	ldr	r3, [r3, #0]
 800148c:	4a0a      	ldr	r2, [pc, #40]	@ (80014b8 <HAL_TIM_PWM_MspInit+0x6c>)
 800148e:	4293      	cmp	r3, r2
 8001490:	d10b      	bne.n	80014aa <HAL_TIM_PWM_MspInit+0x5e>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8001492:	4b08      	ldr	r3, [pc, #32]	@ (80014b4 <HAL_TIM_PWM_MspInit+0x68>)
 8001494:	69db      	ldr	r3, [r3, #28]
 8001496:	4a07      	ldr	r2, [pc, #28]	@ (80014b4 <HAL_TIM_PWM_MspInit+0x68>)
 8001498:	f043 0304 	orr.w	r3, r3, #4
 800149c:	61d3      	str	r3, [r2, #28]
 800149e:	4b05      	ldr	r3, [pc, #20]	@ (80014b4 <HAL_TIM_PWM_MspInit+0x68>)
 80014a0:	69db      	ldr	r3, [r3, #28]
 80014a2:	f003 0304 	and.w	r3, r3, #4
 80014a6:	60bb      	str	r3, [r7, #8]
 80014a8:	68bb      	ldr	r3, [r7, #8]
}
 80014aa:	bf00      	nop
 80014ac:	3710      	adds	r7, #16
 80014ae:	46bd      	mov	sp, r7
 80014b0:	bd80      	pop	{r7, pc}
 80014b2:	bf00      	nop
 80014b4:	40021000 	.word	0x40021000
 80014b8:	40000800 	.word	0x40000800

080014bc <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 80014bc:	b580      	push	{r7, lr}
 80014be:	b08c      	sub	sp, #48	@ 0x30
 80014c0:	af00      	add	r7, sp, #0
 80014c2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014c4:	f107 0318 	add.w	r3, r7, #24
 80014c8:	2200      	movs	r2, #0
 80014ca:	601a      	str	r2, [r3, #0]
 80014cc:	605a      	str	r2, [r3, #4]
 80014ce:	609a      	str	r2, [r3, #8]
 80014d0:	60da      	str	r2, [r3, #12]
  if(htim->Instance==TIM1)
 80014d2:	687b      	ldr	r3, [r7, #4]
 80014d4:	681b      	ldr	r3, [r3, #0]
 80014d6:	4a50      	ldr	r2, [pc, #320]	@ (8001618 <HAL_TIM_MspPostInit+0x15c>)
 80014d8:	4293      	cmp	r3, r2
 80014da:	d119      	bne.n	8001510 <HAL_TIM_MspPostInit+0x54>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80014dc:	4b4f      	ldr	r3, [pc, #316]	@ (800161c <HAL_TIM_MspPostInit+0x160>)
 80014de:	699b      	ldr	r3, [r3, #24]
 80014e0:	4a4e      	ldr	r2, [pc, #312]	@ (800161c <HAL_TIM_MspPostInit+0x160>)
 80014e2:	f043 0304 	orr.w	r3, r3, #4
 80014e6:	6193      	str	r3, [r2, #24]
 80014e8:	4b4c      	ldr	r3, [pc, #304]	@ (800161c <HAL_TIM_MspPostInit+0x160>)
 80014ea:	699b      	ldr	r3, [r3, #24]
 80014ec:	f003 0304 	and.w	r3, r3, #4
 80014f0:	617b      	str	r3, [r7, #20]
 80014f2:	697b      	ldr	r3, [r7, #20]
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80014f4:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80014f8:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80014fa:	2302      	movs	r3, #2
 80014fc:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80014fe:	2302      	movs	r3, #2
 8001500:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001502:	f107 0318 	add.w	r3, r7, #24
 8001506:	4619      	mov	r1, r3
 8001508:	4845      	ldr	r0, [pc, #276]	@ (8001620 <HAL_TIM_MspPostInit+0x164>)
 800150a:	f000 fc17 	bl	8001d3c <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM4_MspPostInit 1 */

  /* USER CODE END TIM4_MspPostInit 1 */
  }

}
 800150e:	e07e      	b.n	800160e <HAL_TIM_MspPostInit+0x152>
  else if(htim->Instance==TIM2)
 8001510:	687b      	ldr	r3, [r7, #4]
 8001512:	681b      	ldr	r3, [r3, #0]
 8001514:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001518:	d12b      	bne.n	8001572 <HAL_TIM_MspPostInit+0xb6>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800151a:	4b40      	ldr	r3, [pc, #256]	@ (800161c <HAL_TIM_MspPostInit+0x160>)
 800151c:	699b      	ldr	r3, [r3, #24]
 800151e:	4a3f      	ldr	r2, [pc, #252]	@ (800161c <HAL_TIM_MspPostInit+0x160>)
 8001520:	f043 0308 	orr.w	r3, r3, #8
 8001524:	6193      	str	r3, [r2, #24]
 8001526:	4b3d      	ldr	r3, [pc, #244]	@ (800161c <HAL_TIM_MspPostInit+0x160>)
 8001528:	699b      	ldr	r3, [r3, #24]
 800152a:	f003 0308 	and.w	r3, r3, #8
 800152e:	613b      	str	r3, [r7, #16]
 8001530:	693b      	ldr	r3, [r7, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_3;
 8001532:	f44f 6381 	mov.w	r3, #1032	@ 0x408
 8001536:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001538:	2302      	movs	r3, #2
 800153a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800153c:	2302      	movs	r3, #2
 800153e:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001540:	f107 0318 	add.w	r3, r7, #24
 8001544:	4619      	mov	r1, r3
 8001546:	4837      	ldr	r0, [pc, #220]	@ (8001624 <HAL_TIM_MspPostInit+0x168>)
 8001548:	f000 fbf8 	bl	8001d3c <HAL_GPIO_Init>
    __HAL_AFIO_REMAP_TIM2_ENABLE();
 800154c:	4b36      	ldr	r3, [pc, #216]	@ (8001628 <HAL_TIM_MspPostInit+0x16c>)
 800154e:	685b      	ldr	r3, [r3, #4]
 8001550:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001552:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001554:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8001558:	62bb      	str	r3, [r7, #40]	@ 0x28
 800155a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800155c:	f043 63e0 	orr.w	r3, r3, #117440512	@ 0x7000000
 8001560:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001562:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001564:	f443 7340 	orr.w	r3, r3, #768	@ 0x300
 8001568:	62bb      	str	r3, [r7, #40]	@ 0x28
 800156a:	4a2f      	ldr	r2, [pc, #188]	@ (8001628 <HAL_TIM_MspPostInit+0x16c>)
 800156c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800156e:	6053      	str	r3, [r2, #4]
}
 8001570:	e04d      	b.n	800160e <HAL_TIM_MspPostInit+0x152>
  else if(htim->Instance==TIM3)
 8001572:	687b      	ldr	r3, [r7, #4]
 8001574:	681b      	ldr	r3, [r3, #0]
 8001576:	4a2d      	ldr	r2, [pc, #180]	@ (800162c <HAL_TIM_MspPostInit+0x170>)
 8001578:	4293      	cmp	r3, r2
 800157a:	d12a      	bne.n	80015d2 <HAL_TIM_MspPostInit+0x116>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800157c:	4b27      	ldr	r3, [pc, #156]	@ (800161c <HAL_TIM_MspPostInit+0x160>)
 800157e:	699b      	ldr	r3, [r3, #24]
 8001580:	4a26      	ldr	r2, [pc, #152]	@ (800161c <HAL_TIM_MspPostInit+0x160>)
 8001582:	f043 0308 	orr.w	r3, r3, #8
 8001586:	6193      	str	r3, [r2, #24]
 8001588:	4b24      	ldr	r3, [pc, #144]	@ (800161c <HAL_TIM_MspPostInit+0x160>)
 800158a:	699b      	ldr	r3, [r3, #24]
 800158c:	f003 0308 	and.w	r3, r3, #8
 8001590:	60fb      	str	r3, [r7, #12]
 8001592:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_4;
 8001594:	2312      	movs	r3, #18
 8001596:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001598:	2302      	movs	r3, #2
 800159a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800159c:	2302      	movs	r3, #2
 800159e:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015a0:	f107 0318 	add.w	r3, r7, #24
 80015a4:	4619      	mov	r1, r3
 80015a6:	481f      	ldr	r0, [pc, #124]	@ (8001624 <HAL_TIM_MspPostInit+0x168>)
 80015a8:	f000 fbc8 	bl	8001d3c <HAL_GPIO_Init>
    __HAL_AFIO_REMAP_TIM3_PARTIAL();
 80015ac:	4b1e      	ldr	r3, [pc, #120]	@ (8001628 <HAL_TIM_MspPostInit+0x16c>)
 80015ae:	685b      	ldr	r3, [r3, #4]
 80015b0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80015b2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015b4:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
 80015b8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80015ba:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015bc:	f043 63e0 	orr.w	r3, r3, #117440512	@ 0x7000000
 80015c0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80015c2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015c4:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 80015c8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80015ca:	4a17      	ldr	r2, [pc, #92]	@ (8001628 <HAL_TIM_MspPostInit+0x16c>)
 80015cc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015ce:	6053      	str	r3, [r2, #4]
}
 80015d0:	e01d      	b.n	800160e <HAL_TIM_MspPostInit+0x152>
  else if(htim->Instance==TIM4)
 80015d2:	687b      	ldr	r3, [r7, #4]
 80015d4:	681b      	ldr	r3, [r3, #0]
 80015d6:	4a16      	ldr	r2, [pc, #88]	@ (8001630 <HAL_TIM_MspPostInit+0x174>)
 80015d8:	4293      	cmp	r3, r2
 80015da:	d118      	bne.n	800160e <HAL_TIM_MspPostInit+0x152>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80015dc:	4b0f      	ldr	r3, [pc, #60]	@ (800161c <HAL_TIM_MspPostInit+0x160>)
 80015de:	699b      	ldr	r3, [r3, #24]
 80015e0:	4a0e      	ldr	r2, [pc, #56]	@ (800161c <HAL_TIM_MspPostInit+0x160>)
 80015e2:	f043 0308 	orr.w	r3, r3, #8
 80015e6:	6193      	str	r3, [r2, #24]
 80015e8:	4b0c      	ldr	r3, [pc, #48]	@ (800161c <HAL_TIM_MspPostInit+0x160>)
 80015ea:	699b      	ldr	r3, [r3, #24]
 80015ec:	f003 0308 	and.w	r3, r3, #8
 80015f0:	60bb      	str	r3, [r7, #8]
 80015f2:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_8;
 80015f4:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80015f8:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80015fa:	2302      	movs	r3, #2
 80015fc:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015fe:	2302      	movs	r3, #2
 8001600:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001602:	f107 0318 	add.w	r3, r7, #24
 8001606:	4619      	mov	r1, r3
 8001608:	4806      	ldr	r0, [pc, #24]	@ (8001624 <HAL_TIM_MspPostInit+0x168>)
 800160a:	f000 fb97 	bl	8001d3c <HAL_GPIO_Init>
}
 800160e:	bf00      	nop
 8001610:	3730      	adds	r7, #48	@ 0x30
 8001612:	46bd      	mov	sp, r7
 8001614:	bd80      	pop	{r7, pc}
 8001616:	bf00      	nop
 8001618:	40012c00 	.word	0x40012c00
 800161c:	40021000 	.word	0x40021000
 8001620:	40010800 	.word	0x40010800
 8001624:	40010c00 	.word	0x40010c00
 8001628:	40010000 	.word	0x40010000
 800162c:	40000400 	.word	0x40000400
 8001630:	40000800 	.word	0x40000800

08001634 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001634:	b580      	push	{r7, lr}
 8001636:	b08a      	sub	sp, #40	@ 0x28
 8001638:	af00      	add	r7, sp, #0
 800163a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800163c:	f107 0318 	add.w	r3, r7, #24
 8001640:	2200      	movs	r2, #0
 8001642:	601a      	str	r2, [r3, #0]
 8001644:	605a      	str	r2, [r3, #4]
 8001646:	609a      	str	r2, [r3, #8]
 8001648:	60da      	str	r2, [r3, #12]
  if(huart->Instance==USART1)
 800164a:	687b      	ldr	r3, [r7, #4]
 800164c:	681b      	ldr	r3, [r3, #0]
 800164e:	4a3b      	ldr	r2, [pc, #236]	@ (800173c <HAL_UART_MspInit+0x108>)
 8001650:	4293      	cmp	r3, r2
 8001652:	d13a      	bne.n	80016ca <HAL_UART_MspInit+0x96>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8001654:	4b3a      	ldr	r3, [pc, #232]	@ (8001740 <HAL_UART_MspInit+0x10c>)
 8001656:	699b      	ldr	r3, [r3, #24]
 8001658:	4a39      	ldr	r2, [pc, #228]	@ (8001740 <HAL_UART_MspInit+0x10c>)
 800165a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800165e:	6193      	str	r3, [r2, #24]
 8001660:	4b37      	ldr	r3, [pc, #220]	@ (8001740 <HAL_UART_MspInit+0x10c>)
 8001662:	699b      	ldr	r3, [r3, #24]
 8001664:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001668:	617b      	str	r3, [r7, #20]
 800166a:	697b      	ldr	r3, [r7, #20]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800166c:	4b34      	ldr	r3, [pc, #208]	@ (8001740 <HAL_UART_MspInit+0x10c>)
 800166e:	699b      	ldr	r3, [r3, #24]
 8001670:	4a33      	ldr	r2, [pc, #204]	@ (8001740 <HAL_UART_MspInit+0x10c>)
 8001672:	f043 0304 	orr.w	r3, r3, #4
 8001676:	6193      	str	r3, [r2, #24]
 8001678:	4b31      	ldr	r3, [pc, #196]	@ (8001740 <HAL_UART_MspInit+0x10c>)
 800167a:	699b      	ldr	r3, [r3, #24]
 800167c:	f003 0304 	and.w	r3, r3, #4
 8001680:	613b      	str	r3, [r7, #16]
 8001682:	693b      	ldr	r3, [r7, #16]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001684:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8001688:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800168a:	2302      	movs	r3, #2
 800168c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800168e:	2303      	movs	r3, #3
 8001690:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001692:	f107 0318 	add.w	r3, r7, #24
 8001696:	4619      	mov	r1, r3
 8001698:	482a      	ldr	r0, [pc, #168]	@ (8001744 <HAL_UART_MspInit+0x110>)
 800169a:	f000 fb4f 	bl	8001d3c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10;
 800169e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80016a2:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80016a4:	2300      	movs	r3, #0
 80016a6:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80016a8:	2300      	movs	r3, #0
 80016aa:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80016ac:	f107 0318 	add.w	r3, r7, #24
 80016b0:	4619      	mov	r1, r3
 80016b2:	4824      	ldr	r0, [pc, #144]	@ (8001744 <HAL_UART_MspInit+0x110>)
 80016b4:	f000 fb42 	bl	8001d3c <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 80016b8:	2200      	movs	r2, #0
 80016ba:	2100      	movs	r1, #0
 80016bc:	2025      	movs	r0, #37	@ 0x25
 80016be:	f000 fa54 	bl	8001b6a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 80016c2:	2025      	movs	r0, #37	@ 0x25
 80016c4:	f000 fa6d 	bl	8001ba2 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 80016c8:	e034      	b.n	8001734 <HAL_UART_MspInit+0x100>
  else if(huart->Instance==USART2)
 80016ca:	687b      	ldr	r3, [r7, #4]
 80016cc:	681b      	ldr	r3, [r3, #0]
 80016ce:	4a1e      	ldr	r2, [pc, #120]	@ (8001748 <HAL_UART_MspInit+0x114>)
 80016d0:	4293      	cmp	r3, r2
 80016d2:	d12f      	bne.n	8001734 <HAL_UART_MspInit+0x100>
    __HAL_RCC_USART2_CLK_ENABLE();
 80016d4:	4b1a      	ldr	r3, [pc, #104]	@ (8001740 <HAL_UART_MspInit+0x10c>)
 80016d6:	69db      	ldr	r3, [r3, #28]
 80016d8:	4a19      	ldr	r2, [pc, #100]	@ (8001740 <HAL_UART_MspInit+0x10c>)
 80016da:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80016de:	61d3      	str	r3, [r2, #28]
 80016e0:	4b17      	ldr	r3, [pc, #92]	@ (8001740 <HAL_UART_MspInit+0x10c>)
 80016e2:	69db      	ldr	r3, [r3, #28]
 80016e4:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80016e8:	60fb      	str	r3, [r7, #12]
 80016ea:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80016ec:	4b14      	ldr	r3, [pc, #80]	@ (8001740 <HAL_UART_MspInit+0x10c>)
 80016ee:	699b      	ldr	r3, [r3, #24]
 80016f0:	4a13      	ldr	r2, [pc, #76]	@ (8001740 <HAL_UART_MspInit+0x10c>)
 80016f2:	f043 0304 	orr.w	r3, r3, #4
 80016f6:	6193      	str	r3, [r2, #24]
 80016f8:	4b11      	ldr	r3, [pc, #68]	@ (8001740 <HAL_UART_MspInit+0x10c>)
 80016fa:	699b      	ldr	r3, [r3, #24]
 80016fc:	f003 0304 	and.w	r3, r3, #4
 8001700:	60bb      	str	r3, [r7, #8]
 8001702:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001704:	2304      	movs	r3, #4
 8001706:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001708:	2302      	movs	r3, #2
 800170a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800170c:	2303      	movs	r3, #3
 800170e:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001710:	f107 0318 	add.w	r3, r7, #24
 8001714:	4619      	mov	r1, r3
 8001716:	480b      	ldr	r0, [pc, #44]	@ (8001744 <HAL_UART_MspInit+0x110>)
 8001718:	f000 fb10 	bl	8001d3c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800171c:	2308      	movs	r3, #8
 800171e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001720:	2300      	movs	r3, #0
 8001722:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001724:	2300      	movs	r3, #0
 8001726:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001728:	f107 0318 	add.w	r3, r7, #24
 800172c:	4619      	mov	r1, r3
 800172e:	4805      	ldr	r0, [pc, #20]	@ (8001744 <HAL_UART_MspInit+0x110>)
 8001730:	f000 fb04 	bl	8001d3c <HAL_GPIO_Init>
}
 8001734:	bf00      	nop
 8001736:	3728      	adds	r7, #40	@ 0x28
 8001738:	46bd      	mov	sp, r7
 800173a:	bd80      	pop	{r7, pc}
 800173c:	40013800 	.word	0x40013800
 8001740:	40021000 	.word	0x40021000
 8001744:	40010800 	.word	0x40010800
 8001748:	40004400 	.word	0x40004400

0800174c <NMI_Handler>:
 800174c:	b480      	push	{r7}
 800174e:	af00      	add	r7, sp, #0
 8001750:	bf00      	nop
 8001752:	e7fd      	b.n	8001750 <NMI_Handler+0x4>

08001754 <HardFault_Handler>:
 8001754:	b480      	push	{r7}
 8001756:	af00      	add	r7, sp, #0
 8001758:	bf00      	nop
 800175a:	e7fd      	b.n	8001758 <HardFault_Handler+0x4>

0800175c <MemManage_Handler>:
 800175c:	b480      	push	{r7}
 800175e:	af00      	add	r7, sp, #0
 8001760:	bf00      	nop
 8001762:	e7fd      	b.n	8001760 <MemManage_Handler+0x4>

08001764 <BusFault_Handler>:
 8001764:	b480      	push	{r7}
 8001766:	af00      	add	r7, sp, #0
 8001768:	bf00      	nop
 800176a:	e7fd      	b.n	8001768 <BusFault_Handler+0x4>

0800176c <UsageFault_Handler>:
 800176c:	b480      	push	{r7}
 800176e:	af00      	add	r7, sp, #0
 8001770:	bf00      	nop
 8001772:	e7fd      	b.n	8001770 <UsageFault_Handler+0x4>

08001774 <SVC_Handler>:
 8001774:	b480      	push	{r7}
 8001776:	af00      	add	r7, sp, #0
 8001778:	bf00      	nop
 800177a:	46bd      	mov	sp, r7
 800177c:	bc80      	pop	{r7}
 800177e:	4770      	bx	lr

08001780 <DebugMon_Handler>:
 8001780:	b480      	push	{r7}
 8001782:	af00      	add	r7, sp, #0
 8001784:	bf00      	nop
 8001786:	46bd      	mov	sp, r7
 8001788:	bc80      	pop	{r7}
 800178a:	4770      	bx	lr

0800178c <PendSV_Handler>:
 800178c:	b480      	push	{r7}
 800178e:	af00      	add	r7, sp, #0
 8001790:	bf00      	nop
 8001792:	46bd      	mov	sp, r7
 8001794:	bc80      	pop	{r7}
 8001796:	4770      	bx	lr

08001798 <SysTick_Handler>:
 8001798:	b580      	push	{r7, lr}
 800179a:	af00      	add	r7, sp, #0
 800179c:	f000 f8f2 	bl	8001984 <HAL_IncTick>
 80017a0:	bf00      	nop
 80017a2:	bd80      	pop	{r7, pc}

080017a4 <TIM2_IRQHandler>:
 80017a4:	b580      	push	{r7, lr}
 80017a6:	af00      	add	r7, sp, #0
 80017a8:	4802      	ldr	r0, [pc, #8]	@ (80017b4 <TIM2_IRQHandler+0x10>)
 80017aa:	f001 fa29 	bl	8002c00 <HAL_TIM_IRQHandler>
 80017ae:	bf00      	nop
 80017b0:	bd80      	pop	{r7, pc}
 80017b2:	bf00      	nop
 80017b4:	20000128 	.word	0x20000128

080017b8 <USART1_IRQHandler>:
 80017b8:	b580      	push	{r7, lr}
 80017ba:	af00      	add	r7, sp, #0
 80017bc:	4802      	ldr	r0, [pc, #8]	@ (80017c8 <USART1_IRQHandler+0x10>)
 80017be:	f002 f92f 	bl	8003a20 <HAL_UART_IRQHandler>
 80017c2:	bf00      	nop
 80017c4:	bd80      	pop	{r7, pc}
 80017c6:	bf00      	nop
 80017c8:	20000200 	.word	0x20000200

080017cc <EXTI15_10_IRQHandler>:
 80017cc:	b580      	push	{r7, lr}
 80017ce:	af00      	add	r7, sp, #0
 80017d0:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 80017d4:	f000 fc4e 	bl	8002074 <HAL_GPIO_EXTI_IRQHandler>
 80017d8:	bf00      	nop
 80017da:	bd80      	pop	{r7, pc}

080017dc <_sbrk>:
 80017dc:	b580      	push	{r7, lr}
 80017de:	b086      	sub	sp, #24
 80017e0:	af00      	add	r7, sp, #0
 80017e2:	6078      	str	r0, [r7, #4]
 80017e4:	4a14      	ldr	r2, [pc, #80]	@ (8001838 <_sbrk+0x5c>)
 80017e6:	4b15      	ldr	r3, [pc, #84]	@ (800183c <_sbrk+0x60>)
 80017e8:	1ad3      	subs	r3, r2, r3
 80017ea:	617b      	str	r3, [r7, #20]
 80017ec:	697b      	ldr	r3, [r7, #20]
 80017ee:	613b      	str	r3, [r7, #16]
 80017f0:	4b13      	ldr	r3, [pc, #76]	@ (8001840 <_sbrk+0x64>)
 80017f2:	681b      	ldr	r3, [r3, #0]
 80017f4:	2b00      	cmp	r3, #0
 80017f6:	d102      	bne.n	80017fe <_sbrk+0x22>
 80017f8:	4b11      	ldr	r3, [pc, #68]	@ (8001840 <_sbrk+0x64>)
 80017fa:	4a12      	ldr	r2, [pc, #72]	@ (8001844 <_sbrk+0x68>)
 80017fc:	601a      	str	r2, [r3, #0]
 80017fe:	4b10      	ldr	r3, [pc, #64]	@ (8001840 <_sbrk+0x64>)
 8001800:	681a      	ldr	r2, [r3, #0]
 8001802:	687b      	ldr	r3, [r7, #4]
 8001804:	4413      	add	r3, r2
 8001806:	693a      	ldr	r2, [r7, #16]
 8001808:	429a      	cmp	r2, r3
 800180a:	d207      	bcs.n	800181c <_sbrk+0x40>
 800180c:	f002 fea6 	bl	800455c <__errno>
 8001810:	4603      	mov	r3, r0
 8001812:	220c      	movs	r2, #12
 8001814:	601a      	str	r2, [r3, #0]
 8001816:	f04f 33ff 	mov.w	r3, #4294967295
 800181a:	e009      	b.n	8001830 <_sbrk+0x54>
 800181c:	4b08      	ldr	r3, [pc, #32]	@ (8001840 <_sbrk+0x64>)
 800181e:	681b      	ldr	r3, [r3, #0]
 8001820:	60fb      	str	r3, [r7, #12]
 8001822:	4b07      	ldr	r3, [pc, #28]	@ (8001840 <_sbrk+0x64>)
 8001824:	681a      	ldr	r2, [r3, #0]
 8001826:	687b      	ldr	r3, [r7, #4]
 8001828:	4413      	add	r3, r2
 800182a:	4a05      	ldr	r2, [pc, #20]	@ (8001840 <_sbrk+0x64>)
 800182c:	6013      	str	r3, [r2, #0]
 800182e:	68fb      	ldr	r3, [r7, #12]
 8001830:	4618      	mov	r0, r3
 8001832:	3718      	adds	r7, #24
 8001834:	46bd      	mov	sp, r7
 8001836:	bd80      	pop	{r7, pc}
 8001838:	20005000 	.word	0x20005000
 800183c:	00000400 	.word	0x00000400
 8001840:	200003ac 	.word	0x200003ac
 8001844:	20000500 	.word	0x20000500

08001848 <SystemInit>:
 8001848:	b480      	push	{r7}
 800184a:	af00      	add	r7, sp, #0
 800184c:	bf00      	nop
 800184e:	46bd      	mov	sp, r7
 8001850:	bc80      	pop	{r7}
 8001852:	4770      	bx	lr

08001854 <calculate_checksum>:
 */
#include "uart_packet.h"
#include <string.h>

/* Calculate 8-bit XOR checksum */
uint8_t calculate_checksum(const uint8_t* data, size_t length) {
 8001854:	b480      	push	{r7}
 8001856:	b085      	sub	sp, #20
 8001858:	af00      	add	r7, sp, #0
 800185a:	6078      	str	r0, [r7, #4]
 800185c:	6039      	str	r1, [r7, #0]
    uint8_t sum = 0;
 800185e:	2300      	movs	r3, #0
 8001860:	73fb      	strb	r3, [r7, #15]
    for (size_t i = 0; i < length; ++i) {
 8001862:	2300      	movs	r3, #0
 8001864:	60bb      	str	r3, [r7, #8]
 8001866:	e009      	b.n	800187c <calculate_checksum+0x28>
        sum ^= data[i];
 8001868:	687a      	ldr	r2, [r7, #4]
 800186a:	68bb      	ldr	r3, [r7, #8]
 800186c:	4413      	add	r3, r2
 800186e:	781a      	ldrb	r2, [r3, #0]
 8001870:	7bfb      	ldrb	r3, [r7, #15]
 8001872:	4053      	eors	r3, r2
 8001874:	73fb      	strb	r3, [r7, #15]
    for (size_t i = 0; i < length; ++i) {
 8001876:	68bb      	ldr	r3, [r7, #8]
 8001878:	3301      	adds	r3, #1
 800187a:	60bb      	str	r3, [r7, #8]
 800187c:	68ba      	ldr	r2, [r7, #8]
 800187e:	683b      	ldr	r3, [r7, #0]
 8001880:	429a      	cmp	r2, r3
 8001882:	d3f1      	bcc.n	8001868 <calculate_checksum+0x14>
    }
    return sum;
 8001884:	7bfb      	ldrb	r3, [r7, #15]
}
 8001886:	4618      	mov	r0, r3
 8001888:	3714      	adds	r7, #20
 800188a:	46bd      	mov	sp, r7
 800188c:	bc80      	pop	{r7}
 800188e:	4770      	bx	lr

08001890 <deserialize_actuator_packet>:
    /* Compute and append CRC */
    buffer[ACTUATOR_PACKET_SIZE - 1] = calculate_checksum(buffer, ACTUATOR_PACKET_SIZE - 1);
}

/* Deserialize buffer into ActuatorPacket */
void deserialize_actuator_packet(const uint8_t* buffer, struct ActuatorPacket* packet) {
 8001890:	b580      	push	{r7, lr}
 8001892:	b082      	sub	sp, #8
 8001894:	af00      	add	r7, sp, #0
 8001896:	6078      	str	r0, [r7, #4]
 8001898:	6039      	str	r1, [r7, #0]
    /* Copy entire packet */
    memcpy(packet, buffer, ACTUATOR_PACKET_SIZE);
 800189a:	220b      	movs	r2, #11
 800189c:	6879      	ldr	r1, [r7, #4]
 800189e:	6838      	ldr	r0, [r7, #0]
 80018a0:	f002 fe88 	bl	80045b4 <memcpy>
    /* Optional CRC validation */
    /* if (calculate_checksum(buffer, ACTUATOR_PACKET_SIZE - 1) != packet->crc) {
         // handle CRC mismatch
       } */
}
 80018a4:	bf00      	nop
 80018a6:	3708      	adds	r7, #8
 80018a8:	46bd      	mov	sp, r7
 80018aa:	bd80      	pop	{r7, pc}

080018ac <Reset_Handler>:
 80018ac:	f7ff ffcc 	bl	8001848 <SystemInit>
 80018b0:	480b      	ldr	r0, [pc, #44]	@ (80018e0 <LoopFillZerobss+0xe>)
 80018b2:	490c      	ldr	r1, [pc, #48]	@ (80018e4 <LoopFillZerobss+0x12>)
 80018b4:	4a0c      	ldr	r2, [pc, #48]	@ (80018e8 <LoopFillZerobss+0x16>)
 80018b6:	2300      	movs	r3, #0
 80018b8:	e002      	b.n	80018c0 <LoopCopyDataInit>

080018ba <CopyDataInit>:
 80018ba:	58d4      	ldr	r4, [r2, r3]
 80018bc:	50c4      	str	r4, [r0, r3]
 80018be:	3304      	adds	r3, #4

080018c0 <LoopCopyDataInit>:
 80018c0:	18c4      	adds	r4, r0, r3
 80018c2:	428c      	cmp	r4, r1
 80018c4:	d3f9      	bcc.n	80018ba <CopyDataInit>
 80018c6:	4a09      	ldr	r2, [pc, #36]	@ (80018ec <LoopFillZerobss+0x1a>)
 80018c8:	4c09      	ldr	r4, [pc, #36]	@ (80018f0 <LoopFillZerobss+0x1e>)
 80018ca:	2300      	movs	r3, #0
 80018cc:	e001      	b.n	80018d2 <LoopFillZerobss>

080018ce <FillZerobss>:
 80018ce:	6013      	str	r3, [r2, #0]
 80018d0:	3204      	adds	r2, #4

080018d2 <LoopFillZerobss>:
 80018d2:	42a2      	cmp	r2, r4
 80018d4:	d3fb      	bcc.n	80018ce <FillZerobss>
 80018d6:	f002 fe47 	bl	8004568 <__libc_init_array>
 80018da:	f7fe fd25 	bl	8000328 <main>
 80018de:	4770      	bx	lr
 80018e0:	20000000 	.word	0x20000000
 80018e4:	200000c4 	.word	0x200000c4
 80018e8:	08004fb4 	.word	0x08004fb4
 80018ec:	200000c4 	.word	0x200000c4
 80018f0:	200004fc 	.word	0x200004fc

080018f4 <ADC1_2_IRQHandler>:
 80018f4:	e7fe      	b.n	80018f4 <ADC1_2_IRQHandler>
	...

080018f8 <HAL_Init>:
 80018f8:	b580      	push	{r7, lr}
 80018fa:	af00      	add	r7, sp, #0
 80018fc:	4b08      	ldr	r3, [pc, #32]	@ (8001920 <HAL_Init+0x28>)
 80018fe:	681b      	ldr	r3, [r3, #0]
 8001900:	4a07      	ldr	r2, [pc, #28]	@ (8001920 <HAL_Init+0x28>)
 8001902:	f043 0310 	orr.w	r3, r3, #16
 8001906:	6013      	str	r3, [r2, #0]
 8001908:	2003      	movs	r0, #3
 800190a:	f000 f923 	bl	8001b54 <HAL_NVIC_SetPriorityGrouping>
 800190e:	2000      	movs	r0, #0
 8001910:	f000 f808 	bl	8001924 <HAL_InitTick>
 8001914:	f7ff fd36 	bl	8001384 <HAL_MspInit>
 8001918:	2300      	movs	r3, #0
 800191a:	4618      	mov	r0, r3
 800191c:	bd80      	pop	{r7, pc}
 800191e:	bf00      	nop
 8001920:	40022000 	.word	0x40022000

08001924 <HAL_InitTick>:
 8001924:	b580      	push	{r7, lr}
 8001926:	b082      	sub	sp, #8
 8001928:	af00      	add	r7, sp, #0
 800192a:	6078      	str	r0, [r7, #4]
 800192c:	4b12      	ldr	r3, [pc, #72]	@ (8001978 <HAL_InitTick+0x54>)
 800192e:	681a      	ldr	r2, [r3, #0]
 8001930:	4b12      	ldr	r3, [pc, #72]	@ (800197c <HAL_InitTick+0x58>)
 8001932:	781b      	ldrb	r3, [r3, #0]
 8001934:	4619      	mov	r1, r3
 8001936:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800193a:	fbb3 f3f1 	udiv	r3, r3, r1
 800193e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001942:	4618      	mov	r0, r3
 8001944:	f000 f93b 	bl	8001bbe <HAL_SYSTICK_Config>
 8001948:	4603      	mov	r3, r0
 800194a:	2b00      	cmp	r3, #0
 800194c:	d001      	beq.n	8001952 <HAL_InitTick+0x2e>
 800194e:	2301      	movs	r3, #1
 8001950:	e00e      	b.n	8001970 <HAL_InitTick+0x4c>
 8001952:	687b      	ldr	r3, [r7, #4]
 8001954:	2b0f      	cmp	r3, #15
 8001956:	d80a      	bhi.n	800196e <HAL_InitTick+0x4a>
 8001958:	2200      	movs	r2, #0
 800195a:	6879      	ldr	r1, [r7, #4]
 800195c:	f04f 30ff 	mov.w	r0, #4294967295
 8001960:	f000 f903 	bl	8001b6a <HAL_NVIC_SetPriority>
 8001964:	4a06      	ldr	r2, [pc, #24]	@ (8001980 <HAL_InitTick+0x5c>)
 8001966:	687b      	ldr	r3, [r7, #4]
 8001968:	6013      	str	r3, [r2, #0]
 800196a:	2300      	movs	r3, #0
 800196c:	e000      	b.n	8001970 <HAL_InitTick+0x4c>
 800196e:	2301      	movs	r3, #1
 8001970:	4618      	mov	r0, r3
 8001972:	3708      	adds	r7, #8
 8001974:	46bd      	mov	sp, r7
 8001976:	bd80      	pop	{r7, pc}
 8001978:	20000068 	.word	0x20000068
 800197c:	20000070 	.word	0x20000070
 8001980:	2000006c 	.word	0x2000006c

08001984 <HAL_IncTick>:
 8001984:	b480      	push	{r7}
 8001986:	af00      	add	r7, sp, #0
 8001988:	4b05      	ldr	r3, [pc, #20]	@ (80019a0 <HAL_IncTick+0x1c>)
 800198a:	781b      	ldrb	r3, [r3, #0]
 800198c:	461a      	mov	r2, r3
 800198e:	4b05      	ldr	r3, [pc, #20]	@ (80019a4 <HAL_IncTick+0x20>)
 8001990:	681b      	ldr	r3, [r3, #0]
 8001992:	4413      	add	r3, r2
 8001994:	4a03      	ldr	r2, [pc, #12]	@ (80019a4 <HAL_IncTick+0x20>)
 8001996:	6013      	str	r3, [r2, #0]
 8001998:	bf00      	nop
 800199a:	46bd      	mov	sp, r7
 800199c:	bc80      	pop	{r7}
 800199e:	4770      	bx	lr
 80019a0:	20000070 	.word	0x20000070
 80019a4:	200003b0 	.word	0x200003b0

080019a8 <HAL_GetTick>:
 80019a8:	b480      	push	{r7}
 80019aa:	af00      	add	r7, sp, #0
 80019ac:	4b02      	ldr	r3, [pc, #8]	@ (80019b8 <HAL_GetTick+0x10>)
 80019ae:	681b      	ldr	r3, [r3, #0]
 80019b0:	4618      	mov	r0, r3
 80019b2:	46bd      	mov	sp, r7
 80019b4:	bc80      	pop	{r7}
 80019b6:	4770      	bx	lr
 80019b8:	200003b0 	.word	0x200003b0

080019bc <__NVIC_SetPriorityGrouping>:
 80019bc:	b480      	push	{r7}
 80019be:	b085      	sub	sp, #20
 80019c0:	af00      	add	r7, sp, #0
 80019c2:	6078      	str	r0, [r7, #4]
 80019c4:	687b      	ldr	r3, [r7, #4]
 80019c6:	f003 0307 	and.w	r3, r3, #7
 80019ca:	60fb      	str	r3, [r7, #12]
 80019cc:	4b0c      	ldr	r3, [pc, #48]	@ (8001a00 <__NVIC_SetPriorityGrouping+0x44>)
 80019ce:	68db      	ldr	r3, [r3, #12]
 80019d0:	60bb      	str	r3, [r7, #8]
 80019d2:	68ba      	ldr	r2, [r7, #8]
 80019d4:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80019d8:	4013      	ands	r3, r2
 80019da:	60bb      	str	r3, [r7, #8]
 80019dc:	68fb      	ldr	r3, [r7, #12]
 80019de:	021a      	lsls	r2, r3, #8
 80019e0:	68bb      	ldr	r3, [r7, #8]
 80019e2:	4313      	orrs	r3, r2
 80019e4:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80019e8:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80019ec:	60bb      	str	r3, [r7, #8]
 80019ee:	4a04      	ldr	r2, [pc, #16]	@ (8001a00 <__NVIC_SetPriorityGrouping+0x44>)
 80019f0:	68bb      	ldr	r3, [r7, #8]
 80019f2:	60d3      	str	r3, [r2, #12]
 80019f4:	bf00      	nop
 80019f6:	3714      	adds	r7, #20
 80019f8:	46bd      	mov	sp, r7
 80019fa:	bc80      	pop	{r7}
 80019fc:	4770      	bx	lr
 80019fe:	bf00      	nop
 8001a00:	e000ed00 	.word	0xe000ed00

08001a04 <__NVIC_GetPriorityGrouping>:
 8001a04:	b480      	push	{r7}
 8001a06:	af00      	add	r7, sp, #0
 8001a08:	4b04      	ldr	r3, [pc, #16]	@ (8001a1c <__NVIC_GetPriorityGrouping+0x18>)
 8001a0a:	68db      	ldr	r3, [r3, #12]
 8001a0c:	0a1b      	lsrs	r3, r3, #8
 8001a0e:	f003 0307 	and.w	r3, r3, #7
 8001a12:	4618      	mov	r0, r3
 8001a14:	46bd      	mov	sp, r7
 8001a16:	bc80      	pop	{r7}
 8001a18:	4770      	bx	lr
 8001a1a:	bf00      	nop
 8001a1c:	e000ed00 	.word	0xe000ed00

08001a20 <__NVIC_EnableIRQ>:
 8001a20:	b480      	push	{r7}
 8001a22:	b083      	sub	sp, #12
 8001a24:	af00      	add	r7, sp, #0
 8001a26:	4603      	mov	r3, r0
 8001a28:	71fb      	strb	r3, [r7, #7]
 8001a2a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001a2e:	2b00      	cmp	r3, #0
 8001a30:	db0b      	blt.n	8001a4a <__NVIC_EnableIRQ+0x2a>
 8001a32:	79fb      	ldrb	r3, [r7, #7]
 8001a34:	f003 021f 	and.w	r2, r3, #31
 8001a38:	4906      	ldr	r1, [pc, #24]	@ (8001a54 <__NVIC_EnableIRQ+0x34>)
 8001a3a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001a3e:	095b      	lsrs	r3, r3, #5
 8001a40:	2001      	movs	r0, #1
 8001a42:	fa00 f202 	lsl.w	r2, r0, r2
 8001a46:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001a4a:	bf00      	nop
 8001a4c:	370c      	adds	r7, #12
 8001a4e:	46bd      	mov	sp, r7
 8001a50:	bc80      	pop	{r7}
 8001a52:	4770      	bx	lr
 8001a54:	e000e100 	.word	0xe000e100

08001a58 <__NVIC_SetPriority>:
 8001a58:	b480      	push	{r7}
 8001a5a:	b083      	sub	sp, #12
 8001a5c:	af00      	add	r7, sp, #0
 8001a5e:	4603      	mov	r3, r0
 8001a60:	6039      	str	r1, [r7, #0]
 8001a62:	71fb      	strb	r3, [r7, #7]
 8001a64:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001a68:	2b00      	cmp	r3, #0
 8001a6a:	db0a      	blt.n	8001a82 <__NVIC_SetPriority+0x2a>
 8001a6c:	683b      	ldr	r3, [r7, #0]
 8001a6e:	b2da      	uxtb	r2, r3
 8001a70:	490c      	ldr	r1, [pc, #48]	@ (8001aa4 <__NVIC_SetPriority+0x4c>)
 8001a72:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001a76:	0112      	lsls	r2, r2, #4
 8001a78:	b2d2      	uxtb	r2, r2
 8001a7a:	440b      	add	r3, r1
 8001a7c:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8001a80:	e00a      	b.n	8001a98 <__NVIC_SetPriority+0x40>
 8001a82:	683b      	ldr	r3, [r7, #0]
 8001a84:	b2da      	uxtb	r2, r3
 8001a86:	4908      	ldr	r1, [pc, #32]	@ (8001aa8 <__NVIC_SetPriority+0x50>)
 8001a88:	79fb      	ldrb	r3, [r7, #7]
 8001a8a:	f003 030f 	and.w	r3, r3, #15
 8001a8e:	3b04      	subs	r3, #4
 8001a90:	0112      	lsls	r2, r2, #4
 8001a92:	b2d2      	uxtb	r2, r2
 8001a94:	440b      	add	r3, r1
 8001a96:	761a      	strb	r2, [r3, #24]
 8001a98:	bf00      	nop
 8001a9a:	370c      	adds	r7, #12
 8001a9c:	46bd      	mov	sp, r7
 8001a9e:	bc80      	pop	{r7}
 8001aa0:	4770      	bx	lr
 8001aa2:	bf00      	nop
 8001aa4:	e000e100 	.word	0xe000e100
 8001aa8:	e000ed00 	.word	0xe000ed00

08001aac <NVIC_EncodePriority>:
 8001aac:	b480      	push	{r7}
 8001aae:	b089      	sub	sp, #36	@ 0x24
 8001ab0:	af00      	add	r7, sp, #0
 8001ab2:	60f8      	str	r0, [r7, #12]
 8001ab4:	60b9      	str	r1, [r7, #8]
 8001ab6:	607a      	str	r2, [r7, #4]
 8001ab8:	68fb      	ldr	r3, [r7, #12]
 8001aba:	f003 0307 	and.w	r3, r3, #7
 8001abe:	61fb      	str	r3, [r7, #28]
 8001ac0:	69fb      	ldr	r3, [r7, #28]
 8001ac2:	f1c3 0307 	rsb	r3, r3, #7
 8001ac6:	2b04      	cmp	r3, #4
 8001ac8:	bf28      	it	cs
 8001aca:	2304      	movcs	r3, #4
 8001acc:	61bb      	str	r3, [r7, #24]
 8001ace:	69fb      	ldr	r3, [r7, #28]
 8001ad0:	3304      	adds	r3, #4
 8001ad2:	2b06      	cmp	r3, #6
 8001ad4:	d902      	bls.n	8001adc <NVIC_EncodePriority+0x30>
 8001ad6:	69fb      	ldr	r3, [r7, #28]
 8001ad8:	3b03      	subs	r3, #3
 8001ada:	e000      	b.n	8001ade <NVIC_EncodePriority+0x32>
 8001adc:	2300      	movs	r3, #0
 8001ade:	617b      	str	r3, [r7, #20]
 8001ae0:	f04f 32ff 	mov.w	r2, #4294967295
 8001ae4:	69bb      	ldr	r3, [r7, #24]
 8001ae6:	fa02 f303 	lsl.w	r3, r2, r3
 8001aea:	43da      	mvns	r2, r3
 8001aec:	68bb      	ldr	r3, [r7, #8]
 8001aee:	401a      	ands	r2, r3
 8001af0:	697b      	ldr	r3, [r7, #20]
 8001af2:	409a      	lsls	r2, r3
 8001af4:	f04f 31ff 	mov.w	r1, #4294967295
 8001af8:	697b      	ldr	r3, [r7, #20]
 8001afa:	fa01 f303 	lsl.w	r3, r1, r3
 8001afe:	43d9      	mvns	r1, r3
 8001b00:	687b      	ldr	r3, [r7, #4]
 8001b02:	400b      	ands	r3, r1
 8001b04:	4313      	orrs	r3, r2
 8001b06:	4618      	mov	r0, r3
 8001b08:	3724      	adds	r7, #36	@ 0x24
 8001b0a:	46bd      	mov	sp, r7
 8001b0c:	bc80      	pop	{r7}
 8001b0e:	4770      	bx	lr

08001b10 <SysTick_Config>:
 8001b10:	b580      	push	{r7, lr}
 8001b12:	b082      	sub	sp, #8
 8001b14:	af00      	add	r7, sp, #0
 8001b16:	6078      	str	r0, [r7, #4]
 8001b18:	687b      	ldr	r3, [r7, #4]
 8001b1a:	3b01      	subs	r3, #1
 8001b1c:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8001b20:	d301      	bcc.n	8001b26 <SysTick_Config+0x16>
 8001b22:	2301      	movs	r3, #1
 8001b24:	e00f      	b.n	8001b46 <SysTick_Config+0x36>
 8001b26:	4a0a      	ldr	r2, [pc, #40]	@ (8001b50 <SysTick_Config+0x40>)
 8001b28:	687b      	ldr	r3, [r7, #4]
 8001b2a:	3b01      	subs	r3, #1
 8001b2c:	6053      	str	r3, [r2, #4]
 8001b2e:	210f      	movs	r1, #15
 8001b30:	f04f 30ff 	mov.w	r0, #4294967295
 8001b34:	f7ff ff90 	bl	8001a58 <__NVIC_SetPriority>
 8001b38:	4b05      	ldr	r3, [pc, #20]	@ (8001b50 <SysTick_Config+0x40>)
 8001b3a:	2200      	movs	r2, #0
 8001b3c:	609a      	str	r2, [r3, #8]
 8001b3e:	4b04      	ldr	r3, [pc, #16]	@ (8001b50 <SysTick_Config+0x40>)
 8001b40:	2207      	movs	r2, #7
 8001b42:	601a      	str	r2, [r3, #0]
 8001b44:	2300      	movs	r3, #0
 8001b46:	4618      	mov	r0, r3
 8001b48:	3708      	adds	r7, #8
 8001b4a:	46bd      	mov	sp, r7
 8001b4c:	bd80      	pop	{r7, pc}
 8001b4e:	bf00      	nop
 8001b50:	e000e010 	.word	0xe000e010

08001b54 <HAL_NVIC_SetPriorityGrouping>:
 8001b54:	b580      	push	{r7, lr}
 8001b56:	b082      	sub	sp, #8
 8001b58:	af00      	add	r7, sp, #0
 8001b5a:	6078      	str	r0, [r7, #4]
 8001b5c:	6878      	ldr	r0, [r7, #4]
 8001b5e:	f7ff ff2d 	bl	80019bc <__NVIC_SetPriorityGrouping>
 8001b62:	bf00      	nop
 8001b64:	3708      	adds	r7, #8
 8001b66:	46bd      	mov	sp, r7
 8001b68:	bd80      	pop	{r7, pc}

08001b6a <HAL_NVIC_SetPriority>:
 8001b6a:	b580      	push	{r7, lr}
 8001b6c:	b086      	sub	sp, #24
 8001b6e:	af00      	add	r7, sp, #0
 8001b70:	4603      	mov	r3, r0
 8001b72:	60b9      	str	r1, [r7, #8]
 8001b74:	607a      	str	r2, [r7, #4]
 8001b76:	73fb      	strb	r3, [r7, #15]
 8001b78:	2300      	movs	r3, #0
 8001b7a:	617b      	str	r3, [r7, #20]
 8001b7c:	f7ff ff42 	bl	8001a04 <__NVIC_GetPriorityGrouping>
 8001b80:	6178      	str	r0, [r7, #20]
 8001b82:	687a      	ldr	r2, [r7, #4]
 8001b84:	68b9      	ldr	r1, [r7, #8]
 8001b86:	6978      	ldr	r0, [r7, #20]
 8001b88:	f7ff ff90 	bl	8001aac <NVIC_EncodePriority>
 8001b8c:	4602      	mov	r2, r0
 8001b8e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001b92:	4611      	mov	r1, r2
 8001b94:	4618      	mov	r0, r3
 8001b96:	f7ff ff5f 	bl	8001a58 <__NVIC_SetPriority>
 8001b9a:	bf00      	nop
 8001b9c:	3718      	adds	r7, #24
 8001b9e:	46bd      	mov	sp, r7
 8001ba0:	bd80      	pop	{r7, pc}

08001ba2 <HAL_NVIC_EnableIRQ>:
 8001ba2:	b580      	push	{r7, lr}
 8001ba4:	b082      	sub	sp, #8
 8001ba6:	af00      	add	r7, sp, #0
 8001ba8:	4603      	mov	r3, r0
 8001baa:	71fb      	strb	r3, [r7, #7]
 8001bac:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001bb0:	4618      	mov	r0, r3
 8001bb2:	f7ff ff35 	bl	8001a20 <__NVIC_EnableIRQ>
 8001bb6:	bf00      	nop
 8001bb8:	3708      	adds	r7, #8
 8001bba:	46bd      	mov	sp, r7
 8001bbc:	bd80      	pop	{r7, pc}

08001bbe <HAL_SYSTICK_Config>:
 8001bbe:	b580      	push	{r7, lr}
 8001bc0:	b082      	sub	sp, #8
 8001bc2:	af00      	add	r7, sp, #0
 8001bc4:	6078      	str	r0, [r7, #4]
 8001bc6:	6878      	ldr	r0, [r7, #4]
 8001bc8:	f7ff ffa2 	bl	8001b10 <SysTick_Config>
 8001bcc:	4603      	mov	r3, r0
 8001bce:	4618      	mov	r0, r3
 8001bd0:	3708      	adds	r7, #8
 8001bd2:	46bd      	mov	sp, r7
 8001bd4:	bd80      	pop	{r7, pc}

08001bd6 <HAL_DMA_Abort>:
 8001bd6:	b480      	push	{r7}
 8001bd8:	b085      	sub	sp, #20
 8001bda:	af00      	add	r7, sp, #0
 8001bdc:	6078      	str	r0, [r7, #4]
 8001bde:	2300      	movs	r3, #0
 8001be0:	73fb      	strb	r3, [r7, #15]
 8001be2:	687b      	ldr	r3, [r7, #4]
 8001be4:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 8001be8:	b2db      	uxtb	r3, r3
 8001bea:	2b02      	cmp	r3, #2
 8001bec:	d008      	beq.n	8001c00 <HAL_DMA_Abort+0x2a>
 8001bee:	687b      	ldr	r3, [r7, #4]
 8001bf0:	2204      	movs	r2, #4
 8001bf2:	639a      	str	r2, [r3, #56]	@ 0x38
 8001bf4:	687b      	ldr	r3, [r7, #4]
 8001bf6:	2200      	movs	r2, #0
 8001bf8:	f883 2020 	strb.w	r2, [r3, #32]
 8001bfc:	2301      	movs	r3, #1
 8001bfe:	e020      	b.n	8001c42 <HAL_DMA_Abort+0x6c>
 8001c00:	687b      	ldr	r3, [r7, #4]
 8001c02:	681b      	ldr	r3, [r3, #0]
 8001c04:	681a      	ldr	r2, [r3, #0]
 8001c06:	687b      	ldr	r3, [r7, #4]
 8001c08:	681b      	ldr	r3, [r3, #0]
 8001c0a:	f022 020e 	bic.w	r2, r2, #14
 8001c0e:	601a      	str	r2, [r3, #0]
 8001c10:	687b      	ldr	r3, [r7, #4]
 8001c12:	681b      	ldr	r3, [r3, #0]
 8001c14:	681a      	ldr	r2, [r3, #0]
 8001c16:	687b      	ldr	r3, [r7, #4]
 8001c18:	681b      	ldr	r3, [r3, #0]
 8001c1a:	f022 0201 	bic.w	r2, r2, #1
 8001c1e:	601a      	str	r2, [r3, #0]
 8001c20:	687b      	ldr	r3, [r7, #4]
 8001c22:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001c24:	687b      	ldr	r3, [r7, #4]
 8001c26:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8001c28:	2101      	movs	r1, #1
 8001c2a:	fa01 f202 	lsl.w	r2, r1, r2
 8001c2e:	605a      	str	r2, [r3, #4]
 8001c30:	687b      	ldr	r3, [r7, #4]
 8001c32:	2201      	movs	r2, #1
 8001c34:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8001c38:	687b      	ldr	r3, [r7, #4]
 8001c3a:	2200      	movs	r2, #0
 8001c3c:	f883 2020 	strb.w	r2, [r3, #32]
 8001c40:	7bfb      	ldrb	r3, [r7, #15]
 8001c42:	4618      	mov	r0, r3
 8001c44:	3714      	adds	r7, #20
 8001c46:	46bd      	mov	sp, r7
 8001c48:	bc80      	pop	{r7}
 8001c4a:	4770      	bx	lr

08001c4c <HAL_DMA_Abort_IT>:
 8001c4c:	b580      	push	{r7, lr}
 8001c4e:	b084      	sub	sp, #16
 8001c50:	af00      	add	r7, sp, #0
 8001c52:	6078      	str	r0, [r7, #4]
 8001c54:	2300      	movs	r3, #0
 8001c56:	73fb      	strb	r3, [r7, #15]
 8001c58:	687b      	ldr	r3, [r7, #4]
 8001c5a:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 8001c5e:	b2db      	uxtb	r3, r3
 8001c60:	2b02      	cmp	r3, #2
 8001c62:	d005      	beq.n	8001c70 <HAL_DMA_Abort_IT+0x24>
 8001c64:	687b      	ldr	r3, [r7, #4]
 8001c66:	2204      	movs	r2, #4
 8001c68:	639a      	str	r2, [r3, #56]	@ 0x38
 8001c6a:	2301      	movs	r3, #1
 8001c6c:	73fb      	strb	r3, [r7, #15]
 8001c6e:	e051      	b.n	8001d14 <HAL_DMA_Abort_IT+0xc8>
 8001c70:	687b      	ldr	r3, [r7, #4]
 8001c72:	681b      	ldr	r3, [r3, #0]
 8001c74:	681a      	ldr	r2, [r3, #0]
 8001c76:	687b      	ldr	r3, [r7, #4]
 8001c78:	681b      	ldr	r3, [r3, #0]
 8001c7a:	f022 020e 	bic.w	r2, r2, #14
 8001c7e:	601a      	str	r2, [r3, #0]
 8001c80:	687b      	ldr	r3, [r7, #4]
 8001c82:	681b      	ldr	r3, [r3, #0]
 8001c84:	681a      	ldr	r2, [r3, #0]
 8001c86:	687b      	ldr	r3, [r7, #4]
 8001c88:	681b      	ldr	r3, [r3, #0]
 8001c8a:	f022 0201 	bic.w	r2, r2, #1
 8001c8e:	601a      	str	r2, [r3, #0]
 8001c90:	687b      	ldr	r3, [r7, #4]
 8001c92:	681b      	ldr	r3, [r3, #0]
 8001c94:	4a22      	ldr	r2, [pc, #136]	@ (8001d20 <HAL_DMA_Abort_IT+0xd4>)
 8001c96:	4293      	cmp	r3, r2
 8001c98:	d029      	beq.n	8001cee <HAL_DMA_Abort_IT+0xa2>
 8001c9a:	687b      	ldr	r3, [r7, #4]
 8001c9c:	681b      	ldr	r3, [r3, #0]
 8001c9e:	4a21      	ldr	r2, [pc, #132]	@ (8001d24 <HAL_DMA_Abort_IT+0xd8>)
 8001ca0:	4293      	cmp	r3, r2
 8001ca2:	d022      	beq.n	8001cea <HAL_DMA_Abort_IT+0x9e>
 8001ca4:	687b      	ldr	r3, [r7, #4]
 8001ca6:	681b      	ldr	r3, [r3, #0]
 8001ca8:	4a1f      	ldr	r2, [pc, #124]	@ (8001d28 <HAL_DMA_Abort_IT+0xdc>)
 8001caa:	4293      	cmp	r3, r2
 8001cac:	d01a      	beq.n	8001ce4 <HAL_DMA_Abort_IT+0x98>
 8001cae:	687b      	ldr	r3, [r7, #4]
 8001cb0:	681b      	ldr	r3, [r3, #0]
 8001cb2:	4a1e      	ldr	r2, [pc, #120]	@ (8001d2c <HAL_DMA_Abort_IT+0xe0>)
 8001cb4:	4293      	cmp	r3, r2
 8001cb6:	d012      	beq.n	8001cde <HAL_DMA_Abort_IT+0x92>
 8001cb8:	687b      	ldr	r3, [r7, #4]
 8001cba:	681b      	ldr	r3, [r3, #0]
 8001cbc:	4a1c      	ldr	r2, [pc, #112]	@ (8001d30 <HAL_DMA_Abort_IT+0xe4>)
 8001cbe:	4293      	cmp	r3, r2
 8001cc0:	d00a      	beq.n	8001cd8 <HAL_DMA_Abort_IT+0x8c>
 8001cc2:	687b      	ldr	r3, [r7, #4]
 8001cc4:	681b      	ldr	r3, [r3, #0]
 8001cc6:	4a1b      	ldr	r2, [pc, #108]	@ (8001d34 <HAL_DMA_Abort_IT+0xe8>)
 8001cc8:	4293      	cmp	r3, r2
 8001cca:	d102      	bne.n	8001cd2 <HAL_DMA_Abort_IT+0x86>
 8001ccc:	f44f 1380 	mov.w	r3, #1048576	@ 0x100000
 8001cd0:	e00e      	b.n	8001cf0 <HAL_DMA_Abort_IT+0xa4>
 8001cd2:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8001cd6:	e00b      	b.n	8001cf0 <HAL_DMA_Abort_IT+0xa4>
 8001cd8:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8001cdc:	e008      	b.n	8001cf0 <HAL_DMA_Abort_IT+0xa4>
 8001cde:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001ce2:	e005      	b.n	8001cf0 <HAL_DMA_Abort_IT+0xa4>
 8001ce4:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8001ce8:	e002      	b.n	8001cf0 <HAL_DMA_Abort_IT+0xa4>
 8001cea:	2310      	movs	r3, #16
 8001cec:	e000      	b.n	8001cf0 <HAL_DMA_Abort_IT+0xa4>
 8001cee:	2301      	movs	r3, #1
 8001cf0:	4a11      	ldr	r2, [pc, #68]	@ (8001d38 <HAL_DMA_Abort_IT+0xec>)
 8001cf2:	6053      	str	r3, [r2, #4]
 8001cf4:	687b      	ldr	r3, [r7, #4]
 8001cf6:	2201      	movs	r2, #1
 8001cf8:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
 8001cfc:	687b      	ldr	r3, [r7, #4]
 8001cfe:	2200      	movs	r2, #0
 8001d00:	f883 2020 	strb.w	r2, [r3, #32]
 8001d04:	687b      	ldr	r3, [r7, #4]
 8001d06:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8001d08:	2b00      	cmp	r3, #0
 8001d0a:	d003      	beq.n	8001d14 <HAL_DMA_Abort_IT+0xc8>
 8001d0c:	687b      	ldr	r3, [r7, #4]
 8001d0e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8001d10:	6878      	ldr	r0, [r7, #4]
 8001d12:	4798      	blx	r3
 8001d14:	7bfb      	ldrb	r3, [r7, #15]
 8001d16:	4618      	mov	r0, r3
 8001d18:	3710      	adds	r7, #16
 8001d1a:	46bd      	mov	sp, r7
 8001d1c:	bd80      	pop	{r7, pc}
 8001d1e:	bf00      	nop
 8001d20:	40020008 	.word	0x40020008
 8001d24:	4002001c 	.word	0x4002001c
 8001d28:	40020030 	.word	0x40020030
 8001d2c:	40020044 	.word	0x40020044
 8001d30:	40020058 	.word	0x40020058
 8001d34:	4002006c 	.word	0x4002006c
 8001d38:	40020000 	.word	0x40020000

08001d3c <HAL_GPIO_Init>:
 8001d3c:	b480      	push	{r7}
 8001d3e:	b08b      	sub	sp, #44	@ 0x2c
 8001d40:	af00      	add	r7, sp, #0
 8001d42:	6078      	str	r0, [r7, #4]
 8001d44:	6039      	str	r1, [r7, #0]
 8001d46:	2300      	movs	r3, #0
 8001d48:	627b      	str	r3, [r7, #36]	@ 0x24
 8001d4a:	2300      	movs	r3, #0
 8001d4c:	623b      	str	r3, [r7, #32]
 8001d4e:	e169      	b.n	8002024 <HAL_GPIO_Init+0x2e8>
 8001d50:	2201      	movs	r2, #1
 8001d52:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001d54:	fa02 f303 	lsl.w	r3, r2, r3
 8001d58:	61fb      	str	r3, [r7, #28]
 8001d5a:	683b      	ldr	r3, [r7, #0]
 8001d5c:	681b      	ldr	r3, [r3, #0]
 8001d5e:	69fa      	ldr	r2, [r7, #28]
 8001d60:	4013      	ands	r3, r2
 8001d62:	61bb      	str	r3, [r7, #24]
 8001d64:	69ba      	ldr	r2, [r7, #24]
 8001d66:	69fb      	ldr	r3, [r7, #28]
 8001d68:	429a      	cmp	r2, r3
 8001d6a:	f040 8158 	bne.w	800201e <HAL_GPIO_Init+0x2e2>
 8001d6e:	683b      	ldr	r3, [r7, #0]
 8001d70:	685b      	ldr	r3, [r3, #4]
 8001d72:	4a9a      	ldr	r2, [pc, #616]	@ (8001fdc <HAL_GPIO_Init+0x2a0>)
 8001d74:	4293      	cmp	r3, r2
 8001d76:	d05e      	beq.n	8001e36 <HAL_GPIO_Init+0xfa>
 8001d78:	4a98      	ldr	r2, [pc, #608]	@ (8001fdc <HAL_GPIO_Init+0x2a0>)
 8001d7a:	4293      	cmp	r3, r2
 8001d7c:	d875      	bhi.n	8001e6a <HAL_GPIO_Init+0x12e>
 8001d7e:	4a98      	ldr	r2, [pc, #608]	@ (8001fe0 <HAL_GPIO_Init+0x2a4>)
 8001d80:	4293      	cmp	r3, r2
 8001d82:	d058      	beq.n	8001e36 <HAL_GPIO_Init+0xfa>
 8001d84:	4a96      	ldr	r2, [pc, #600]	@ (8001fe0 <HAL_GPIO_Init+0x2a4>)
 8001d86:	4293      	cmp	r3, r2
 8001d88:	d86f      	bhi.n	8001e6a <HAL_GPIO_Init+0x12e>
 8001d8a:	4a96      	ldr	r2, [pc, #600]	@ (8001fe4 <HAL_GPIO_Init+0x2a8>)
 8001d8c:	4293      	cmp	r3, r2
 8001d8e:	d052      	beq.n	8001e36 <HAL_GPIO_Init+0xfa>
 8001d90:	4a94      	ldr	r2, [pc, #592]	@ (8001fe4 <HAL_GPIO_Init+0x2a8>)
 8001d92:	4293      	cmp	r3, r2
 8001d94:	d869      	bhi.n	8001e6a <HAL_GPIO_Init+0x12e>
 8001d96:	4a94      	ldr	r2, [pc, #592]	@ (8001fe8 <HAL_GPIO_Init+0x2ac>)
 8001d98:	4293      	cmp	r3, r2
 8001d9a:	d04c      	beq.n	8001e36 <HAL_GPIO_Init+0xfa>
 8001d9c:	4a92      	ldr	r2, [pc, #584]	@ (8001fe8 <HAL_GPIO_Init+0x2ac>)
 8001d9e:	4293      	cmp	r3, r2
 8001da0:	d863      	bhi.n	8001e6a <HAL_GPIO_Init+0x12e>
 8001da2:	4a92      	ldr	r2, [pc, #584]	@ (8001fec <HAL_GPIO_Init+0x2b0>)
 8001da4:	4293      	cmp	r3, r2
 8001da6:	d046      	beq.n	8001e36 <HAL_GPIO_Init+0xfa>
 8001da8:	4a90      	ldr	r2, [pc, #576]	@ (8001fec <HAL_GPIO_Init+0x2b0>)
 8001daa:	4293      	cmp	r3, r2
 8001dac:	d85d      	bhi.n	8001e6a <HAL_GPIO_Init+0x12e>
 8001dae:	2b12      	cmp	r3, #18
 8001db0:	d82a      	bhi.n	8001e08 <HAL_GPIO_Init+0xcc>
 8001db2:	2b12      	cmp	r3, #18
 8001db4:	d859      	bhi.n	8001e6a <HAL_GPIO_Init+0x12e>
 8001db6:	a201      	add	r2, pc, #4	@ (adr r2, 8001dbc <HAL_GPIO_Init+0x80>)
 8001db8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001dbc:	08001e37 	.word	0x08001e37
 8001dc0:	08001e11 	.word	0x08001e11
 8001dc4:	08001e23 	.word	0x08001e23
 8001dc8:	08001e65 	.word	0x08001e65
 8001dcc:	08001e6b 	.word	0x08001e6b
 8001dd0:	08001e6b 	.word	0x08001e6b
 8001dd4:	08001e6b 	.word	0x08001e6b
 8001dd8:	08001e6b 	.word	0x08001e6b
 8001ddc:	08001e6b 	.word	0x08001e6b
 8001de0:	08001e6b 	.word	0x08001e6b
 8001de4:	08001e6b 	.word	0x08001e6b
 8001de8:	08001e6b 	.word	0x08001e6b
 8001dec:	08001e6b 	.word	0x08001e6b
 8001df0:	08001e6b 	.word	0x08001e6b
 8001df4:	08001e6b 	.word	0x08001e6b
 8001df8:	08001e6b 	.word	0x08001e6b
 8001dfc:	08001e6b 	.word	0x08001e6b
 8001e00:	08001e19 	.word	0x08001e19
 8001e04:	08001e2d 	.word	0x08001e2d
 8001e08:	4a79      	ldr	r2, [pc, #484]	@ (8001ff0 <HAL_GPIO_Init+0x2b4>)
 8001e0a:	4293      	cmp	r3, r2
 8001e0c:	d013      	beq.n	8001e36 <HAL_GPIO_Init+0xfa>
 8001e0e:	e02c      	b.n	8001e6a <HAL_GPIO_Init+0x12e>
 8001e10:	683b      	ldr	r3, [r7, #0]
 8001e12:	68db      	ldr	r3, [r3, #12]
 8001e14:	623b      	str	r3, [r7, #32]
 8001e16:	e029      	b.n	8001e6c <HAL_GPIO_Init+0x130>
 8001e18:	683b      	ldr	r3, [r7, #0]
 8001e1a:	68db      	ldr	r3, [r3, #12]
 8001e1c:	3304      	adds	r3, #4
 8001e1e:	623b      	str	r3, [r7, #32]
 8001e20:	e024      	b.n	8001e6c <HAL_GPIO_Init+0x130>
 8001e22:	683b      	ldr	r3, [r7, #0]
 8001e24:	68db      	ldr	r3, [r3, #12]
 8001e26:	3308      	adds	r3, #8
 8001e28:	623b      	str	r3, [r7, #32]
 8001e2a:	e01f      	b.n	8001e6c <HAL_GPIO_Init+0x130>
 8001e2c:	683b      	ldr	r3, [r7, #0]
 8001e2e:	68db      	ldr	r3, [r3, #12]
 8001e30:	330c      	adds	r3, #12
 8001e32:	623b      	str	r3, [r7, #32]
 8001e34:	e01a      	b.n	8001e6c <HAL_GPIO_Init+0x130>
 8001e36:	683b      	ldr	r3, [r7, #0]
 8001e38:	689b      	ldr	r3, [r3, #8]
 8001e3a:	2b00      	cmp	r3, #0
 8001e3c:	d102      	bne.n	8001e44 <HAL_GPIO_Init+0x108>
 8001e3e:	2304      	movs	r3, #4
 8001e40:	623b      	str	r3, [r7, #32]
 8001e42:	e013      	b.n	8001e6c <HAL_GPIO_Init+0x130>
 8001e44:	683b      	ldr	r3, [r7, #0]
 8001e46:	689b      	ldr	r3, [r3, #8]
 8001e48:	2b01      	cmp	r3, #1
 8001e4a:	d105      	bne.n	8001e58 <HAL_GPIO_Init+0x11c>
 8001e4c:	2308      	movs	r3, #8
 8001e4e:	623b      	str	r3, [r7, #32]
 8001e50:	687b      	ldr	r3, [r7, #4]
 8001e52:	69fa      	ldr	r2, [r7, #28]
 8001e54:	611a      	str	r2, [r3, #16]
 8001e56:	e009      	b.n	8001e6c <HAL_GPIO_Init+0x130>
 8001e58:	2308      	movs	r3, #8
 8001e5a:	623b      	str	r3, [r7, #32]
 8001e5c:	687b      	ldr	r3, [r7, #4]
 8001e5e:	69fa      	ldr	r2, [r7, #28]
 8001e60:	615a      	str	r2, [r3, #20]
 8001e62:	e003      	b.n	8001e6c <HAL_GPIO_Init+0x130>
 8001e64:	2300      	movs	r3, #0
 8001e66:	623b      	str	r3, [r7, #32]
 8001e68:	e000      	b.n	8001e6c <HAL_GPIO_Init+0x130>
 8001e6a:	bf00      	nop
 8001e6c:	69bb      	ldr	r3, [r7, #24]
 8001e6e:	2bff      	cmp	r3, #255	@ 0xff
 8001e70:	d801      	bhi.n	8001e76 <HAL_GPIO_Init+0x13a>
 8001e72:	687b      	ldr	r3, [r7, #4]
 8001e74:	e001      	b.n	8001e7a <HAL_GPIO_Init+0x13e>
 8001e76:	687b      	ldr	r3, [r7, #4]
 8001e78:	3304      	adds	r3, #4
 8001e7a:	617b      	str	r3, [r7, #20]
 8001e7c:	69bb      	ldr	r3, [r7, #24]
 8001e7e:	2bff      	cmp	r3, #255	@ 0xff
 8001e80:	d802      	bhi.n	8001e88 <HAL_GPIO_Init+0x14c>
 8001e82:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001e84:	009b      	lsls	r3, r3, #2
 8001e86:	e002      	b.n	8001e8e <HAL_GPIO_Init+0x152>
 8001e88:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001e8a:	3b08      	subs	r3, #8
 8001e8c:	009b      	lsls	r3, r3, #2
 8001e8e:	613b      	str	r3, [r7, #16]
 8001e90:	697b      	ldr	r3, [r7, #20]
 8001e92:	681a      	ldr	r2, [r3, #0]
 8001e94:	210f      	movs	r1, #15
 8001e96:	693b      	ldr	r3, [r7, #16]
 8001e98:	fa01 f303 	lsl.w	r3, r1, r3
 8001e9c:	43db      	mvns	r3, r3
 8001e9e:	401a      	ands	r2, r3
 8001ea0:	6a39      	ldr	r1, [r7, #32]
 8001ea2:	693b      	ldr	r3, [r7, #16]
 8001ea4:	fa01 f303 	lsl.w	r3, r1, r3
 8001ea8:	431a      	orrs	r2, r3
 8001eaa:	697b      	ldr	r3, [r7, #20]
 8001eac:	601a      	str	r2, [r3, #0]
 8001eae:	683b      	ldr	r3, [r7, #0]
 8001eb0:	685b      	ldr	r3, [r3, #4]
 8001eb2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001eb6:	2b00      	cmp	r3, #0
 8001eb8:	f000 80b1 	beq.w	800201e <HAL_GPIO_Init+0x2e2>
 8001ebc:	4b4d      	ldr	r3, [pc, #308]	@ (8001ff4 <HAL_GPIO_Init+0x2b8>)
 8001ebe:	699b      	ldr	r3, [r3, #24]
 8001ec0:	4a4c      	ldr	r2, [pc, #304]	@ (8001ff4 <HAL_GPIO_Init+0x2b8>)
 8001ec2:	f043 0301 	orr.w	r3, r3, #1
 8001ec6:	6193      	str	r3, [r2, #24]
 8001ec8:	4b4a      	ldr	r3, [pc, #296]	@ (8001ff4 <HAL_GPIO_Init+0x2b8>)
 8001eca:	699b      	ldr	r3, [r3, #24]
 8001ecc:	f003 0301 	and.w	r3, r3, #1
 8001ed0:	60bb      	str	r3, [r7, #8]
 8001ed2:	68bb      	ldr	r3, [r7, #8]
 8001ed4:	4a48      	ldr	r2, [pc, #288]	@ (8001ff8 <HAL_GPIO_Init+0x2bc>)
 8001ed6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001ed8:	089b      	lsrs	r3, r3, #2
 8001eda:	3302      	adds	r3, #2
 8001edc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001ee0:	60fb      	str	r3, [r7, #12]
 8001ee2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001ee4:	f003 0303 	and.w	r3, r3, #3
 8001ee8:	009b      	lsls	r3, r3, #2
 8001eea:	220f      	movs	r2, #15
 8001eec:	fa02 f303 	lsl.w	r3, r2, r3
 8001ef0:	43db      	mvns	r3, r3
 8001ef2:	68fa      	ldr	r2, [r7, #12]
 8001ef4:	4013      	ands	r3, r2
 8001ef6:	60fb      	str	r3, [r7, #12]
 8001ef8:	687b      	ldr	r3, [r7, #4]
 8001efa:	4a40      	ldr	r2, [pc, #256]	@ (8001ffc <HAL_GPIO_Init+0x2c0>)
 8001efc:	4293      	cmp	r3, r2
 8001efe:	d013      	beq.n	8001f28 <HAL_GPIO_Init+0x1ec>
 8001f00:	687b      	ldr	r3, [r7, #4]
 8001f02:	4a3f      	ldr	r2, [pc, #252]	@ (8002000 <HAL_GPIO_Init+0x2c4>)
 8001f04:	4293      	cmp	r3, r2
 8001f06:	d00d      	beq.n	8001f24 <HAL_GPIO_Init+0x1e8>
 8001f08:	687b      	ldr	r3, [r7, #4]
 8001f0a:	4a3e      	ldr	r2, [pc, #248]	@ (8002004 <HAL_GPIO_Init+0x2c8>)
 8001f0c:	4293      	cmp	r3, r2
 8001f0e:	d007      	beq.n	8001f20 <HAL_GPIO_Init+0x1e4>
 8001f10:	687b      	ldr	r3, [r7, #4]
 8001f12:	4a3d      	ldr	r2, [pc, #244]	@ (8002008 <HAL_GPIO_Init+0x2cc>)
 8001f14:	4293      	cmp	r3, r2
 8001f16:	d101      	bne.n	8001f1c <HAL_GPIO_Init+0x1e0>
 8001f18:	2303      	movs	r3, #3
 8001f1a:	e006      	b.n	8001f2a <HAL_GPIO_Init+0x1ee>
 8001f1c:	2304      	movs	r3, #4
 8001f1e:	e004      	b.n	8001f2a <HAL_GPIO_Init+0x1ee>
 8001f20:	2302      	movs	r3, #2
 8001f22:	e002      	b.n	8001f2a <HAL_GPIO_Init+0x1ee>
 8001f24:	2301      	movs	r3, #1
 8001f26:	e000      	b.n	8001f2a <HAL_GPIO_Init+0x1ee>
 8001f28:	2300      	movs	r3, #0
 8001f2a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001f2c:	f002 0203 	and.w	r2, r2, #3
 8001f30:	0092      	lsls	r2, r2, #2
 8001f32:	4093      	lsls	r3, r2
 8001f34:	68fa      	ldr	r2, [r7, #12]
 8001f36:	4313      	orrs	r3, r2
 8001f38:	60fb      	str	r3, [r7, #12]
 8001f3a:	492f      	ldr	r1, [pc, #188]	@ (8001ff8 <HAL_GPIO_Init+0x2bc>)
 8001f3c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001f3e:	089b      	lsrs	r3, r3, #2
 8001f40:	3302      	adds	r3, #2
 8001f42:	68fa      	ldr	r2, [r7, #12]
 8001f44:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001f48:	683b      	ldr	r3, [r7, #0]
 8001f4a:	685b      	ldr	r3, [r3, #4]
 8001f4c:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8001f50:	2b00      	cmp	r3, #0
 8001f52:	d006      	beq.n	8001f62 <HAL_GPIO_Init+0x226>
 8001f54:	4b2d      	ldr	r3, [pc, #180]	@ (800200c <HAL_GPIO_Init+0x2d0>)
 8001f56:	689a      	ldr	r2, [r3, #8]
 8001f58:	492c      	ldr	r1, [pc, #176]	@ (800200c <HAL_GPIO_Init+0x2d0>)
 8001f5a:	69bb      	ldr	r3, [r7, #24]
 8001f5c:	4313      	orrs	r3, r2
 8001f5e:	608b      	str	r3, [r1, #8]
 8001f60:	e006      	b.n	8001f70 <HAL_GPIO_Init+0x234>
 8001f62:	4b2a      	ldr	r3, [pc, #168]	@ (800200c <HAL_GPIO_Init+0x2d0>)
 8001f64:	689a      	ldr	r2, [r3, #8]
 8001f66:	69bb      	ldr	r3, [r7, #24]
 8001f68:	43db      	mvns	r3, r3
 8001f6a:	4928      	ldr	r1, [pc, #160]	@ (800200c <HAL_GPIO_Init+0x2d0>)
 8001f6c:	4013      	ands	r3, r2
 8001f6e:	608b      	str	r3, [r1, #8]
 8001f70:	683b      	ldr	r3, [r7, #0]
 8001f72:	685b      	ldr	r3, [r3, #4]
 8001f74:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001f78:	2b00      	cmp	r3, #0
 8001f7a:	d006      	beq.n	8001f8a <HAL_GPIO_Init+0x24e>
 8001f7c:	4b23      	ldr	r3, [pc, #140]	@ (800200c <HAL_GPIO_Init+0x2d0>)
 8001f7e:	68da      	ldr	r2, [r3, #12]
 8001f80:	4922      	ldr	r1, [pc, #136]	@ (800200c <HAL_GPIO_Init+0x2d0>)
 8001f82:	69bb      	ldr	r3, [r7, #24]
 8001f84:	4313      	orrs	r3, r2
 8001f86:	60cb      	str	r3, [r1, #12]
 8001f88:	e006      	b.n	8001f98 <HAL_GPIO_Init+0x25c>
 8001f8a:	4b20      	ldr	r3, [pc, #128]	@ (800200c <HAL_GPIO_Init+0x2d0>)
 8001f8c:	68da      	ldr	r2, [r3, #12]
 8001f8e:	69bb      	ldr	r3, [r7, #24]
 8001f90:	43db      	mvns	r3, r3
 8001f92:	491e      	ldr	r1, [pc, #120]	@ (800200c <HAL_GPIO_Init+0x2d0>)
 8001f94:	4013      	ands	r3, r2
 8001f96:	60cb      	str	r3, [r1, #12]
 8001f98:	683b      	ldr	r3, [r7, #0]
 8001f9a:	685b      	ldr	r3, [r3, #4]
 8001f9c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001fa0:	2b00      	cmp	r3, #0
 8001fa2:	d006      	beq.n	8001fb2 <HAL_GPIO_Init+0x276>
 8001fa4:	4b19      	ldr	r3, [pc, #100]	@ (800200c <HAL_GPIO_Init+0x2d0>)
 8001fa6:	685a      	ldr	r2, [r3, #4]
 8001fa8:	4918      	ldr	r1, [pc, #96]	@ (800200c <HAL_GPIO_Init+0x2d0>)
 8001faa:	69bb      	ldr	r3, [r7, #24]
 8001fac:	4313      	orrs	r3, r2
 8001fae:	604b      	str	r3, [r1, #4]
 8001fb0:	e006      	b.n	8001fc0 <HAL_GPIO_Init+0x284>
 8001fb2:	4b16      	ldr	r3, [pc, #88]	@ (800200c <HAL_GPIO_Init+0x2d0>)
 8001fb4:	685a      	ldr	r2, [r3, #4]
 8001fb6:	69bb      	ldr	r3, [r7, #24]
 8001fb8:	43db      	mvns	r3, r3
 8001fba:	4914      	ldr	r1, [pc, #80]	@ (800200c <HAL_GPIO_Init+0x2d0>)
 8001fbc:	4013      	ands	r3, r2
 8001fbe:	604b      	str	r3, [r1, #4]
 8001fc0:	683b      	ldr	r3, [r7, #0]
 8001fc2:	685b      	ldr	r3, [r3, #4]
 8001fc4:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001fc8:	2b00      	cmp	r3, #0
 8001fca:	d021      	beq.n	8002010 <HAL_GPIO_Init+0x2d4>
 8001fcc:	4b0f      	ldr	r3, [pc, #60]	@ (800200c <HAL_GPIO_Init+0x2d0>)
 8001fce:	681a      	ldr	r2, [r3, #0]
 8001fd0:	490e      	ldr	r1, [pc, #56]	@ (800200c <HAL_GPIO_Init+0x2d0>)
 8001fd2:	69bb      	ldr	r3, [r7, #24]
 8001fd4:	4313      	orrs	r3, r2
 8001fd6:	600b      	str	r3, [r1, #0]
 8001fd8:	e021      	b.n	800201e <HAL_GPIO_Init+0x2e2>
 8001fda:	bf00      	nop
 8001fdc:	10320000 	.word	0x10320000
 8001fe0:	10310000 	.word	0x10310000
 8001fe4:	10220000 	.word	0x10220000
 8001fe8:	10210000 	.word	0x10210000
 8001fec:	10120000 	.word	0x10120000
 8001ff0:	10110000 	.word	0x10110000
 8001ff4:	40021000 	.word	0x40021000
 8001ff8:	40010000 	.word	0x40010000
 8001ffc:	40010800 	.word	0x40010800
 8002000:	40010c00 	.word	0x40010c00
 8002004:	40011000 	.word	0x40011000
 8002008:	40011400 	.word	0x40011400
 800200c:	40010400 	.word	0x40010400
 8002010:	4b0b      	ldr	r3, [pc, #44]	@ (8002040 <HAL_GPIO_Init+0x304>)
 8002012:	681a      	ldr	r2, [r3, #0]
 8002014:	69bb      	ldr	r3, [r7, #24]
 8002016:	43db      	mvns	r3, r3
 8002018:	4909      	ldr	r1, [pc, #36]	@ (8002040 <HAL_GPIO_Init+0x304>)
 800201a:	4013      	ands	r3, r2
 800201c:	600b      	str	r3, [r1, #0]
 800201e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002020:	3301      	adds	r3, #1
 8002022:	627b      	str	r3, [r7, #36]	@ 0x24
 8002024:	683b      	ldr	r3, [r7, #0]
 8002026:	681a      	ldr	r2, [r3, #0]
 8002028:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800202a:	fa22 f303 	lsr.w	r3, r2, r3
 800202e:	2b00      	cmp	r3, #0
 8002030:	f47f ae8e 	bne.w	8001d50 <HAL_GPIO_Init+0x14>
 8002034:	bf00      	nop
 8002036:	bf00      	nop
 8002038:	372c      	adds	r7, #44	@ 0x2c
 800203a:	46bd      	mov	sp, r7
 800203c:	bc80      	pop	{r7}
 800203e:	4770      	bx	lr
 8002040:	40010400 	.word	0x40010400

08002044 <HAL_GPIO_WritePin>:
 8002044:	b480      	push	{r7}
 8002046:	b083      	sub	sp, #12
 8002048:	af00      	add	r7, sp, #0
 800204a:	6078      	str	r0, [r7, #4]
 800204c:	460b      	mov	r3, r1
 800204e:	807b      	strh	r3, [r7, #2]
 8002050:	4613      	mov	r3, r2
 8002052:	707b      	strb	r3, [r7, #1]
 8002054:	787b      	ldrb	r3, [r7, #1]
 8002056:	2b00      	cmp	r3, #0
 8002058:	d003      	beq.n	8002062 <HAL_GPIO_WritePin+0x1e>
 800205a:	887a      	ldrh	r2, [r7, #2]
 800205c:	687b      	ldr	r3, [r7, #4]
 800205e:	611a      	str	r2, [r3, #16]
 8002060:	e003      	b.n	800206a <HAL_GPIO_WritePin+0x26>
 8002062:	887b      	ldrh	r3, [r7, #2]
 8002064:	041a      	lsls	r2, r3, #16
 8002066:	687b      	ldr	r3, [r7, #4]
 8002068:	611a      	str	r2, [r3, #16]
 800206a:	bf00      	nop
 800206c:	370c      	adds	r7, #12
 800206e:	46bd      	mov	sp, r7
 8002070:	bc80      	pop	{r7}
 8002072:	4770      	bx	lr

08002074 <HAL_GPIO_EXTI_IRQHandler>:
 8002074:	b580      	push	{r7, lr}
 8002076:	b082      	sub	sp, #8
 8002078:	af00      	add	r7, sp, #0
 800207a:	4603      	mov	r3, r0
 800207c:	80fb      	strh	r3, [r7, #6]
 800207e:	4b08      	ldr	r3, [pc, #32]	@ (80020a0 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8002080:	695a      	ldr	r2, [r3, #20]
 8002082:	88fb      	ldrh	r3, [r7, #6]
 8002084:	4013      	ands	r3, r2
 8002086:	2b00      	cmp	r3, #0
 8002088:	d006      	beq.n	8002098 <HAL_GPIO_EXTI_IRQHandler+0x24>
 800208a:	4a05      	ldr	r2, [pc, #20]	@ (80020a0 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800208c:	88fb      	ldrh	r3, [r7, #6]
 800208e:	6153      	str	r3, [r2, #20]
 8002090:	88fb      	ldrh	r3, [r7, #6]
 8002092:	4618      	mov	r0, r3
 8002094:	f000 f806 	bl	80020a4 <HAL_GPIO_EXTI_Callback>
 8002098:	bf00      	nop
 800209a:	3708      	adds	r7, #8
 800209c:	46bd      	mov	sp, r7
 800209e:	bd80      	pop	{r7, pc}
 80020a0:	40010400 	.word	0x40010400

080020a4 <HAL_GPIO_EXTI_Callback>:
 80020a4:	b480      	push	{r7}
 80020a6:	b083      	sub	sp, #12
 80020a8:	af00      	add	r7, sp, #0
 80020aa:	4603      	mov	r3, r0
 80020ac:	80fb      	strh	r3, [r7, #6]
 80020ae:	bf00      	nop
 80020b0:	370c      	adds	r7, #12
 80020b2:	46bd      	mov	sp, r7
 80020b4:	bc80      	pop	{r7}
 80020b6:	4770      	bx	lr

080020b8 <HAL_RCC_OscConfig>:
 80020b8:	b580      	push	{r7, lr}
 80020ba:	b086      	sub	sp, #24
 80020bc:	af00      	add	r7, sp, #0
 80020be:	6078      	str	r0, [r7, #4]
 80020c0:	687b      	ldr	r3, [r7, #4]
 80020c2:	2b00      	cmp	r3, #0
 80020c4:	d101      	bne.n	80020ca <HAL_RCC_OscConfig+0x12>
 80020c6:	2301      	movs	r3, #1
 80020c8:	e272      	b.n	80025b0 <HAL_RCC_OscConfig+0x4f8>
 80020ca:	687b      	ldr	r3, [r7, #4]
 80020cc:	681b      	ldr	r3, [r3, #0]
 80020ce:	f003 0301 	and.w	r3, r3, #1
 80020d2:	2b00      	cmp	r3, #0
 80020d4:	f000 8087 	beq.w	80021e6 <HAL_RCC_OscConfig+0x12e>
 80020d8:	4b92      	ldr	r3, [pc, #584]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 80020da:	685b      	ldr	r3, [r3, #4]
 80020dc:	f003 030c 	and.w	r3, r3, #12
 80020e0:	2b04      	cmp	r3, #4
 80020e2:	d00c      	beq.n	80020fe <HAL_RCC_OscConfig+0x46>
 80020e4:	4b8f      	ldr	r3, [pc, #572]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 80020e6:	685b      	ldr	r3, [r3, #4]
 80020e8:	f003 030c 	and.w	r3, r3, #12
 80020ec:	2b08      	cmp	r3, #8
 80020ee:	d112      	bne.n	8002116 <HAL_RCC_OscConfig+0x5e>
 80020f0:	4b8c      	ldr	r3, [pc, #560]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 80020f2:	685b      	ldr	r3, [r3, #4]
 80020f4:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80020f8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80020fc:	d10b      	bne.n	8002116 <HAL_RCC_OscConfig+0x5e>
 80020fe:	4b89      	ldr	r3, [pc, #548]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 8002100:	681b      	ldr	r3, [r3, #0]
 8002102:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002106:	2b00      	cmp	r3, #0
 8002108:	d06c      	beq.n	80021e4 <HAL_RCC_OscConfig+0x12c>
 800210a:	687b      	ldr	r3, [r7, #4]
 800210c:	685b      	ldr	r3, [r3, #4]
 800210e:	2b00      	cmp	r3, #0
 8002110:	d168      	bne.n	80021e4 <HAL_RCC_OscConfig+0x12c>
 8002112:	2301      	movs	r3, #1
 8002114:	e24c      	b.n	80025b0 <HAL_RCC_OscConfig+0x4f8>
 8002116:	687b      	ldr	r3, [r7, #4]
 8002118:	685b      	ldr	r3, [r3, #4]
 800211a:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800211e:	d106      	bne.n	800212e <HAL_RCC_OscConfig+0x76>
 8002120:	4b80      	ldr	r3, [pc, #512]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 8002122:	681b      	ldr	r3, [r3, #0]
 8002124:	4a7f      	ldr	r2, [pc, #508]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 8002126:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800212a:	6013      	str	r3, [r2, #0]
 800212c:	e02e      	b.n	800218c <HAL_RCC_OscConfig+0xd4>
 800212e:	687b      	ldr	r3, [r7, #4]
 8002130:	685b      	ldr	r3, [r3, #4]
 8002132:	2b00      	cmp	r3, #0
 8002134:	d10c      	bne.n	8002150 <HAL_RCC_OscConfig+0x98>
 8002136:	4b7b      	ldr	r3, [pc, #492]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 8002138:	681b      	ldr	r3, [r3, #0]
 800213a:	4a7a      	ldr	r2, [pc, #488]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 800213c:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8002140:	6013      	str	r3, [r2, #0]
 8002142:	4b78      	ldr	r3, [pc, #480]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 8002144:	681b      	ldr	r3, [r3, #0]
 8002146:	4a77      	ldr	r2, [pc, #476]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 8002148:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800214c:	6013      	str	r3, [r2, #0]
 800214e:	e01d      	b.n	800218c <HAL_RCC_OscConfig+0xd4>
 8002150:	687b      	ldr	r3, [r7, #4]
 8002152:	685b      	ldr	r3, [r3, #4]
 8002154:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8002158:	d10c      	bne.n	8002174 <HAL_RCC_OscConfig+0xbc>
 800215a:	4b72      	ldr	r3, [pc, #456]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 800215c:	681b      	ldr	r3, [r3, #0]
 800215e:	4a71      	ldr	r2, [pc, #452]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 8002160:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002164:	6013      	str	r3, [r2, #0]
 8002166:	4b6f      	ldr	r3, [pc, #444]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 8002168:	681b      	ldr	r3, [r3, #0]
 800216a:	4a6e      	ldr	r2, [pc, #440]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 800216c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002170:	6013      	str	r3, [r2, #0]
 8002172:	e00b      	b.n	800218c <HAL_RCC_OscConfig+0xd4>
 8002174:	4b6b      	ldr	r3, [pc, #428]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 8002176:	681b      	ldr	r3, [r3, #0]
 8002178:	4a6a      	ldr	r2, [pc, #424]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 800217a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800217e:	6013      	str	r3, [r2, #0]
 8002180:	4b68      	ldr	r3, [pc, #416]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 8002182:	681b      	ldr	r3, [r3, #0]
 8002184:	4a67      	ldr	r2, [pc, #412]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 8002186:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800218a:	6013      	str	r3, [r2, #0]
 800218c:	687b      	ldr	r3, [r7, #4]
 800218e:	685b      	ldr	r3, [r3, #4]
 8002190:	2b00      	cmp	r3, #0
 8002192:	d013      	beq.n	80021bc <HAL_RCC_OscConfig+0x104>
 8002194:	f7ff fc08 	bl	80019a8 <HAL_GetTick>
 8002198:	6138      	str	r0, [r7, #16]
 800219a:	e008      	b.n	80021ae <HAL_RCC_OscConfig+0xf6>
 800219c:	f7ff fc04 	bl	80019a8 <HAL_GetTick>
 80021a0:	4602      	mov	r2, r0
 80021a2:	693b      	ldr	r3, [r7, #16]
 80021a4:	1ad3      	subs	r3, r2, r3
 80021a6:	2b64      	cmp	r3, #100	@ 0x64
 80021a8:	d901      	bls.n	80021ae <HAL_RCC_OscConfig+0xf6>
 80021aa:	2303      	movs	r3, #3
 80021ac:	e200      	b.n	80025b0 <HAL_RCC_OscConfig+0x4f8>
 80021ae:	4b5d      	ldr	r3, [pc, #372]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 80021b0:	681b      	ldr	r3, [r3, #0]
 80021b2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80021b6:	2b00      	cmp	r3, #0
 80021b8:	d0f0      	beq.n	800219c <HAL_RCC_OscConfig+0xe4>
 80021ba:	e014      	b.n	80021e6 <HAL_RCC_OscConfig+0x12e>
 80021bc:	f7ff fbf4 	bl	80019a8 <HAL_GetTick>
 80021c0:	6138      	str	r0, [r7, #16]
 80021c2:	e008      	b.n	80021d6 <HAL_RCC_OscConfig+0x11e>
 80021c4:	f7ff fbf0 	bl	80019a8 <HAL_GetTick>
 80021c8:	4602      	mov	r2, r0
 80021ca:	693b      	ldr	r3, [r7, #16]
 80021cc:	1ad3      	subs	r3, r2, r3
 80021ce:	2b64      	cmp	r3, #100	@ 0x64
 80021d0:	d901      	bls.n	80021d6 <HAL_RCC_OscConfig+0x11e>
 80021d2:	2303      	movs	r3, #3
 80021d4:	e1ec      	b.n	80025b0 <HAL_RCC_OscConfig+0x4f8>
 80021d6:	4b53      	ldr	r3, [pc, #332]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 80021d8:	681b      	ldr	r3, [r3, #0]
 80021da:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80021de:	2b00      	cmp	r3, #0
 80021e0:	d1f0      	bne.n	80021c4 <HAL_RCC_OscConfig+0x10c>
 80021e2:	e000      	b.n	80021e6 <HAL_RCC_OscConfig+0x12e>
 80021e4:	bf00      	nop
 80021e6:	687b      	ldr	r3, [r7, #4]
 80021e8:	681b      	ldr	r3, [r3, #0]
 80021ea:	f003 0302 	and.w	r3, r3, #2
 80021ee:	2b00      	cmp	r3, #0
 80021f0:	d063      	beq.n	80022ba <HAL_RCC_OscConfig+0x202>
 80021f2:	4b4c      	ldr	r3, [pc, #304]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 80021f4:	685b      	ldr	r3, [r3, #4]
 80021f6:	f003 030c 	and.w	r3, r3, #12
 80021fa:	2b00      	cmp	r3, #0
 80021fc:	d00b      	beq.n	8002216 <HAL_RCC_OscConfig+0x15e>
 80021fe:	4b49      	ldr	r3, [pc, #292]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 8002200:	685b      	ldr	r3, [r3, #4]
 8002202:	f003 030c 	and.w	r3, r3, #12
 8002206:	2b08      	cmp	r3, #8
 8002208:	d11c      	bne.n	8002244 <HAL_RCC_OscConfig+0x18c>
 800220a:	4b46      	ldr	r3, [pc, #280]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 800220c:	685b      	ldr	r3, [r3, #4]
 800220e:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002212:	2b00      	cmp	r3, #0
 8002214:	d116      	bne.n	8002244 <HAL_RCC_OscConfig+0x18c>
 8002216:	4b43      	ldr	r3, [pc, #268]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 8002218:	681b      	ldr	r3, [r3, #0]
 800221a:	f003 0302 	and.w	r3, r3, #2
 800221e:	2b00      	cmp	r3, #0
 8002220:	d005      	beq.n	800222e <HAL_RCC_OscConfig+0x176>
 8002222:	687b      	ldr	r3, [r7, #4]
 8002224:	691b      	ldr	r3, [r3, #16]
 8002226:	2b01      	cmp	r3, #1
 8002228:	d001      	beq.n	800222e <HAL_RCC_OscConfig+0x176>
 800222a:	2301      	movs	r3, #1
 800222c:	e1c0      	b.n	80025b0 <HAL_RCC_OscConfig+0x4f8>
 800222e:	4b3d      	ldr	r3, [pc, #244]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 8002230:	681b      	ldr	r3, [r3, #0]
 8002232:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002236:	687b      	ldr	r3, [r7, #4]
 8002238:	695b      	ldr	r3, [r3, #20]
 800223a:	00db      	lsls	r3, r3, #3
 800223c:	4939      	ldr	r1, [pc, #228]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 800223e:	4313      	orrs	r3, r2
 8002240:	600b      	str	r3, [r1, #0]
 8002242:	e03a      	b.n	80022ba <HAL_RCC_OscConfig+0x202>
 8002244:	687b      	ldr	r3, [r7, #4]
 8002246:	691b      	ldr	r3, [r3, #16]
 8002248:	2b00      	cmp	r3, #0
 800224a:	d020      	beq.n	800228e <HAL_RCC_OscConfig+0x1d6>
 800224c:	4b36      	ldr	r3, [pc, #216]	@ (8002328 <HAL_RCC_OscConfig+0x270>)
 800224e:	2201      	movs	r2, #1
 8002250:	601a      	str	r2, [r3, #0]
 8002252:	f7ff fba9 	bl	80019a8 <HAL_GetTick>
 8002256:	6138      	str	r0, [r7, #16]
 8002258:	e008      	b.n	800226c <HAL_RCC_OscConfig+0x1b4>
 800225a:	f7ff fba5 	bl	80019a8 <HAL_GetTick>
 800225e:	4602      	mov	r2, r0
 8002260:	693b      	ldr	r3, [r7, #16]
 8002262:	1ad3      	subs	r3, r2, r3
 8002264:	2b02      	cmp	r3, #2
 8002266:	d901      	bls.n	800226c <HAL_RCC_OscConfig+0x1b4>
 8002268:	2303      	movs	r3, #3
 800226a:	e1a1      	b.n	80025b0 <HAL_RCC_OscConfig+0x4f8>
 800226c:	4b2d      	ldr	r3, [pc, #180]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 800226e:	681b      	ldr	r3, [r3, #0]
 8002270:	f003 0302 	and.w	r3, r3, #2
 8002274:	2b00      	cmp	r3, #0
 8002276:	d0f0      	beq.n	800225a <HAL_RCC_OscConfig+0x1a2>
 8002278:	4b2a      	ldr	r3, [pc, #168]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 800227a:	681b      	ldr	r3, [r3, #0]
 800227c:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002280:	687b      	ldr	r3, [r7, #4]
 8002282:	695b      	ldr	r3, [r3, #20]
 8002284:	00db      	lsls	r3, r3, #3
 8002286:	4927      	ldr	r1, [pc, #156]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 8002288:	4313      	orrs	r3, r2
 800228a:	600b      	str	r3, [r1, #0]
 800228c:	e015      	b.n	80022ba <HAL_RCC_OscConfig+0x202>
 800228e:	4b26      	ldr	r3, [pc, #152]	@ (8002328 <HAL_RCC_OscConfig+0x270>)
 8002290:	2200      	movs	r2, #0
 8002292:	601a      	str	r2, [r3, #0]
 8002294:	f7ff fb88 	bl	80019a8 <HAL_GetTick>
 8002298:	6138      	str	r0, [r7, #16]
 800229a:	e008      	b.n	80022ae <HAL_RCC_OscConfig+0x1f6>
 800229c:	f7ff fb84 	bl	80019a8 <HAL_GetTick>
 80022a0:	4602      	mov	r2, r0
 80022a2:	693b      	ldr	r3, [r7, #16]
 80022a4:	1ad3      	subs	r3, r2, r3
 80022a6:	2b02      	cmp	r3, #2
 80022a8:	d901      	bls.n	80022ae <HAL_RCC_OscConfig+0x1f6>
 80022aa:	2303      	movs	r3, #3
 80022ac:	e180      	b.n	80025b0 <HAL_RCC_OscConfig+0x4f8>
 80022ae:	4b1d      	ldr	r3, [pc, #116]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 80022b0:	681b      	ldr	r3, [r3, #0]
 80022b2:	f003 0302 	and.w	r3, r3, #2
 80022b6:	2b00      	cmp	r3, #0
 80022b8:	d1f0      	bne.n	800229c <HAL_RCC_OscConfig+0x1e4>
 80022ba:	687b      	ldr	r3, [r7, #4]
 80022bc:	681b      	ldr	r3, [r3, #0]
 80022be:	f003 0308 	and.w	r3, r3, #8
 80022c2:	2b00      	cmp	r3, #0
 80022c4:	d03a      	beq.n	800233c <HAL_RCC_OscConfig+0x284>
 80022c6:	687b      	ldr	r3, [r7, #4]
 80022c8:	699b      	ldr	r3, [r3, #24]
 80022ca:	2b00      	cmp	r3, #0
 80022cc:	d019      	beq.n	8002302 <HAL_RCC_OscConfig+0x24a>
 80022ce:	4b17      	ldr	r3, [pc, #92]	@ (800232c <HAL_RCC_OscConfig+0x274>)
 80022d0:	2201      	movs	r2, #1
 80022d2:	601a      	str	r2, [r3, #0]
 80022d4:	f7ff fb68 	bl	80019a8 <HAL_GetTick>
 80022d8:	6138      	str	r0, [r7, #16]
 80022da:	e008      	b.n	80022ee <HAL_RCC_OscConfig+0x236>
 80022dc:	f7ff fb64 	bl	80019a8 <HAL_GetTick>
 80022e0:	4602      	mov	r2, r0
 80022e2:	693b      	ldr	r3, [r7, #16]
 80022e4:	1ad3      	subs	r3, r2, r3
 80022e6:	2b02      	cmp	r3, #2
 80022e8:	d901      	bls.n	80022ee <HAL_RCC_OscConfig+0x236>
 80022ea:	2303      	movs	r3, #3
 80022ec:	e160      	b.n	80025b0 <HAL_RCC_OscConfig+0x4f8>
 80022ee:	4b0d      	ldr	r3, [pc, #52]	@ (8002324 <HAL_RCC_OscConfig+0x26c>)
 80022f0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80022f2:	f003 0302 	and.w	r3, r3, #2
 80022f6:	2b00      	cmp	r3, #0
 80022f8:	d0f0      	beq.n	80022dc <HAL_RCC_OscConfig+0x224>
 80022fa:	2001      	movs	r0, #1
 80022fc:	f000 face 	bl	800289c <RCC_Delay>
 8002300:	e01c      	b.n	800233c <HAL_RCC_OscConfig+0x284>
 8002302:	4b0a      	ldr	r3, [pc, #40]	@ (800232c <HAL_RCC_OscConfig+0x274>)
 8002304:	2200      	movs	r2, #0
 8002306:	601a      	str	r2, [r3, #0]
 8002308:	f7ff fb4e 	bl	80019a8 <HAL_GetTick>
 800230c:	6138      	str	r0, [r7, #16]
 800230e:	e00f      	b.n	8002330 <HAL_RCC_OscConfig+0x278>
 8002310:	f7ff fb4a 	bl	80019a8 <HAL_GetTick>
 8002314:	4602      	mov	r2, r0
 8002316:	693b      	ldr	r3, [r7, #16]
 8002318:	1ad3      	subs	r3, r2, r3
 800231a:	2b02      	cmp	r3, #2
 800231c:	d908      	bls.n	8002330 <HAL_RCC_OscConfig+0x278>
 800231e:	2303      	movs	r3, #3
 8002320:	e146      	b.n	80025b0 <HAL_RCC_OscConfig+0x4f8>
 8002322:	bf00      	nop
 8002324:	40021000 	.word	0x40021000
 8002328:	42420000 	.word	0x42420000
 800232c:	42420480 	.word	0x42420480
 8002330:	4b92      	ldr	r3, [pc, #584]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 8002332:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002334:	f003 0302 	and.w	r3, r3, #2
 8002338:	2b00      	cmp	r3, #0
 800233a:	d1e9      	bne.n	8002310 <HAL_RCC_OscConfig+0x258>
 800233c:	687b      	ldr	r3, [r7, #4]
 800233e:	681b      	ldr	r3, [r3, #0]
 8002340:	f003 0304 	and.w	r3, r3, #4
 8002344:	2b00      	cmp	r3, #0
 8002346:	f000 80a6 	beq.w	8002496 <HAL_RCC_OscConfig+0x3de>
 800234a:	2300      	movs	r3, #0
 800234c:	75fb      	strb	r3, [r7, #23]
 800234e:	4b8b      	ldr	r3, [pc, #556]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 8002350:	69db      	ldr	r3, [r3, #28]
 8002352:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002356:	2b00      	cmp	r3, #0
 8002358:	d10d      	bne.n	8002376 <HAL_RCC_OscConfig+0x2be>
 800235a:	4b88      	ldr	r3, [pc, #544]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 800235c:	69db      	ldr	r3, [r3, #28]
 800235e:	4a87      	ldr	r2, [pc, #540]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 8002360:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002364:	61d3      	str	r3, [r2, #28]
 8002366:	4b85      	ldr	r3, [pc, #532]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 8002368:	69db      	ldr	r3, [r3, #28]
 800236a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800236e:	60bb      	str	r3, [r7, #8]
 8002370:	68bb      	ldr	r3, [r7, #8]
 8002372:	2301      	movs	r3, #1
 8002374:	75fb      	strb	r3, [r7, #23]
 8002376:	4b82      	ldr	r3, [pc, #520]	@ (8002580 <HAL_RCC_OscConfig+0x4c8>)
 8002378:	681b      	ldr	r3, [r3, #0]
 800237a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800237e:	2b00      	cmp	r3, #0
 8002380:	d118      	bne.n	80023b4 <HAL_RCC_OscConfig+0x2fc>
 8002382:	4b7f      	ldr	r3, [pc, #508]	@ (8002580 <HAL_RCC_OscConfig+0x4c8>)
 8002384:	681b      	ldr	r3, [r3, #0]
 8002386:	4a7e      	ldr	r2, [pc, #504]	@ (8002580 <HAL_RCC_OscConfig+0x4c8>)
 8002388:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800238c:	6013      	str	r3, [r2, #0]
 800238e:	f7ff fb0b 	bl	80019a8 <HAL_GetTick>
 8002392:	6138      	str	r0, [r7, #16]
 8002394:	e008      	b.n	80023a8 <HAL_RCC_OscConfig+0x2f0>
 8002396:	f7ff fb07 	bl	80019a8 <HAL_GetTick>
 800239a:	4602      	mov	r2, r0
 800239c:	693b      	ldr	r3, [r7, #16]
 800239e:	1ad3      	subs	r3, r2, r3
 80023a0:	2b64      	cmp	r3, #100	@ 0x64
 80023a2:	d901      	bls.n	80023a8 <HAL_RCC_OscConfig+0x2f0>
 80023a4:	2303      	movs	r3, #3
 80023a6:	e103      	b.n	80025b0 <HAL_RCC_OscConfig+0x4f8>
 80023a8:	4b75      	ldr	r3, [pc, #468]	@ (8002580 <HAL_RCC_OscConfig+0x4c8>)
 80023aa:	681b      	ldr	r3, [r3, #0]
 80023ac:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80023b0:	2b00      	cmp	r3, #0
 80023b2:	d0f0      	beq.n	8002396 <HAL_RCC_OscConfig+0x2de>
 80023b4:	687b      	ldr	r3, [r7, #4]
 80023b6:	68db      	ldr	r3, [r3, #12]
 80023b8:	2b01      	cmp	r3, #1
 80023ba:	d106      	bne.n	80023ca <HAL_RCC_OscConfig+0x312>
 80023bc:	4b6f      	ldr	r3, [pc, #444]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 80023be:	6a1b      	ldr	r3, [r3, #32]
 80023c0:	4a6e      	ldr	r2, [pc, #440]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 80023c2:	f043 0301 	orr.w	r3, r3, #1
 80023c6:	6213      	str	r3, [r2, #32]
 80023c8:	e02d      	b.n	8002426 <HAL_RCC_OscConfig+0x36e>
 80023ca:	687b      	ldr	r3, [r7, #4]
 80023cc:	68db      	ldr	r3, [r3, #12]
 80023ce:	2b00      	cmp	r3, #0
 80023d0:	d10c      	bne.n	80023ec <HAL_RCC_OscConfig+0x334>
 80023d2:	4b6a      	ldr	r3, [pc, #424]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 80023d4:	6a1b      	ldr	r3, [r3, #32]
 80023d6:	4a69      	ldr	r2, [pc, #420]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 80023d8:	f023 0301 	bic.w	r3, r3, #1
 80023dc:	6213      	str	r3, [r2, #32]
 80023de:	4b67      	ldr	r3, [pc, #412]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 80023e0:	6a1b      	ldr	r3, [r3, #32]
 80023e2:	4a66      	ldr	r2, [pc, #408]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 80023e4:	f023 0304 	bic.w	r3, r3, #4
 80023e8:	6213      	str	r3, [r2, #32]
 80023ea:	e01c      	b.n	8002426 <HAL_RCC_OscConfig+0x36e>
 80023ec:	687b      	ldr	r3, [r7, #4]
 80023ee:	68db      	ldr	r3, [r3, #12]
 80023f0:	2b05      	cmp	r3, #5
 80023f2:	d10c      	bne.n	800240e <HAL_RCC_OscConfig+0x356>
 80023f4:	4b61      	ldr	r3, [pc, #388]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 80023f6:	6a1b      	ldr	r3, [r3, #32]
 80023f8:	4a60      	ldr	r2, [pc, #384]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 80023fa:	f043 0304 	orr.w	r3, r3, #4
 80023fe:	6213      	str	r3, [r2, #32]
 8002400:	4b5e      	ldr	r3, [pc, #376]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 8002402:	6a1b      	ldr	r3, [r3, #32]
 8002404:	4a5d      	ldr	r2, [pc, #372]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 8002406:	f043 0301 	orr.w	r3, r3, #1
 800240a:	6213      	str	r3, [r2, #32]
 800240c:	e00b      	b.n	8002426 <HAL_RCC_OscConfig+0x36e>
 800240e:	4b5b      	ldr	r3, [pc, #364]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 8002410:	6a1b      	ldr	r3, [r3, #32]
 8002412:	4a5a      	ldr	r2, [pc, #360]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 8002414:	f023 0301 	bic.w	r3, r3, #1
 8002418:	6213      	str	r3, [r2, #32]
 800241a:	4b58      	ldr	r3, [pc, #352]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 800241c:	6a1b      	ldr	r3, [r3, #32]
 800241e:	4a57      	ldr	r2, [pc, #348]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 8002420:	f023 0304 	bic.w	r3, r3, #4
 8002424:	6213      	str	r3, [r2, #32]
 8002426:	687b      	ldr	r3, [r7, #4]
 8002428:	68db      	ldr	r3, [r3, #12]
 800242a:	2b00      	cmp	r3, #0
 800242c:	d015      	beq.n	800245a <HAL_RCC_OscConfig+0x3a2>
 800242e:	f7ff fabb 	bl	80019a8 <HAL_GetTick>
 8002432:	6138      	str	r0, [r7, #16]
 8002434:	e00a      	b.n	800244c <HAL_RCC_OscConfig+0x394>
 8002436:	f7ff fab7 	bl	80019a8 <HAL_GetTick>
 800243a:	4602      	mov	r2, r0
 800243c:	693b      	ldr	r3, [r7, #16]
 800243e:	1ad3      	subs	r3, r2, r3
 8002440:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002444:	4293      	cmp	r3, r2
 8002446:	d901      	bls.n	800244c <HAL_RCC_OscConfig+0x394>
 8002448:	2303      	movs	r3, #3
 800244a:	e0b1      	b.n	80025b0 <HAL_RCC_OscConfig+0x4f8>
 800244c:	4b4b      	ldr	r3, [pc, #300]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 800244e:	6a1b      	ldr	r3, [r3, #32]
 8002450:	f003 0302 	and.w	r3, r3, #2
 8002454:	2b00      	cmp	r3, #0
 8002456:	d0ee      	beq.n	8002436 <HAL_RCC_OscConfig+0x37e>
 8002458:	e014      	b.n	8002484 <HAL_RCC_OscConfig+0x3cc>
 800245a:	f7ff faa5 	bl	80019a8 <HAL_GetTick>
 800245e:	6138      	str	r0, [r7, #16]
 8002460:	e00a      	b.n	8002478 <HAL_RCC_OscConfig+0x3c0>
 8002462:	f7ff faa1 	bl	80019a8 <HAL_GetTick>
 8002466:	4602      	mov	r2, r0
 8002468:	693b      	ldr	r3, [r7, #16]
 800246a:	1ad3      	subs	r3, r2, r3
 800246c:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002470:	4293      	cmp	r3, r2
 8002472:	d901      	bls.n	8002478 <HAL_RCC_OscConfig+0x3c0>
 8002474:	2303      	movs	r3, #3
 8002476:	e09b      	b.n	80025b0 <HAL_RCC_OscConfig+0x4f8>
 8002478:	4b40      	ldr	r3, [pc, #256]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 800247a:	6a1b      	ldr	r3, [r3, #32]
 800247c:	f003 0302 	and.w	r3, r3, #2
 8002480:	2b00      	cmp	r3, #0
 8002482:	d1ee      	bne.n	8002462 <HAL_RCC_OscConfig+0x3aa>
 8002484:	7dfb      	ldrb	r3, [r7, #23]
 8002486:	2b01      	cmp	r3, #1
 8002488:	d105      	bne.n	8002496 <HAL_RCC_OscConfig+0x3de>
 800248a:	4b3c      	ldr	r3, [pc, #240]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 800248c:	69db      	ldr	r3, [r3, #28]
 800248e:	4a3b      	ldr	r2, [pc, #236]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 8002490:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8002494:	61d3      	str	r3, [r2, #28]
 8002496:	687b      	ldr	r3, [r7, #4]
 8002498:	69db      	ldr	r3, [r3, #28]
 800249a:	2b00      	cmp	r3, #0
 800249c:	f000 8087 	beq.w	80025ae <HAL_RCC_OscConfig+0x4f6>
 80024a0:	4b36      	ldr	r3, [pc, #216]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 80024a2:	685b      	ldr	r3, [r3, #4]
 80024a4:	f003 030c 	and.w	r3, r3, #12
 80024a8:	2b08      	cmp	r3, #8
 80024aa:	d061      	beq.n	8002570 <HAL_RCC_OscConfig+0x4b8>
 80024ac:	687b      	ldr	r3, [r7, #4]
 80024ae:	69db      	ldr	r3, [r3, #28]
 80024b0:	2b02      	cmp	r3, #2
 80024b2:	d146      	bne.n	8002542 <HAL_RCC_OscConfig+0x48a>
 80024b4:	4b33      	ldr	r3, [pc, #204]	@ (8002584 <HAL_RCC_OscConfig+0x4cc>)
 80024b6:	2200      	movs	r2, #0
 80024b8:	601a      	str	r2, [r3, #0]
 80024ba:	f7ff fa75 	bl	80019a8 <HAL_GetTick>
 80024be:	6138      	str	r0, [r7, #16]
 80024c0:	e008      	b.n	80024d4 <HAL_RCC_OscConfig+0x41c>
 80024c2:	f7ff fa71 	bl	80019a8 <HAL_GetTick>
 80024c6:	4602      	mov	r2, r0
 80024c8:	693b      	ldr	r3, [r7, #16]
 80024ca:	1ad3      	subs	r3, r2, r3
 80024cc:	2b02      	cmp	r3, #2
 80024ce:	d901      	bls.n	80024d4 <HAL_RCC_OscConfig+0x41c>
 80024d0:	2303      	movs	r3, #3
 80024d2:	e06d      	b.n	80025b0 <HAL_RCC_OscConfig+0x4f8>
 80024d4:	4b29      	ldr	r3, [pc, #164]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 80024d6:	681b      	ldr	r3, [r3, #0]
 80024d8:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80024dc:	2b00      	cmp	r3, #0
 80024de:	d1f0      	bne.n	80024c2 <HAL_RCC_OscConfig+0x40a>
 80024e0:	687b      	ldr	r3, [r7, #4]
 80024e2:	6a1b      	ldr	r3, [r3, #32]
 80024e4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80024e8:	d108      	bne.n	80024fc <HAL_RCC_OscConfig+0x444>
 80024ea:	4b24      	ldr	r3, [pc, #144]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 80024ec:	685b      	ldr	r3, [r3, #4]
 80024ee:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 80024f2:	687b      	ldr	r3, [r7, #4]
 80024f4:	689b      	ldr	r3, [r3, #8]
 80024f6:	4921      	ldr	r1, [pc, #132]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 80024f8:	4313      	orrs	r3, r2
 80024fa:	604b      	str	r3, [r1, #4]
 80024fc:	4b1f      	ldr	r3, [pc, #124]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 80024fe:	685b      	ldr	r3, [r3, #4]
 8002500:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 8002504:	687b      	ldr	r3, [r7, #4]
 8002506:	6a19      	ldr	r1, [r3, #32]
 8002508:	687b      	ldr	r3, [r7, #4]
 800250a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800250c:	430b      	orrs	r3, r1
 800250e:	491b      	ldr	r1, [pc, #108]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 8002510:	4313      	orrs	r3, r2
 8002512:	604b      	str	r3, [r1, #4]
 8002514:	4b1b      	ldr	r3, [pc, #108]	@ (8002584 <HAL_RCC_OscConfig+0x4cc>)
 8002516:	2201      	movs	r2, #1
 8002518:	601a      	str	r2, [r3, #0]
 800251a:	f7ff fa45 	bl	80019a8 <HAL_GetTick>
 800251e:	6138      	str	r0, [r7, #16]
 8002520:	e008      	b.n	8002534 <HAL_RCC_OscConfig+0x47c>
 8002522:	f7ff fa41 	bl	80019a8 <HAL_GetTick>
 8002526:	4602      	mov	r2, r0
 8002528:	693b      	ldr	r3, [r7, #16]
 800252a:	1ad3      	subs	r3, r2, r3
 800252c:	2b02      	cmp	r3, #2
 800252e:	d901      	bls.n	8002534 <HAL_RCC_OscConfig+0x47c>
 8002530:	2303      	movs	r3, #3
 8002532:	e03d      	b.n	80025b0 <HAL_RCC_OscConfig+0x4f8>
 8002534:	4b11      	ldr	r3, [pc, #68]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 8002536:	681b      	ldr	r3, [r3, #0]
 8002538:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800253c:	2b00      	cmp	r3, #0
 800253e:	d0f0      	beq.n	8002522 <HAL_RCC_OscConfig+0x46a>
 8002540:	e035      	b.n	80025ae <HAL_RCC_OscConfig+0x4f6>
 8002542:	4b10      	ldr	r3, [pc, #64]	@ (8002584 <HAL_RCC_OscConfig+0x4cc>)
 8002544:	2200      	movs	r2, #0
 8002546:	601a      	str	r2, [r3, #0]
 8002548:	f7ff fa2e 	bl	80019a8 <HAL_GetTick>
 800254c:	6138      	str	r0, [r7, #16]
 800254e:	e008      	b.n	8002562 <HAL_RCC_OscConfig+0x4aa>
 8002550:	f7ff fa2a 	bl	80019a8 <HAL_GetTick>
 8002554:	4602      	mov	r2, r0
 8002556:	693b      	ldr	r3, [r7, #16]
 8002558:	1ad3      	subs	r3, r2, r3
 800255a:	2b02      	cmp	r3, #2
 800255c:	d901      	bls.n	8002562 <HAL_RCC_OscConfig+0x4aa>
 800255e:	2303      	movs	r3, #3
 8002560:	e026      	b.n	80025b0 <HAL_RCC_OscConfig+0x4f8>
 8002562:	4b06      	ldr	r3, [pc, #24]	@ (800257c <HAL_RCC_OscConfig+0x4c4>)
 8002564:	681b      	ldr	r3, [r3, #0]
 8002566:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800256a:	2b00      	cmp	r3, #0
 800256c:	d1f0      	bne.n	8002550 <HAL_RCC_OscConfig+0x498>
 800256e:	e01e      	b.n	80025ae <HAL_RCC_OscConfig+0x4f6>
 8002570:	687b      	ldr	r3, [r7, #4]
 8002572:	69db      	ldr	r3, [r3, #28]
 8002574:	2b01      	cmp	r3, #1
 8002576:	d107      	bne.n	8002588 <HAL_RCC_OscConfig+0x4d0>
 8002578:	2301      	movs	r3, #1
 800257a:	e019      	b.n	80025b0 <HAL_RCC_OscConfig+0x4f8>
 800257c:	40021000 	.word	0x40021000
 8002580:	40007000 	.word	0x40007000
 8002584:	42420060 	.word	0x42420060
 8002588:	4b0b      	ldr	r3, [pc, #44]	@ (80025b8 <HAL_RCC_OscConfig+0x500>)
 800258a:	685b      	ldr	r3, [r3, #4]
 800258c:	60fb      	str	r3, [r7, #12]
 800258e:	68fb      	ldr	r3, [r7, #12]
 8002590:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 8002594:	687b      	ldr	r3, [r7, #4]
 8002596:	6a1b      	ldr	r3, [r3, #32]
 8002598:	429a      	cmp	r2, r3
 800259a:	d106      	bne.n	80025aa <HAL_RCC_OscConfig+0x4f2>
 800259c:	68fb      	ldr	r3, [r7, #12]
 800259e:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 80025a2:	687b      	ldr	r3, [r7, #4]
 80025a4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80025a6:	429a      	cmp	r2, r3
 80025a8:	d001      	beq.n	80025ae <HAL_RCC_OscConfig+0x4f6>
 80025aa:	2301      	movs	r3, #1
 80025ac:	e000      	b.n	80025b0 <HAL_RCC_OscConfig+0x4f8>
 80025ae:	2300      	movs	r3, #0
 80025b0:	4618      	mov	r0, r3
 80025b2:	3718      	adds	r7, #24
 80025b4:	46bd      	mov	sp, r7
 80025b6:	bd80      	pop	{r7, pc}
 80025b8:	40021000 	.word	0x40021000

080025bc <HAL_RCC_ClockConfig>:
 80025bc:	b580      	push	{r7, lr}
 80025be:	b084      	sub	sp, #16
 80025c0:	af00      	add	r7, sp, #0
 80025c2:	6078      	str	r0, [r7, #4]
 80025c4:	6039      	str	r1, [r7, #0]
 80025c6:	687b      	ldr	r3, [r7, #4]
 80025c8:	2b00      	cmp	r3, #0
 80025ca:	d101      	bne.n	80025d0 <HAL_RCC_ClockConfig+0x14>
 80025cc:	2301      	movs	r3, #1
 80025ce:	e0d0      	b.n	8002772 <HAL_RCC_ClockConfig+0x1b6>
 80025d0:	4b6a      	ldr	r3, [pc, #424]	@ (800277c <HAL_RCC_ClockConfig+0x1c0>)
 80025d2:	681b      	ldr	r3, [r3, #0]
 80025d4:	f003 0307 	and.w	r3, r3, #7
 80025d8:	683a      	ldr	r2, [r7, #0]
 80025da:	429a      	cmp	r2, r3
 80025dc:	d910      	bls.n	8002600 <HAL_RCC_ClockConfig+0x44>
 80025de:	4b67      	ldr	r3, [pc, #412]	@ (800277c <HAL_RCC_ClockConfig+0x1c0>)
 80025e0:	681b      	ldr	r3, [r3, #0]
 80025e2:	f023 0207 	bic.w	r2, r3, #7
 80025e6:	4965      	ldr	r1, [pc, #404]	@ (800277c <HAL_RCC_ClockConfig+0x1c0>)
 80025e8:	683b      	ldr	r3, [r7, #0]
 80025ea:	4313      	orrs	r3, r2
 80025ec:	600b      	str	r3, [r1, #0]
 80025ee:	4b63      	ldr	r3, [pc, #396]	@ (800277c <HAL_RCC_ClockConfig+0x1c0>)
 80025f0:	681b      	ldr	r3, [r3, #0]
 80025f2:	f003 0307 	and.w	r3, r3, #7
 80025f6:	683a      	ldr	r2, [r7, #0]
 80025f8:	429a      	cmp	r2, r3
 80025fa:	d001      	beq.n	8002600 <HAL_RCC_ClockConfig+0x44>
 80025fc:	2301      	movs	r3, #1
 80025fe:	e0b8      	b.n	8002772 <HAL_RCC_ClockConfig+0x1b6>
 8002600:	687b      	ldr	r3, [r7, #4]
 8002602:	681b      	ldr	r3, [r3, #0]
 8002604:	f003 0302 	and.w	r3, r3, #2
 8002608:	2b00      	cmp	r3, #0
 800260a:	d020      	beq.n	800264e <HAL_RCC_ClockConfig+0x92>
 800260c:	687b      	ldr	r3, [r7, #4]
 800260e:	681b      	ldr	r3, [r3, #0]
 8002610:	f003 0304 	and.w	r3, r3, #4
 8002614:	2b00      	cmp	r3, #0
 8002616:	d005      	beq.n	8002624 <HAL_RCC_ClockConfig+0x68>
 8002618:	4b59      	ldr	r3, [pc, #356]	@ (8002780 <HAL_RCC_ClockConfig+0x1c4>)
 800261a:	685b      	ldr	r3, [r3, #4]
 800261c:	4a58      	ldr	r2, [pc, #352]	@ (8002780 <HAL_RCC_ClockConfig+0x1c4>)
 800261e:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8002622:	6053      	str	r3, [r2, #4]
 8002624:	687b      	ldr	r3, [r7, #4]
 8002626:	681b      	ldr	r3, [r3, #0]
 8002628:	f003 0308 	and.w	r3, r3, #8
 800262c:	2b00      	cmp	r3, #0
 800262e:	d005      	beq.n	800263c <HAL_RCC_ClockConfig+0x80>
 8002630:	4b53      	ldr	r3, [pc, #332]	@ (8002780 <HAL_RCC_ClockConfig+0x1c4>)
 8002632:	685b      	ldr	r3, [r3, #4]
 8002634:	4a52      	ldr	r2, [pc, #328]	@ (8002780 <HAL_RCC_ClockConfig+0x1c4>)
 8002636:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 800263a:	6053      	str	r3, [r2, #4]
 800263c:	4b50      	ldr	r3, [pc, #320]	@ (8002780 <HAL_RCC_ClockConfig+0x1c4>)
 800263e:	685b      	ldr	r3, [r3, #4]
 8002640:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002644:	687b      	ldr	r3, [r7, #4]
 8002646:	689b      	ldr	r3, [r3, #8]
 8002648:	494d      	ldr	r1, [pc, #308]	@ (8002780 <HAL_RCC_ClockConfig+0x1c4>)
 800264a:	4313      	orrs	r3, r2
 800264c:	604b      	str	r3, [r1, #4]
 800264e:	687b      	ldr	r3, [r7, #4]
 8002650:	681b      	ldr	r3, [r3, #0]
 8002652:	f003 0301 	and.w	r3, r3, #1
 8002656:	2b00      	cmp	r3, #0
 8002658:	d040      	beq.n	80026dc <HAL_RCC_ClockConfig+0x120>
 800265a:	687b      	ldr	r3, [r7, #4]
 800265c:	685b      	ldr	r3, [r3, #4]
 800265e:	2b01      	cmp	r3, #1
 8002660:	d107      	bne.n	8002672 <HAL_RCC_ClockConfig+0xb6>
 8002662:	4b47      	ldr	r3, [pc, #284]	@ (8002780 <HAL_RCC_ClockConfig+0x1c4>)
 8002664:	681b      	ldr	r3, [r3, #0]
 8002666:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800266a:	2b00      	cmp	r3, #0
 800266c:	d115      	bne.n	800269a <HAL_RCC_ClockConfig+0xde>
 800266e:	2301      	movs	r3, #1
 8002670:	e07f      	b.n	8002772 <HAL_RCC_ClockConfig+0x1b6>
 8002672:	687b      	ldr	r3, [r7, #4]
 8002674:	685b      	ldr	r3, [r3, #4]
 8002676:	2b02      	cmp	r3, #2
 8002678:	d107      	bne.n	800268a <HAL_RCC_ClockConfig+0xce>
 800267a:	4b41      	ldr	r3, [pc, #260]	@ (8002780 <HAL_RCC_ClockConfig+0x1c4>)
 800267c:	681b      	ldr	r3, [r3, #0]
 800267e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002682:	2b00      	cmp	r3, #0
 8002684:	d109      	bne.n	800269a <HAL_RCC_ClockConfig+0xde>
 8002686:	2301      	movs	r3, #1
 8002688:	e073      	b.n	8002772 <HAL_RCC_ClockConfig+0x1b6>
 800268a:	4b3d      	ldr	r3, [pc, #244]	@ (8002780 <HAL_RCC_ClockConfig+0x1c4>)
 800268c:	681b      	ldr	r3, [r3, #0]
 800268e:	f003 0302 	and.w	r3, r3, #2
 8002692:	2b00      	cmp	r3, #0
 8002694:	d101      	bne.n	800269a <HAL_RCC_ClockConfig+0xde>
 8002696:	2301      	movs	r3, #1
 8002698:	e06b      	b.n	8002772 <HAL_RCC_ClockConfig+0x1b6>
 800269a:	4b39      	ldr	r3, [pc, #228]	@ (8002780 <HAL_RCC_ClockConfig+0x1c4>)
 800269c:	685b      	ldr	r3, [r3, #4]
 800269e:	f023 0203 	bic.w	r2, r3, #3
 80026a2:	687b      	ldr	r3, [r7, #4]
 80026a4:	685b      	ldr	r3, [r3, #4]
 80026a6:	4936      	ldr	r1, [pc, #216]	@ (8002780 <HAL_RCC_ClockConfig+0x1c4>)
 80026a8:	4313      	orrs	r3, r2
 80026aa:	604b      	str	r3, [r1, #4]
 80026ac:	f7ff f97c 	bl	80019a8 <HAL_GetTick>
 80026b0:	60f8      	str	r0, [r7, #12]
 80026b2:	e00a      	b.n	80026ca <HAL_RCC_ClockConfig+0x10e>
 80026b4:	f7ff f978 	bl	80019a8 <HAL_GetTick>
 80026b8:	4602      	mov	r2, r0
 80026ba:	68fb      	ldr	r3, [r7, #12]
 80026bc:	1ad3      	subs	r3, r2, r3
 80026be:	f241 3288 	movw	r2, #5000	@ 0x1388
 80026c2:	4293      	cmp	r3, r2
 80026c4:	d901      	bls.n	80026ca <HAL_RCC_ClockConfig+0x10e>
 80026c6:	2303      	movs	r3, #3
 80026c8:	e053      	b.n	8002772 <HAL_RCC_ClockConfig+0x1b6>
 80026ca:	4b2d      	ldr	r3, [pc, #180]	@ (8002780 <HAL_RCC_ClockConfig+0x1c4>)
 80026cc:	685b      	ldr	r3, [r3, #4]
 80026ce:	f003 020c 	and.w	r2, r3, #12
 80026d2:	687b      	ldr	r3, [r7, #4]
 80026d4:	685b      	ldr	r3, [r3, #4]
 80026d6:	009b      	lsls	r3, r3, #2
 80026d8:	429a      	cmp	r2, r3
 80026da:	d1eb      	bne.n	80026b4 <HAL_RCC_ClockConfig+0xf8>
 80026dc:	4b27      	ldr	r3, [pc, #156]	@ (800277c <HAL_RCC_ClockConfig+0x1c0>)
 80026de:	681b      	ldr	r3, [r3, #0]
 80026e0:	f003 0307 	and.w	r3, r3, #7
 80026e4:	683a      	ldr	r2, [r7, #0]
 80026e6:	429a      	cmp	r2, r3
 80026e8:	d210      	bcs.n	800270c <HAL_RCC_ClockConfig+0x150>
 80026ea:	4b24      	ldr	r3, [pc, #144]	@ (800277c <HAL_RCC_ClockConfig+0x1c0>)
 80026ec:	681b      	ldr	r3, [r3, #0]
 80026ee:	f023 0207 	bic.w	r2, r3, #7
 80026f2:	4922      	ldr	r1, [pc, #136]	@ (800277c <HAL_RCC_ClockConfig+0x1c0>)
 80026f4:	683b      	ldr	r3, [r7, #0]
 80026f6:	4313      	orrs	r3, r2
 80026f8:	600b      	str	r3, [r1, #0]
 80026fa:	4b20      	ldr	r3, [pc, #128]	@ (800277c <HAL_RCC_ClockConfig+0x1c0>)
 80026fc:	681b      	ldr	r3, [r3, #0]
 80026fe:	f003 0307 	and.w	r3, r3, #7
 8002702:	683a      	ldr	r2, [r7, #0]
 8002704:	429a      	cmp	r2, r3
 8002706:	d001      	beq.n	800270c <HAL_RCC_ClockConfig+0x150>
 8002708:	2301      	movs	r3, #1
 800270a:	e032      	b.n	8002772 <HAL_RCC_ClockConfig+0x1b6>
 800270c:	687b      	ldr	r3, [r7, #4]
 800270e:	681b      	ldr	r3, [r3, #0]
 8002710:	f003 0304 	and.w	r3, r3, #4
 8002714:	2b00      	cmp	r3, #0
 8002716:	d008      	beq.n	800272a <HAL_RCC_ClockConfig+0x16e>
 8002718:	4b19      	ldr	r3, [pc, #100]	@ (8002780 <HAL_RCC_ClockConfig+0x1c4>)
 800271a:	685b      	ldr	r3, [r3, #4]
 800271c:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8002720:	687b      	ldr	r3, [r7, #4]
 8002722:	68db      	ldr	r3, [r3, #12]
 8002724:	4916      	ldr	r1, [pc, #88]	@ (8002780 <HAL_RCC_ClockConfig+0x1c4>)
 8002726:	4313      	orrs	r3, r2
 8002728:	604b      	str	r3, [r1, #4]
 800272a:	687b      	ldr	r3, [r7, #4]
 800272c:	681b      	ldr	r3, [r3, #0]
 800272e:	f003 0308 	and.w	r3, r3, #8
 8002732:	2b00      	cmp	r3, #0
 8002734:	d009      	beq.n	800274a <HAL_RCC_ClockConfig+0x18e>
 8002736:	4b12      	ldr	r3, [pc, #72]	@ (8002780 <HAL_RCC_ClockConfig+0x1c4>)
 8002738:	685b      	ldr	r3, [r3, #4]
 800273a:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 800273e:	687b      	ldr	r3, [r7, #4]
 8002740:	691b      	ldr	r3, [r3, #16]
 8002742:	00db      	lsls	r3, r3, #3
 8002744:	490e      	ldr	r1, [pc, #56]	@ (8002780 <HAL_RCC_ClockConfig+0x1c4>)
 8002746:	4313      	orrs	r3, r2
 8002748:	604b      	str	r3, [r1, #4]
 800274a:	f000 f821 	bl	8002790 <HAL_RCC_GetSysClockFreq>
 800274e:	4602      	mov	r2, r0
 8002750:	4b0b      	ldr	r3, [pc, #44]	@ (8002780 <HAL_RCC_ClockConfig+0x1c4>)
 8002752:	685b      	ldr	r3, [r3, #4]
 8002754:	091b      	lsrs	r3, r3, #4
 8002756:	f003 030f 	and.w	r3, r3, #15
 800275a:	490a      	ldr	r1, [pc, #40]	@ (8002784 <HAL_RCC_ClockConfig+0x1c8>)
 800275c:	5ccb      	ldrb	r3, [r1, r3]
 800275e:	fa22 f303 	lsr.w	r3, r2, r3
 8002762:	4a09      	ldr	r2, [pc, #36]	@ (8002788 <HAL_RCC_ClockConfig+0x1cc>)
 8002764:	6013      	str	r3, [r2, #0]
 8002766:	4b09      	ldr	r3, [pc, #36]	@ (800278c <HAL_RCC_ClockConfig+0x1d0>)
 8002768:	681b      	ldr	r3, [r3, #0]
 800276a:	4618      	mov	r0, r3
 800276c:	f7ff f8da 	bl	8001924 <HAL_InitTick>
 8002770:	2300      	movs	r3, #0
 8002772:	4618      	mov	r0, r3
 8002774:	3710      	adds	r7, #16
 8002776:	46bd      	mov	sp, r7
 8002778:	bd80      	pop	{r7, pc}
 800277a:	bf00      	nop
 800277c:	40022000 	.word	0x40022000
 8002780:	40021000 	.word	0x40021000
 8002784:	08004f4c 	.word	0x08004f4c
 8002788:	20000068 	.word	0x20000068
 800278c:	2000006c 	.word	0x2000006c

08002790 <HAL_RCC_GetSysClockFreq>:
 8002790:	b480      	push	{r7}
 8002792:	b087      	sub	sp, #28
 8002794:	af00      	add	r7, sp, #0
 8002796:	2300      	movs	r3, #0
 8002798:	60fb      	str	r3, [r7, #12]
 800279a:	2300      	movs	r3, #0
 800279c:	60bb      	str	r3, [r7, #8]
 800279e:	2300      	movs	r3, #0
 80027a0:	617b      	str	r3, [r7, #20]
 80027a2:	2300      	movs	r3, #0
 80027a4:	607b      	str	r3, [r7, #4]
 80027a6:	2300      	movs	r3, #0
 80027a8:	613b      	str	r3, [r7, #16]
 80027aa:	4b1e      	ldr	r3, [pc, #120]	@ (8002824 <HAL_RCC_GetSysClockFreq+0x94>)
 80027ac:	685b      	ldr	r3, [r3, #4]
 80027ae:	60fb      	str	r3, [r7, #12]
 80027b0:	68fb      	ldr	r3, [r7, #12]
 80027b2:	f003 030c 	and.w	r3, r3, #12
 80027b6:	2b04      	cmp	r3, #4
 80027b8:	d002      	beq.n	80027c0 <HAL_RCC_GetSysClockFreq+0x30>
 80027ba:	2b08      	cmp	r3, #8
 80027bc:	d003      	beq.n	80027c6 <HAL_RCC_GetSysClockFreq+0x36>
 80027be:	e027      	b.n	8002810 <HAL_RCC_GetSysClockFreq+0x80>
 80027c0:	4b19      	ldr	r3, [pc, #100]	@ (8002828 <HAL_RCC_GetSysClockFreq+0x98>)
 80027c2:	613b      	str	r3, [r7, #16]
 80027c4:	e027      	b.n	8002816 <HAL_RCC_GetSysClockFreq+0x86>
 80027c6:	68fb      	ldr	r3, [r7, #12]
 80027c8:	0c9b      	lsrs	r3, r3, #18
 80027ca:	f003 030f 	and.w	r3, r3, #15
 80027ce:	4a17      	ldr	r2, [pc, #92]	@ (800282c <HAL_RCC_GetSysClockFreq+0x9c>)
 80027d0:	5cd3      	ldrb	r3, [r2, r3]
 80027d2:	607b      	str	r3, [r7, #4]
 80027d4:	68fb      	ldr	r3, [r7, #12]
 80027d6:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80027da:	2b00      	cmp	r3, #0
 80027dc:	d010      	beq.n	8002800 <HAL_RCC_GetSysClockFreq+0x70>
 80027de:	4b11      	ldr	r3, [pc, #68]	@ (8002824 <HAL_RCC_GetSysClockFreq+0x94>)
 80027e0:	685b      	ldr	r3, [r3, #4]
 80027e2:	0c5b      	lsrs	r3, r3, #17
 80027e4:	f003 0301 	and.w	r3, r3, #1
 80027e8:	4a11      	ldr	r2, [pc, #68]	@ (8002830 <HAL_RCC_GetSysClockFreq+0xa0>)
 80027ea:	5cd3      	ldrb	r3, [r2, r3]
 80027ec:	60bb      	str	r3, [r7, #8]
 80027ee:	687b      	ldr	r3, [r7, #4]
 80027f0:	4a0d      	ldr	r2, [pc, #52]	@ (8002828 <HAL_RCC_GetSysClockFreq+0x98>)
 80027f2:	fb03 f202 	mul.w	r2, r3, r2
 80027f6:	68bb      	ldr	r3, [r7, #8]
 80027f8:	fbb2 f3f3 	udiv	r3, r2, r3
 80027fc:	617b      	str	r3, [r7, #20]
 80027fe:	e004      	b.n	800280a <HAL_RCC_GetSysClockFreq+0x7a>
 8002800:	687b      	ldr	r3, [r7, #4]
 8002802:	4a0c      	ldr	r2, [pc, #48]	@ (8002834 <HAL_RCC_GetSysClockFreq+0xa4>)
 8002804:	fb02 f303 	mul.w	r3, r2, r3
 8002808:	617b      	str	r3, [r7, #20]
 800280a:	697b      	ldr	r3, [r7, #20]
 800280c:	613b      	str	r3, [r7, #16]
 800280e:	e002      	b.n	8002816 <HAL_RCC_GetSysClockFreq+0x86>
 8002810:	4b05      	ldr	r3, [pc, #20]	@ (8002828 <HAL_RCC_GetSysClockFreq+0x98>)
 8002812:	613b      	str	r3, [r7, #16]
 8002814:	bf00      	nop
 8002816:	693b      	ldr	r3, [r7, #16]
 8002818:	4618      	mov	r0, r3
 800281a:	371c      	adds	r7, #28
 800281c:	46bd      	mov	sp, r7
 800281e:	bc80      	pop	{r7}
 8002820:	4770      	bx	lr
 8002822:	bf00      	nop
 8002824:	40021000 	.word	0x40021000
 8002828:	007a1200 	.word	0x007a1200
 800282c:	08004f64 	.word	0x08004f64
 8002830:	08004f74 	.word	0x08004f74
 8002834:	003d0900 	.word	0x003d0900

08002838 <HAL_RCC_GetHCLKFreq>:
 8002838:	b480      	push	{r7}
 800283a:	af00      	add	r7, sp, #0
 800283c:	4b02      	ldr	r3, [pc, #8]	@ (8002848 <HAL_RCC_GetHCLKFreq+0x10>)
 800283e:	681b      	ldr	r3, [r3, #0]
 8002840:	4618      	mov	r0, r3
 8002842:	46bd      	mov	sp, r7
 8002844:	bc80      	pop	{r7}
 8002846:	4770      	bx	lr
 8002848:	20000068 	.word	0x20000068

0800284c <HAL_RCC_GetPCLK1Freq>:
 800284c:	b580      	push	{r7, lr}
 800284e:	af00      	add	r7, sp, #0
 8002850:	f7ff fff2 	bl	8002838 <HAL_RCC_GetHCLKFreq>
 8002854:	4602      	mov	r2, r0
 8002856:	4b05      	ldr	r3, [pc, #20]	@ (800286c <HAL_RCC_GetPCLK1Freq+0x20>)
 8002858:	685b      	ldr	r3, [r3, #4]
 800285a:	0a1b      	lsrs	r3, r3, #8
 800285c:	f003 0307 	and.w	r3, r3, #7
 8002860:	4903      	ldr	r1, [pc, #12]	@ (8002870 <HAL_RCC_GetPCLK1Freq+0x24>)
 8002862:	5ccb      	ldrb	r3, [r1, r3]
 8002864:	fa22 f303 	lsr.w	r3, r2, r3
 8002868:	4618      	mov	r0, r3
 800286a:	bd80      	pop	{r7, pc}
 800286c:	40021000 	.word	0x40021000
 8002870:	08004f5c 	.word	0x08004f5c

08002874 <HAL_RCC_GetPCLK2Freq>:
 8002874:	b580      	push	{r7, lr}
 8002876:	af00      	add	r7, sp, #0
 8002878:	f7ff ffde 	bl	8002838 <HAL_RCC_GetHCLKFreq>
 800287c:	4602      	mov	r2, r0
 800287e:	4b05      	ldr	r3, [pc, #20]	@ (8002894 <HAL_RCC_GetPCLK2Freq+0x20>)
 8002880:	685b      	ldr	r3, [r3, #4]
 8002882:	0adb      	lsrs	r3, r3, #11
 8002884:	f003 0307 	and.w	r3, r3, #7
 8002888:	4903      	ldr	r1, [pc, #12]	@ (8002898 <HAL_RCC_GetPCLK2Freq+0x24>)
 800288a:	5ccb      	ldrb	r3, [r1, r3]
 800288c:	fa22 f303 	lsr.w	r3, r2, r3
 8002890:	4618      	mov	r0, r3
 8002892:	bd80      	pop	{r7, pc}
 8002894:	40021000 	.word	0x40021000
 8002898:	08004f5c 	.word	0x08004f5c

0800289c <RCC_Delay>:
 800289c:	b480      	push	{r7}
 800289e:	b085      	sub	sp, #20
 80028a0:	af00      	add	r7, sp, #0
 80028a2:	6078      	str	r0, [r7, #4]
 80028a4:	4b0a      	ldr	r3, [pc, #40]	@ (80028d0 <RCC_Delay+0x34>)
 80028a6:	681b      	ldr	r3, [r3, #0]
 80028a8:	4a0a      	ldr	r2, [pc, #40]	@ (80028d4 <RCC_Delay+0x38>)
 80028aa:	fba2 2303 	umull	r2, r3, r2, r3
 80028ae:	0a5b      	lsrs	r3, r3, #9
 80028b0:	687a      	ldr	r2, [r7, #4]
 80028b2:	fb02 f303 	mul.w	r3, r2, r3
 80028b6:	60fb      	str	r3, [r7, #12]
 80028b8:	bf00      	nop
 80028ba:	68fb      	ldr	r3, [r7, #12]
 80028bc:	1e5a      	subs	r2, r3, #1
 80028be:	60fa      	str	r2, [r7, #12]
 80028c0:	2b00      	cmp	r3, #0
 80028c2:	d1f9      	bne.n	80028b8 <RCC_Delay+0x1c>
 80028c4:	bf00      	nop
 80028c6:	bf00      	nop
 80028c8:	3714      	adds	r7, #20
 80028ca:	46bd      	mov	sp, r7
 80028cc:	bc80      	pop	{r7}
 80028ce:	4770      	bx	lr
 80028d0:	20000068 	.word	0x20000068
 80028d4:	10624dd3 	.word	0x10624dd3

080028d8 <HAL_TIM_Base_Init>:
 80028d8:	b580      	push	{r7, lr}
 80028da:	b082      	sub	sp, #8
 80028dc:	af00      	add	r7, sp, #0
 80028de:	6078      	str	r0, [r7, #4]
 80028e0:	687b      	ldr	r3, [r7, #4]
 80028e2:	2b00      	cmp	r3, #0
 80028e4:	d101      	bne.n	80028ea <HAL_TIM_Base_Init+0x12>
 80028e6:	2301      	movs	r3, #1
 80028e8:	e041      	b.n	800296e <HAL_TIM_Base_Init+0x96>
 80028ea:	687b      	ldr	r3, [r7, #4]
 80028ec:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80028f0:	b2db      	uxtb	r3, r3
 80028f2:	2b00      	cmp	r3, #0
 80028f4:	d106      	bne.n	8002904 <HAL_TIM_Base_Init+0x2c>
 80028f6:	687b      	ldr	r3, [r7, #4]
 80028f8:	2200      	movs	r2, #0
 80028fa:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80028fe:	6878      	ldr	r0, [r7, #4]
 8002900:	f7fe fd72 	bl	80013e8 <HAL_TIM_Base_MspInit>
 8002904:	687b      	ldr	r3, [r7, #4]
 8002906:	2202      	movs	r2, #2
 8002908:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800290c:	687b      	ldr	r3, [r7, #4]
 800290e:	681a      	ldr	r2, [r3, #0]
 8002910:	687b      	ldr	r3, [r7, #4]
 8002912:	3304      	adds	r3, #4
 8002914:	4619      	mov	r1, r3
 8002916:	4610      	mov	r0, r2
 8002918:	f000 fc10 	bl	800313c <TIM_Base_SetConfig>
 800291c:	687b      	ldr	r3, [r7, #4]
 800291e:	2201      	movs	r2, #1
 8002920:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8002924:	687b      	ldr	r3, [r7, #4]
 8002926:	2201      	movs	r2, #1
 8002928:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800292c:	687b      	ldr	r3, [r7, #4]
 800292e:	2201      	movs	r2, #1
 8002930:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8002934:	687b      	ldr	r3, [r7, #4]
 8002936:	2201      	movs	r2, #1
 8002938:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800293c:	687b      	ldr	r3, [r7, #4]
 800293e:	2201      	movs	r2, #1
 8002940:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002944:	687b      	ldr	r3, [r7, #4]
 8002946:	2201      	movs	r2, #1
 8002948:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800294c:	687b      	ldr	r3, [r7, #4]
 800294e:	2201      	movs	r2, #1
 8002950:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8002954:	687b      	ldr	r3, [r7, #4]
 8002956:	2201      	movs	r2, #1
 8002958:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800295c:	687b      	ldr	r3, [r7, #4]
 800295e:	2201      	movs	r2, #1
 8002960:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8002964:	687b      	ldr	r3, [r7, #4]
 8002966:	2201      	movs	r2, #1
 8002968:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800296c:	2300      	movs	r3, #0
 800296e:	4618      	mov	r0, r3
 8002970:	3708      	adds	r7, #8
 8002972:	46bd      	mov	sp, r7
 8002974:	bd80      	pop	{r7, pc}
	...

08002978 <HAL_TIM_Base_Start_IT>:
 8002978:	b480      	push	{r7}
 800297a:	b085      	sub	sp, #20
 800297c:	af00      	add	r7, sp, #0
 800297e:	6078      	str	r0, [r7, #4]
 8002980:	687b      	ldr	r3, [r7, #4]
 8002982:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8002986:	b2db      	uxtb	r3, r3
 8002988:	2b01      	cmp	r3, #1
 800298a:	d001      	beq.n	8002990 <HAL_TIM_Base_Start_IT+0x18>
 800298c:	2301      	movs	r3, #1
 800298e:	e03a      	b.n	8002a06 <HAL_TIM_Base_Start_IT+0x8e>
 8002990:	687b      	ldr	r3, [r7, #4]
 8002992:	2202      	movs	r2, #2
 8002994:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002998:	687b      	ldr	r3, [r7, #4]
 800299a:	681b      	ldr	r3, [r3, #0]
 800299c:	68da      	ldr	r2, [r3, #12]
 800299e:	687b      	ldr	r3, [r7, #4]
 80029a0:	681b      	ldr	r3, [r3, #0]
 80029a2:	f042 0201 	orr.w	r2, r2, #1
 80029a6:	60da      	str	r2, [r3, #12]
 80029a8:	687b      	ldr	r3, [r7, #4]
 80029aa:	681b      	ldr	r3, [r3, #0]
 80029ac:	4a18      	ldr	r2, [pc, #96]	@ (8002a10 <HAL_TIM_Base_Start_IT+0x98>)
 80029ae:	4293      	cmp	r3, r2
 80029b0:	d00e      	beq.n	80029d0 <HAL_TIM_Base_Start_IT+0x58>
 80029b2:	687b      	ldr	r3, [r7, #4]
 80029b4:	681b      	ldr	r3, [r3, #0]
 80029b6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80029ba:	d009      	beq.n	80029d0 <HAL_TIM_Base_Start_IT+0x58>
 80029bc:	687b      	ldr	r3, [r7, #4]
 80029be:	681b      	ldr	r3, [r3, #0]
 80029c0:	4a14      	ldr	r2, [pc, #80]	@ (8002a14 <HAL_TIM_Base_Start_IT+0x9c>)
 80029c2:	4293      	cmp	r3, r2
 80029c4:	d004      	beq.n	80029d0 <HAL_TIM_Base_Start_IT+0x58>
 80029c6:	687b      	ldr	r3, [r7, #4]
 80029c8:	681b      	ldr	r3, [r3, #0]
 80029ca:	4a13      	ldr	r2, [pc, #76]	@ (8002a18 <HAL_TIM_Base_Start_IT+0xa0>)
 80029cc:	4293      	cmp	r3, r2
 80029ce:	d111      	bne.n	80029f4 <HAL_TIM_Base_Start_IT+0x7c>
 80029d0:	687b      	ldr	r3, [r7, #4]
 80029d2:	681b      	ldr	r3, [r3, #0]
 80029d4:	689b      	ldr	r3, [r3, #8]
 80029d6:	f003 0307 	and.w	r3, r3, #7
 80029da:	60fb      	str	r3, [r7, #12]
 80029dc:	68fb      	ldr	r3, [r7, #12]
 80029de:	2b06      	cmp	r3, #6
 80029e0:	d010      	beq.n	8002a04 <HAL_TIM_Base_Start_IT+0x8c>
 80029e2:	687b      	ldr	r3, [r7, #4]
 80029e4:	681b      	ldr	r3, [r3, #0]
 80029e6:	681a      	ldr	r2, [r3, #0]
 80029e8:	687b      	ldr	r3, [r7, #4]
 80029ea:	681b      	ldr	r3, [r3, #0]
 80029ec:	f042 0201 	orr.w	r2, r2, #1
 80029f0:	601a      	str	r2, [r3, #0]
 80029f2:	e007      	b.n	8002a04 <HAL_TIM_Base_Start_IT+0x8c>
 80029f4:	687b      	ldr	r3, [r7, #4]
 80029f6:	681b      	ldr	r3, [r3, #0]
 80029f8:	681a      	ldr	r2, [r3, #0]
 80029fa:	687b      	ldr	r3, [r7, #4]
 80029fc:	681b      	ldr	r3, [r3, #0]
 80029fe:	f042 0201 	orr.w	r2, r2, #1
 8002a02:	601a      	str	r2, [r3, #0]
 8002a04:	2300      	movs	r3, #0
 8002a06:	4618      	mov	r0, r3
 8002a08:	3714      	adds	r7, #20
 8002a0a:	46bd      	mov	sp, r7
 8002a0c:	bc80      	pop	{r7}
 8002a0e:	4770      	bx	lr
 8002a10:	40012c00 	.word	0x40012c00
 8002a14:	40000400 	.word	0x40000400
 8002a18:	40000800 	.word	0x40000800

08002a1c <HAL_TIM_PWM_Init>:
 8002a1c:	b580      	push	{r7, lr}
 8002a1e:	b082      	sub	sp, #8
 8002a20:	af00      	add	r7, sp, #0
 8002a22:	6078      	str	r0, [r7, #4]
 8002a24:	687b      	ldr	r3, [r7, #4]
 8002a26:	2b00      	cmp	r3, #0
 8002a28:	d101      	bne.n	8002a2e <HAL_TIM_PWM_Init+0x12>
 8002a2a:	2301      	movs	r3, #1
 8002a2c:	e041      	b.n	8002ab2 <HAL_TIM_PWM_Init+0x96>
 8002a2e:	687b      	ldr	r3, [r7, #4]
 8002a30:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8002a34:	b2db      	uxtb	r3, r3
 8002a36:	2b00      	cmp	r3, #0
 8002a38:	d106      	bne.n	8002a48 <HAL_TIM_PWM_Init+0x2c>
 8002a3a:	687b      	ldr	r3, [r7, #4]
 8002a3c:	2200      	movs	r2, #0
 8002a3e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002a42:	6878      	ldr	r0, [r7, #4]
 8002a44:	f7fe fd02 	bl	800144c <HAL_TIM_PWM_MspInit>
 8002a48:	687b      	ldr	r3, [r7, #4]
 8002a4a:	2202      	movs	r2, #2
 8002a4c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002a50:	687b      	ldr	r3, [r7, #4]
 8002a52:	681a      	ldr	r2, [r3, #0]
 8002a54:	687b      	ldr	r3, [r7, #4]
 8002a56:	3304      	adds	r3, #4
 8002a58:	4619      	mov	r1, r3
 8002a5a:	4610      	mov	r0, r2
 8002a5c:	f000 fb6e 	bl	800313c <TIM_Base_SetConfig>
 8002a60:	687b      	ldr	r3, [r7, #4]
 8002a62:	2201      	movs	r2, #1
 8002a64:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8002a68:	687b      	ldr	r3, [r7, #4]
 8002a6a:	2201      	movs	r2, #1
 8002a6c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002a70:	687b      	ldr	r3, [r7, #4]
 8002a72:	2201      	movs	r2, #1
 8002a74:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8002a78:	687b      	ldr	r3, [r7, #4]
 8002a7a:	2201      	movs	r2, #1
 8002a7c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002a80:	687b      	ldr	r3, [r7, #4]
 8002a82:	2201      	movs	r2, #1
 8002a84:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002a88:	687b      	ldr	r3, [r7, #4]
 8002a8a:	2201      	movs	r2, #1
 8002a8c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002a90:	687b      	ldr	r3, [r7, #4]
 8002a92:	2201      	movs	r2, #1
 8002a94:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8002a98:	687b      	ldr	r3, [r7, #4]
 8002a9a:	2201      	movs	r2, #1
 8002a9c:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8002aa0:	687b      	ldr	r3, [r7, #4]
 8002aa2:	2201      	movs	r2, #1
 8002aa4:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8002aa8:	687b      	ldr	r3, [r7, #4]
 8002aaa:	2201      	movs	r2, #1
 8002aac:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002ab0:	2300      	movs	r3, #0
 8002ab2:	4618      	mov	r0, r3
 8002ab4:	3708      	adds	r7, #8
 8002ab6:	46bd      	mov	sp, r7
 8002ab8:	bd80      	pop	{r7, pc}
	...

08002abc <HAL_TIM_PWM_Start>:
 8002abc:	b580      	push	{r7, lr}
 8002abe:	b084      	sub	sp, #16
 8002ac0:	af00      	add	r7, sp, #0
 8002ac2:	6078      	str	r0, [r7, #4]
 8002ac4:	6039      	str	r1, [r7, #0]
 8002ac6:	683b      	ldr	r3, [r7, #0]
 8002ac8:	2b00      	cmp	r3, #0
 8002aca:	d109      	bne.n	8002ae0 <HAL_TIM_PWM_Start+0x24>
 8002acc:	687b      	ldr	r3, [r7, #4]
 8002ace:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8002ad2:	b2db      	uxtb	r3, r3
 8002ad4:	2b01      	cmp	r3, #1
 8002ad6:	bf14      	ite	ne
 8002ad8:	2301      	movne	r3, #1
 8002ada:	2300      	moveq	r3, #0
 8002adc:	b2db      	uxtb	r3, r3
 8002ade:	e022      	b.n	8002b26 <HAL_TIM_PWM_Start+0x6a>
 8002ae0:	683b      	ldr	r3, [r7, #0]
 8002ae2:	2b04      	cmp	r3, #4
 8002ae4:	d109      	bne.n	8002afa <HAL_TIM_PWM_Start+0x3e>
 8002ae6:	687b      	ldr	r3, [r7, #4]
 8002ae8:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8002aec:	b2db      	uxtb	r3, r3
 8002aee:	2b01      	cmp	r3, #1
 8002af0:	bf14      	ite	ne
 8002af2:	2301      	movne	r3, #1
 8002af4:	2300      	moveq	r3, #0
 8002af6:	b2db      	uxtb	r3, r3
 8002af8:	e015      	b.n	8002b26 <HAL_TIM_PWM_Start+0x6a>
 8002afa:	683b      	ldr	r3, [r7, #0]
 8002afc:	2b08      	cmp	r3, #8
 8002afe:	d109      	bne.n	8002b14 <HAL_TIM_PWM_Start+0x58>
 8002b00:	687b      	ldr	r3, [r7, #4]
 8002b02:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8002b06:	b2db      	uxtb	r3, r3
 8002b08:	2b01      	cmp	r3, #1
 8002b0a:	bf14      	ite	ne
 8002b0c:	2301      	movne	r3, #1
 8002b0e:	2300      	moveq	r3, #0
 8002b10:	b2db      	uxtb	r3, r3
 8002b12:	e008      	b.n	8002b26 <HAL_TIM_PWM_Start+0x6a>
 8002b14:	687b      	ldr	r3, [r7, #4]
 8002b16:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8002b1a:	b2db      	uxtb	r3, r3
 8002b1c:	2b01      	cmp	r3, #1
 8002b1e:	bf14      	ite	ne
 8002b20:	2301      	movne	r3, #1
 8002b22:	2300      	moveq	r3, #0
 8002b24:	b2db      	uxtb	r3, r3
 8002b26:	2b00      	cmp	r3, #0
 8002b28:	d001      	beq.n	8002b2e <HAL_TIM_PWM_Start+0x72>
 8002b2a:	2301      	movs	r3, #1
 8002b2c:	e05e      	b.n	8002bec <HAL_TIM_PWM_Start+0x130>
 8002b2e:	683b      	ldr	r3, [r7, #0]
 8002b30:	2b00      	cmp	r3, #0
 8002b32:	d104      	bne.n	8002b3e <HAL_TIM_PWM_Start+0x82>
 8002b34:	687b      	ldr	r3, [r7, #4]
 8002b36:	2202      	movs	r2, #2
 8002b38:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002b3c:	e013      	b.n	8002b66 <HAL_TIM_PWM_Start+0xaa>
 8002b3e:	683b      	ldr	r3, [r7, #0]
 8002b40:	2b04      	cmp	r3, #4
 8002b42:	d104      	bne.n	8002b4e <HAL_TIM_PWM_Start+0x92>
 8002b44:	687b      	ldr	r3, [r7, #4]
 8002b46:	2202      	movs	r2, #2
 8002b48:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8002b4c:	e00b      	b.n	8002b66 <HAL_TIM_PWM_Start+0xaa>
 8002b4e:	683b      	ldr	r3, [r7, #0]
 8002b50:	2b08      	cmp	r3, #8
 8002b52:	d104      	bne.n	8002b5e <HAL_TIM_PWM_Start+0xa2>
 8002b54:	687b      	ldr	r3, [r7, #4]
 8002b56:	2202      	movs	r2, #2
 8002b58:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002b5c:	e003      	b.n	8002b66 <HAL_TIM_PWM_Start+0xaa>
 8002b5e:	687b      	ldr	r3, [r7, #4]
 8002b60:	2202      	movs	r2, #2
 8002b62:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002b66:	687b      	ldr	r3, [r7, #4]
 8002b68:	681b      	ldr	r3, [r3, #0]
 8002b6a:	2201      	movs	r2, #1
 8002b6c:	6839      	ldr	r1, [r7, #0]
 8002b6e:	4618      	mov	r0, r3
 8002b70:	f000 fd70 	bl	8003654 <TIM_CCxChannelCmd>
 8002b74:	687b      	ldr	r3, [r7, #4]
 8002b76:	681b      	ldr	r3, [r3, #0]
 8002b78:	4a1e      	ldr	r2, [pc, #120]	@ (8002bf4 <HAL_TIM_PWM_Start+0x138>)
 8002b7a:	4293      	cmp	r3, r2
 8002b7c:	d107      	bne.n	8002b8e <HAL_TIM_PWM_Start+0xd2>
 8002b7e:	687b      	ldr	r3, [r7, #4]
 8002b80:	681b      	ldr	r3, [r3, #0]
 8002b82:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002b84:	687b      	ldr	r3, [r7, #4]
 8002b86:	681b      	ldr	r3, [r3, #0]
 8002b88:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8002b8c:	645a      	str	r2, [r3, #68]	@ 0x44
 8002b8e:	687b      	ldr	r3, [r7, #4]
 8002b90:	681b      	ldr	r3, [r3, #0]
 8002b92:	4a18      	ldr	r2, [pc, #96]	@ (8002bf4 <HAL_TIM_PWM_Start+0x138>)
 8002b94:	4293      	cmp	r3, r2
 8002b96:	d00e      	beq.n	8002bb6 <HAL_TIM_PWM_Start+0xfa>
 8002b98:	687b      	ldr	r3, [r7, #4]
 8002b9a:	681b      	ldr	r3, [r3, #0]
 8002b9c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002ba0:	d009      	beq.n	8002bb6 <HAL_TIM_PWM_Start+0xfa>
 8002ba2:	687b      	ldr	r3, [r7, #4]
 8002ba4:	681b      	ldr	r3, [r3, #0]
 8002ba6:	4a14      	ldr	r2, [pc, #80]	@ (8002bf8 <HAL_TIM_PWM_Start+0x13c>)
 8002ba8:	4293      	cmp	r3, r2
 8002baa:	d004      	beq.n	8002bb6 <HAL_TIM_PWM_Start+0xfa>
 8002bac:	687b      	ldr	r3, [r7, #4]
 8002bae:	681b      	ldr	r3, [r3, #0]
 8002bb0:	4a12      	ldr	r2, [pc, #72]	@ (8002bfc <HAL_TIM_PWM_Start+0x140>)
 8002bb2:	4293      	cmp	r3, r2
 8002bb4:	d111      	bne.n	8002bda <HAL_TIM_PWM_Start+0x11e>
 8002bb6:	687b      	ldr	r3, [r7, #4]
 8002bb8:	681b      	ldr	r3, [r3, #0]
 8002bba:	689b      	ldr	r3, [r3, #8]
 8002bbc:	f003 0307 	and.w	r3, r3, #7
 8002bc0:	60fb      	str	r3, [r7, #12]
 8002bc2:	68fb      	ldr	r3, [r7, #12]
 8002bc4:	2b06      	cmp	r3, #6
 8002bc6:	d010      	beq.n	8002bea <HAL_TIM_PWM_Start+0x12e>
 8002bc8:	687b      	ldr	r3, [r7, #4]
 8002bca:	681b      	ldr	r3, [r3, #0]
 8002bcc:	681a      	ldr	r2, [r3, #0]
 8002bce:	687b      	ldr	r3, [r7, #4]
 8002bd0:	681b      	ldr	r3, [r3, #0]
 8002bd2:	f042 0201 	orr.w	r2, r2, #1
 8002bd6:	601a      	str	r2, [r3, #0]
 8002bd8:	e007      	b.n	8002bea <HAL_TIM_PWM_Start+0x12e>
 8002bda:	687b      	ldr	r3, [r7, #4]
 8002bdc:	681b      	ldr	r3, [r3, #0]
 8002bde:	681a      	ldr	r2, [r3, #0]
 8002be0:	687b      	ldr	r3, [r7, #4]
 8002be2:	681b      	ldr	r3, [r3, #0]
 8002be4:	f042 0201 	orr.w	r2, r2, #1
 8002be8:	601a      	str	r2, [r3, #0]
 8002bea:	2300      	movs	r3, #0
 8002bec:	4618      	mov	r0, r3
 8002bee:	3710      	adds	r7, #16
 8002bf0:	46bd      	mov	sp, r7
 8002bf2:	bd80      	pop	{r7, pc}
 8002bf4:	40012c00 	.word	0x40012c00
 8002bf8:	40000400 	.word	0x40000400
 8002bfc:	40000800 	.word	0x40000800

08002c00 <HAL_TIM_IRQHandler>:
 8002c00:	b580      	push	{r7, lr}
 8002c02:	b084      	sub	sp, #16
 8002c04:	af00      	add	r7, sp, #0
 8002c06:	6078      	str	r0, [r7, #4]
 8002c08:	687b      	ldr	r3, [r7, #4]
 8002c0a:	681b      	ldr	r3, [r3, #0]
 8002c0c:	68db      	ldr	r3, [r3, #12]
 8002c0e:	60fb      	str	r3, [r7, #12]
 8002c10:	687b      	ldr	r3, [r7, #4]
 8002c12:	681b      	ldr	r3, [r3, #0]
 8002c14:	691b      	ldr	r3, [r3, #16]
 8002c16:	60bb      	str	r3, [r7, #8]
 8002c18:	68bb      	ldr	r3, [r7, #8]
 8002c1a:	f003 0302 	and.w	r3, r3, #2
 8002c1e:	2b00      	cmp	r3, #0
 8002c20:	d020      	beq.n	8002c64 <HAL_TIM_IRQHandler+0x64>
 8002c22:	68fb      	ldr	r3, [r7, #12]
 8002c24:	f003 0302 	and.w	r3, r3, #2
 8002c28:	2b00      	cmp	r3, #0
 8002c2a:	d01b      	beq.n	8002c64 <HAL_TIM_IRQHandler+0x64>
 8002c2c:	687b      	ldr	r3, [r7, #4]
 8002c2e:	681b      	ldr	r3, [r3, #0]
 8002c30:	f06f 0202 	mvn.w	r2, #2
 8002c34:	611a      	str	r2, [r3, #16]
 8002c36:	687b      	ldr	r3, [r7, #4]
 8002c38:	2201      	movs	r2, #1
 8002c3a:	771a      	strb	r2, [r3, #28]
 8002c3c:	687b      	ldr	r3, [r7, #4]
 8002c3e:	681b      	ldr	r3, [r3, #0]
 8002c40:	699b      	ldr	r3, [r3, #24]
 8002c42:	f003 0303 	and.w	r3, r3, #3
 8002c46:	2b00      	cmp	r3, #0
 8002c48:	d003      	beq.n	8002c52 <HAL_TIM_IRQHandler+0x52>
 8002c4a:	6878      	ldr	r0, [r7, #4]
 8002c4c:	f000 fa5a 	bl	8003104 <HAL_TIM_IC_CaptureCallback>
 8002c50:	e005      	b.n	8002c5e <HAL_TIM_IRQHandler+0x5e>
 8002c52:	6878      	ldr	r0, [r7, #4]
 8002c54:	f000 fa4d 	bl	80030f2 <HAL_TIM_OC_DelayElapsedCallback>
 8002c58:	6878      	ldr	r0, [r7, #4]
 8002c5a:	f000 fa5c 	bl	8003116 <HAL_TIM_PWM_PulseFinishedCallback>
 8002c5e:	687b      	ldr	r3, [r7, #4]
 8002c60:	2200      	movs	r2, #0
 8002c62:	771a      	strb	r2, [r3, #28]
 8002c64:	68bb      	ldr	r3, [r7, #8]
 8002c66:	f003 0304 	and.w	r3, r3, #4
 8002c6a:	2b00      	cmp	r3, #0
 8002c6c:	d020      	beq.n	8002cb0 <HAL_TIM_IRQHandler+0xb0>
 8002c6e:	68fb      	ldr	r3, [r7, #12]
 8002c70:	f003 0304 	and.w	r3, r3, #4
 8002c74:	2b00      	cmp	r3, #0
 8002c76:	d01b      	beq.n	8002cb0 <HAL_TIM_IRQHandler+0xb0>
 8002c78:	687b      	ldr	r3, [r7, #4]
 8002c7a:	681b      	ldr	r3, [r3, #0]
 8002c7c:	f06f 0204 	mvn.w	r2, #4
 8002c80:	611a      	str	r2, [r3, #16]
 8002c82:	687b      	ldr	r3, [r7, #4]
 8002c84:	2202      	movs	r2, #2
 8002c86:	771a      	strb	r2, [r3, #28]
 8002c88:	687b      	ldr	r3, [r7, #4]
 8002c8a:	681b      	ldr	r3, [r3, #0]
 8002c8c:	699b      	ldr	r3, [r3, #24]
 8002c8e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8002c92:	2b00      	cmp	r3, #0
 8002c94:	d003      	beq.n	8002c9e <HAL_TIM_IRQHandler+0x9e>
 8002c96:	6878      	ldr	r0, [r7, #4]
 8002c98:	f000 fa34 	bl	8003104 <HAL_TIM_IC_CaptureCallback>
 8002c9c:	e005      	b.n	8002caa <HAL_TIM_IRQHandler+0xaa>
 8002c9e:	6878      	ldr	r0, [r7, #4]
 8002ca0:	f000 fa27 	bl	80030f2 <HAL_TIM_OC_DelayElapsedCallback>
 8002ca4:	6878      	ldr	r0, [r7, #4]
 8002ca6:	f000 fa36 	bl	8003116 <HAL_TIM_PWM_PulseFinishedCallback>
 8002caa:	687b      	ldr	r3, [r7, #4]
 8002cac:	2200      	movs	r2, #0
 8002cae:	771a      	strb	r2, [r3, #28]
 8002cb0:	68bb      	ldr	r3, [r7, #8]
 8002cb2:	f003 0308 	and.w	r3, r3, #8
 8002cb6:	2b00      	cmp	r3, #0
 8002cb8:	d020      	beq.n	8002cfc <HAL_TIM_IRQHandler+0xfc>
 8002cba:	68fb      	ldr	r3, [r7, #12]
 8002cbc:	f003 0308 	and.w	r3, r3, #8
 8002cc0:	2b00      	cmp	r3, #0
 8002cc2:	d01b      	beq.n	8002cfc <HAL_TIM_IRQHandler+0xfc>
 8002cc4:	687b      	ldr	r3, [r7, #4]
 8002cc6:	681b      	ldr	r3, [r3, #0]
 8002cc8:	f06f 0208 	mvn.w	r2, #8
 8002ccc:	611a      	str	r2, [r3, #16]
 8002cce:	687b      	ldr	r3, [r7, #4]
 8002cd0:	2204      	movs	r2, #4
 8002cd2:	771a      	strb	r2, [r3, #28]
 8002cd4:	687b      	ldr	r3, [r7, #4]
 8002cd6:	681b      	ldr	r3, [r3, #0]
 8002cd8:	69db      	ldr	r3, [r3, #28]
 8002cda:	f003 0303 	and.w	r3, r3, #3
 8002cde:	2b00      	cmp	r3, #0
 8002ce0:	d003      	beq.n	8002cea <HAL_TIM_IRQHandler+0xea>
 8002ce2:	6878      	ldr	r0, [r7, #4]
 8002ce4:	f000 fa0e 	bl	8003104 <HAL_TIM_IC_CaptureCallback>
 8002ce8:	e005      	b.n	8002cf6 <HAL_TIM_IRQHandler+0xf6>
 8002cea:	6878      	ldr	r0, [r7, #4]
 8002cec:	f000 fa01 	bl	80030f2 <HAL_TIM_OC_DelayElapsedCallback>
 8002cf0:	6878      	ldr	r0, [r7, #4]
 8002cf2:	f000 fa10 	bl	8003116 <HAL_TIM_PWM_PulseFinishedCallback>
 8002cf6:	687b      	ldr	r3, [r7, #4]
 8002cf8:	2200      	movs	r2, #0
 8002cfa:	771a      	strb	r2, [r3, #28]
 8002cfc:	68bb      	ldr	r3, [r7, #8]
 8002cfe:	f003 0310 	and.w	r3, r3, #16
 8002d02:	2b00      	cmp	r3, #0
 8002d04:	d020      	beq.n	8002d48 <HAL_TIM_IRQHandler+0x148>
 8002d06:	68fb      	ldr	r3, [r7, #12]
 8002d08:	f003 0310 	and.w	r3, r3, #16
 8002d0c:	2b00      	cmp	r3, #0
 8002d0e:	d01b      	beq.n	8002d48 <HAL_TIM_IRQHandler+0x148>
 8002d10:	687b      	ldr	r3, [r7, #4]
 8002d12:	681b      	ldr	r3, [r3, #0]
 8002d14:	f06f 0210 	mvn.w	r2, #16
 8002d18:	611a      	str	r2, [r3, #16]
 8002d1a:	687b      	ldr	r3, [r7, #4]
 8002d1c:	2208      	movs	r2, #8
 8002d1e:	771a      	strb	r2, [r3, #28]
 8002d20:	687b      	ldr	r3, [r7, #4]
 8002d22:	681b      	ldr	r3, [r3, #0]
 8002d24:	69db      	ldr	r3, [r3, #28]
 8002d26:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8002d2a:	2b00      	cmp	r3, #0
 8002d2c:	d003      	beq.n	8002d36 <HAL_TIM_IRQHandler+0x136>
 8002d2e:	6878      	ldr	r0, [r7, #4]
 8002d30:	f000 f9e8 	bl	8003104 <HAL_TIM_IC_CaptureCallback>
 8002d34:	e005      	b.n	8002d42 <HAL_TIM_IRQHandler+0x142>
 8002d36:	6878      	ldr	r0, [r7, #4]
 8002d38:	f000 f9db 	bl	80030f2 <HAL_TIM_OC_DelayElapsedCallback>
 8002d3c:	6878      	ldr	r0, [r7, #4]
 8002d3e:	f000 f9ea 	bl	8003116 <HAL_TIM_PWM_PulseFinishedCallback>
 8002d42:	687b      	ldr	r3, [r7, #4]
 8002d44:	2200      	movs	r2, #0
 8002d46:	771a      	strb	r2, [r3, #28]
 8002d48:	68bb      	ldr	r3, [r7, #8]
 8002d4a:	f003 0301 	and.w	r3, r3, #1
 8002d4e:	2b00      	cmp	r3, #0
 8002d50:	d00c      	beq.n	8002d6c <HAL_TIM_IRQHandler+0x16c>
 8002d52:	68fb      	ldr	r3, [r7, #12]
 8002d54:	f003 0301 	and.w	r3, r3, #1
 8002d58:	2b00      	cmp	r3, #0
 8002d5a:	d007      	beq.n	8002d6c <HAL_TIM_IRQHandler+0x16c>
 8002d5c:	687b      	ldr	r3, [r7, #4]
 8002d5e:	681b      	ldr	r3, [r3, #0]
 8002d60:	f06f 0201 	mvn.w	r2, #1
 8002d64:	611a      	str	r2, [r3, #16]
 8002d66:	6878      	ldr	r0, [r7, #4]
 8002d68:	f7fe f920 	bl	8000fac <HAL_TIM_PeriodElapsedCallback>
 8002d6c:	68bb      	ldr	r3, [r7, #8]
 8002d6e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002d72:	2b00      	cmp	r3, #0
 8002d74:	d00c      	beq.n	8002d90 <HAL_TIM_IRQHandler+0x190>
 8002d76:	68fb      	ldr	r3, [r7, #12]
 8002d78:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002d7c:	2b00      	cmp	r3, #0
 8002d7e:	d007      	beq.n	8002d90 <HAL_TIM_IRQHandler+0x190>
 8002d80:	687b      	ldr	r3, [r7, #4]
 8002d82:	681b      	ldr	r3, [r3, #0]
 8002d84:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8002d88:	611a      	str	r2, [r3, #16]
 8002d8a:	6878      	ldr	r0, [r7, #4]
 8002d8c:	f000 fd3e 	bl	800380c <HAL_TIMEx_BreakCallback>
 8002d90:	68bb      	ldr	r3, [r7, #8]
 8002d92:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002d96:	2b00      	cmp	r3, #0
 8002d98:	d00c      	beq.n	8002db4 <HAL_TIM_IRQHandler+0x1b4>
 8002d9a:	68fb      	ldr	r3, [r7, #12]
 8002d9c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002da0:	2b00      	cmp	r3, #0
 8002da2:	d007      	beq.n	8002db4 <HAL_TIM_IRQHandler+0x1b4>
 8002da4:	687b      	ldr	r3, [r7, #4]
 8002da6:	681b      	ldr	r3, [r3, #0]
 8002da8:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8002dac:	611a      	str	r2, [r3, #16]
 8002dae:	6878      	ldr	r0, [r7, #4]
 8002db0:	f000 f9ba 	bl	8003128 <HAL_TIM_TriggerCallback>
 8002db4:	68bb      	ldr	r3, [r7, #8]
 8002db6:	f003 0320 	and.w	r3, r3, #32
 8002dba:	2b00      	cmp	r3, #0
 8002dbc:	d00c      	beq.n	8002dd8 <HAL_TIM_IRQHandler+0x1d8>
 8002dbe:	68fb      	ldr	r3, [r7, #12]
 8002dc0:	f003 0320 	and.w	r3, r3, #32
 8002dc4:	2b00      	cmp	r3, #0
 8002dc6:	d007      	beq.n	8002dd8 <HAL_TIM_IRQHandler+0x1d8>
 8002dc8:	687b      	ldr	r3, [r7, #4]
 8002dca:	681b      	ldr	r3, [r3, #0]
 8002dcc:	f06f 0220 	mvn.w	r2, #32
 8002dd0:	611a      	str	r2, [r3, #16]
 8002dd2:	6878      	ldr	r0, [r7, #4]
 8002dd4:	f000 fd11 	bl	80037fa <HAL_TIMEx_CommutCallback>
 8002dd8:	bf00      	nop
 8002dda:	3710      	adds	r7, #16
 8002ddc:	46bd      	mov	sp, r7
 8002dde:	bd80      	pop	{r7, pc}

08002de0 <HAL_TIM_PWM_ConfigChannel>:
 8002de0:	b580      	push	{r7, lr}
 8002de2:	b086      	sub	sp, #24
 8002de4:	af00      	add	r7, sp, #0
 8002de6:	60f8      	str	r0, [r7, #12]
 8002de8:	60b9      	str	r1, [r7, #8]
 8002dea:	607a      	str	r2, [r7, #4]
 8002dec:	2300      	movs	r3, #0
 8002dee:	75fb      	strb	r3, [r7, #23]
 8002df0:	68fb      	ldr	r3, [r7, #12]
 8002df2:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002df6:	2b01      	cmp	r3, #1
 8002df8:	d101      	bne.n	8002dfe <HAL_TIM_PWM_ConfigChannel+0x1e>
 8002dfa:	2302      	movs	r3, #2
 8002dfc:	e0ae      	b.n	8002f5c <HAL_TIM_PWM_ConfigChannel+0x17c>
 8002dfe:	68fb      	ldr	r3, [r7, #12]
 8002e00:	2201      	movs	r2, #1
 8002e02:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002e06:	687b      	ldr	r3, [r7, #4]
 8002e08:	2b0c      	cmp	r3, #12
 8002e0a:	f200 809f 	bhi.w	8002f4c <HAL_TIM_PWM_ConfigChannel+0x16c>
 8002e0e:	a201      	add	r2, pc, #4	@ (adr r2, 8002e14 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8002e10:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002e14:	08002e49 	.word	0x08002e49
 8002e18:	08002f4d 	.word	0x08002f4d
 8002e1c:	08002f4d 	.word	0x08002f4d
 8002e20:	08002f4d 	.word	0x08002f4d
 8002e24:	08002e89 	.word	0x08002e89
 8002e28:	08002f4d 	.word	0x08002f4d
 8002e2c:	08002f4d 	.word	0x08002f4d
 8002e30:	08002f4d 	.word	0x08002f4d
 8002e34:	08002ecb 	.word	0x08002ecb
 8002e38:	08002f4d 	.word	0x08002f4d
 8002e3c:	08002f4d 	.word	0x08002f4d
 8002e40:	08002f4d 	.word	0x08002f4d
 8002e44:	08002f0b 	.word	0x08002f0b
 8002e48:	68fb      	ldr	r3, [r7, #12]
 8002e4a:	681b      	ldr	r3, [r3, #0]
 8002e4c:	68b9      	ldr	r1, [r7, #8]
 8002e4e:	4618      	mov	r0, r3
 8002e50:	f000 f9e2 	bl	8003218 <TIM_OC1_SetConfig>
 8002e54:	68fb      	ldr	r3, [r7, #12]
 8002e56:	681b      	ldr	r3, [r3, #0]
 8002e58:	699a      	ldr	r2, [r3, #24]
 8002e5a:	68fb      	ldr	r3, [r7, #12]
 8002e5c:	681b      	ldr	r3, [r3, #0]
 8002e5e:	f042 0208 	orr.w	r2, r2, #8
 8002e62:	619a      	str	r2, [r3, #24]
 8002e64:	68fb      	ldr	r3, [r7, #12]
 8002e66:	681b      	ldr	r3, [r3, #0]
 8002e68:	699a      	ldr	r2, [r3, #24]
 8002e6a:	68fb      	ldr	r3, [r7, #12]
 8002e6c:	681b      	ldr	r3, [r3, #0]
 8002e6e:	f022 0204 	bic.w	r2, r2, #4
 8002e72:	619a      	str	r2, [r3, #24]
 8002e74:	68fb      	ldr	r3, [r7, #12]
 8002e76:	681b      	ldr	r3, [r3, #0]
 8002e78:	6999      	ldr	r1, [r3, #24]
 8002e7a:	68bb      	ldr	r3, [r7, #8]
 8002e7c:	691a      	ldr	r2, [r3, #16]
 8002e7e:	68fb      	ldr	r3, [r7, #12]
 8002e80:	681b      	ldr	r3, [r3, #0]
 8002e82:	430a      	orrs	r2, r1
 8002e84:	619a      	str	r2, [r3, #24]
 8002e86:	e064      	b.n	8002f52 <HAL_TIM_PWM_ConfigChannel+0x172>
 8002e88:	68fb      	ldr	r3, [r7, #12]
 8002e8a:	681b      	ldr	r3, [r3, #0]
 8002e8c:	68b9      	ldr	r1, [r7, #8]
 8002e8e:	4618      	mov	r0, r3
 8002e90:	f000 fa28 	bl	80032e4 <TIM_OC2_SetConfig>
 8002e94:	68fb      	ldr	r3, [r7, #12]
 8002e96:	681b      	ldr	r3, [r3, #0]
 8002e98:	699a      	ldr	r2, [r3, #24]
 8002e9a:	68fb      	ldr	r3, [r7, #12]
 8002e9c:	681b      	ldr	r3, [r3, #0]
 8002e9e:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8002ea2:	619a      	str	r2, [r3, #24]
 8002ea4:	68fb      	ldr	r3, [r7, #12]
 8002ea6:	681b      	ldr	r3, [r3, #0]
 8002ea8:	699a      	ldr	r2, [r3, #24]
 8002eaa:	68fb      	ldr	r3, [r7, #12]
 8002eac:	681b      	ldr	r3, [r3, #0]
 8002eae:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8002eb2:	619a      	str	r2, [r3, #24]
 8002eb4:	68fb      	ldr	r3, [r7, #12]
 8002eb6:	681b      	ldr	r3, [r3, #0]
 8002eb8:	6999      	ldr	r1, [r3, #24]
 8002eba:	68bb      	ldr	r3, [r7, #8]
 8002ebc:	691b      	ldr	r3, [r3, #16]
 8002ebe:	021a      	lsls	r2, r3, #8
 8002ec0:	68fb      	ldr	r3, [r7, #12]
 8002ec2:	681b      	ldr	r3, [r3, #0]
 8002ec4:	430a      	orrs	r2, r1
 8002ec6:	619a      	str	r2, [r3, #24]
 8002ec8:	e043      	b.n	8002f52 <HAL_TIM_PWM_ConfigChannel+0x172>
 8002eca:	68fb      	ldr	r3, [r7, #12]
 8002ecc:	681b      	ldr	r3, [r3, #0]
 8002ece:	68b9      	ldr	r1, [r7, #8]
 8002ed0:	4618      	mov	r0, r3
 8002ed2:	f000 fa71 	bl	80033b8 <TIM_OC3_SetConfig>
 8002ed6:	68fb      	ldr	r3, [r7, #12]
 8002ed8:	681b      	ldr	r3, [r3, #0]
 8002eda:	69da      	ldr	r2, [r3, #28]
 8002edc:	68fb      	ldr	r3, [r7, #12]
 8002ede:	681b      	ldr	r3, [r3, #0]
 8002ee0:	f042 0208 	orr.w	r2, r2, #8
 8002ee4:	61da      	str	r2, [r3, #28]
 8002ee6:	68fb      	ldr	r3, [r7, #12]
 8002ee8:	681b      	ldr	r3, [r3, #0]
 8002eea:	69da      	ldr	r2, [r3, #28]
 8002eec:	68fb      	ldr	r3, [r7, #12]
 8002eee:	681b      	ldr	r3, [r3, #0]
 8002ef0:	f022 0204 	bic.w	r2, r2, #4
 8002ef4:	61da      	str	r2, [r3, #28]
 8002ef6:	68fb      	ldr	r3, [r7, #12]
 8002ef8:	681b      	ldr	r3, [r3, #0]
 8002efa:	69d9      	ldr	r1, [r3, #28]
 8002efc:	68bb      	ldr	r3, [r7, #8]
 8002efe:	691a      	ldr	r2, [r3, #16]
 8002f00:	68fb      	ldr	r3, [r7, #12]
 8002f02:	681b      	ldr	r3, [r3, #0]
 8002f04:	430a      	orrs	r2, r1
 8002f06:	61da      	str	r2, [r3, #28]
 8002f08:	e023      	b.n	8002f52 <HAL_TIM_PWM_ConfigChannel+0x172>
 8002f0a:	68fb      	ldr	r3, [r7, #12]
 8002f0c:	681b      	ldr	r3, [r3, #0]
 8002f0e:	68b9      	ldr	r1, [r7, #8]
 8002f10:	4618      	mov	r0, r3
 8002f12:	f000 fabb 	bl	800348c <TIM_OC4_SetConfig>
 8002f16:	68fb      	ldr	r3, [r7, #12]
 8002f18:	681b      	ldr	r3, [r3, #0]
 8002f1a:	69da      	ldr	r2, [r3, #28]
 8002f1c:	68fb      	ldr	r3, [r7, #12]
 8002f1e:	681b      	ldr	r3, [r3, #0]
 8002f20:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8002f24:	61da      	str	r2, [r3, #28]
 8002f26:	68fb      	ldr	r3, [r7, #12]
 8002f28:	681b      	ldr	r3, [r3, #0]
 8002f2a:	69da      	ldr	r2, [r3, #28]
 8002f2c:	68fb      	ldr	r3, [r7, #12]
 8002f2e:	681b      	ldr	r3, [r3, #0]
 8002f30:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8002f34:	61da      	str	r2, [r3, #28]
 8002f36:	68fb      	ldr	r3, [r7, #12]
 8002f38:	681b      	ldr	r3, [r3, #0]
 8002f3a:	69d9      	ldr	r1, [r3, #28]
 8002f3c:	68bb      	ldr	r3, [r7, #8]
 8002f3e:	691b      	ldr	r3, [r3, #16]
 8002f40:	021a      	lsls	r2, r3, #8
 8002f42:	68fb      	ldr	r3, [r7, #12]
 8002f44:	681b      	ldr	r3, [r3, #0]
 8002f46:	430a      	orrs	r2, r1
 8002f48:	61da      	str	r2, [r3, #28]
 8002f4a:	e002      	b.n	8002f52 <HAL_TIM_PWM_ConfigChannel+0x172>
 8002f4c:	2301      	movs	r3, #1
 8002f4e:	75fb      	strb	r3, [r7, #23]
 8002f50:	bf00      	nop
 8002f52:	68fb      	ldr	r3, [r7, #12]
 8002f54:	2200      	movs	r2, #0
 8002f56:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002f5a:	7dfb      	ldrb	r3, [r7, #23]
 8002f5c:	4618      	mov	r0, r3
 8002f5e:	3718      	adds	r7, #24
 8002f60:	46bd      	mov	sp, r7
 8002f62:	bd80      	pop	{r7, pc}

08002f64 <HAL_TIM_ConfigClockSource>:
 8002f64:	b580      	push	{r7, lr}
 8002f66:	b084      	sub	sp, #16
 8002f68:	af00      	add	r7, sp, #0
 8002f6a:	6078      	str	r0, [r7, #4]
 8002f6c:	6039      	str	r1, [r7, #0]
 8002f6e:	2300      	movs	r3, #0
 8002f70:	73fb      	strb	r3, [r7, #15]
 8002f72:	687b      	ldr	r3, [r7, #4]
 8002f74:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002f78:	2b01      	cmp	r3, #1
 8002f7a:	d101      	bne.n	8002f80 <HAL_TIM_ConfigClockSource+0x1c>
 8002f7c:	2302      	movs	r3, #2
 8002f7e:	e0b4      	b.n	80030ea <HAL_TIM_ConfigClockSource+0x186>
 8002f80:	687b      	ldr	r3, [r7, #4]
 8002f82:	2201      	movs	r2, #1
 8002f84:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002f88:	687b      	ldr	r3, [r7, #4]
 8002f8a:	2202      	movs	r2, #2
 8002f8c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002f90:	687b      	ldr	r3, [r7, #4]
 8002f92:	681b      	ldr	r3, [r3, #0]
 8002f94:	689b      	ldr	r3, [r3, #8]
 8002f96:	60bb      	str	r3, [r7, #8]
 8002f98:	68bb      	ldr	r3, [r7, #8]
 8002f9a:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8002f9e:	60bb      	str	r3, [r7, #8]
 8002fa0:	68bb      	ldr	r3, [r7, #8]
 8002fa2:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8002fa6:	60bb      	str	r3, [r7, #8]
 8002fa8:	687b      	ldr	r3, [r7, #4]
 8002faa:	681b      	ldr	r3, [r3, #0]
 8002fac:	68ba      	ldr	r2, [r7, #8]
 8002fae:	609a      	str	r2, [r3, #8]
 8002fb0:	683b      	ldr	r3, [r7, #0]
 8002fb2:	681b      	ldr	r3, [r3, #0]
 8002fb4:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8002fb8:	d03e      	beq.n	8003038 <HAL_TIM_ConfigClockSource+0xd4>
 8002fba:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8002fbe:	f200 8087 	bhi.w	80030d0 <HAL_TIM_ConfigClockSource+0x16c>
 8002fc2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002fc6:	f000 8086 	beq.w	80030d6 <HAL_TIM_ConfigClockSource+0x172>
 8002fca:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002fce:	d87f      	bhi.n	80030d0 <HAL_TIM_ConfigClockSource+0x16c>
 8002fd0:	2b70      	cmp	r3, #112	@ 0x70
 8002fd2:	d01a      	beq.n	800300a <HAL_TIM_ConfigClockSource+0xa6>
 8002fd4:	2b70      	cmp	r3, #112	@ 0x70
 8002fd6:	d87b      	bhi.n	80030d0 <HAL_TIM_ConfigClockSource+0x16c>
 8002fd8:	2b60      	cmp	r3, #96	@ 0x60
 8002fda:	d050      	beq.n	800307e <HAL_TIM_ConfigClockSource+0x11a>
 8002fdc:	2b60      	cmp	r3, #96	@ 0x60
 8002fde:	d877      	bhi.n	80030d0 <HAL_TIM_ConfigClockSource+0x16c>
 8002fe0:	2b50      	cmp	r3, #80	@ 0x50
 8002fe2:	d03c      	beq.n	800305e <HAL_TIM_ConfigClockSource+0xfa>
 8002fe4:	2b50      	cmp	r3, #80	@ 0x50
 8002fe6:	d873      	bhi.n	80030d0 <HAL_TIM_ConfigClockSource+0x16c>
 8002fe8:	2b40      	cmp	r3, #64	@ 0x40
 8002fea:	d058      	beq.n	800309e <HAL_TIM_ConfigClockSource+0x13a>
 8002fec:	2b40      	cmp	r3, #64	@ 0x40
 8002fee:	d86f      	bhi.n	80030d0 <HAL_TIM_ConfigClockSource+0x16c>
 8002ff0:	2b30      	cmp	r3, #48	@ 0x30
 8002ff2:	d064      	beq.n	80030be <HAL_TIM_ConfigClockSource+0x15a>
 8002ff4:	2b30      	cmp	r3, #48	@ 0x30
 8002ff6:	d86b      	bhi.n	80030d0 <HAL_TIM_ConfigClockSource+0x16c>
 8002ff8:	2b20      	cmp	r3, #32
 8002ffa:	d060      	beq.n	80030be <HAL_TIM_ConfigClockSource+0x15a>
 8002ffc:	2b20      	cmp	r3, #32
 8002ffe:	d867      	bhi.n	80030d0 <HAL_TIM_ConfigClockSource+0x16c>
 8003000:	2b00      	cmp	r3, #0
 8003002:	d05c      	beq.n	80030be <HAL_TIM_ConfigClockSource+0x15a>
 8003004:	2b10      	cmp	r3, #16
 8003006:	d05a      	beq.n	80030be <HAL_TIM_ConfigClockSource+0x15a>
 8003008:	e062      	b.n	80030d0 <HAL_TIM_ConfigClockSource+0x16c>
 800300a:	687b      	ldr	r3, [r7, #4]
 800300c:	6818      	ldr	r0, [r3, #0]
 800300e:	683b      	ldr	r3, [r7, #0]
 8003010:	6899      	ldr	r1, [r3, #8]
 8003012:	683b      	ldr	r3, [r7, #0]
 8003014:	685a      	ldr	r2, [r3, #4]
 8003016:	683b      	ldr	r3, [r7, #0]
 8003018:	68db      	ldr	r3, [r3, #12]
 800301a:	f000 fafc 	bl	8003616 <TIM_ETR_SetConfig>
 800301e:	687b      	ldr	r3, [r7, #4]
 8003020:	681b      	ldr	r3, [r3, #0]
 8003022:	689b      	ldr	r3, [r3, #8]
 8003024:	60bb      	str	r3, [r7, #8]
 8003026:	68bb      	ldr	r3, [r7, #8]
 8003028:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 800302c:	60bb      	str	r3, [r7, #8]
 800302e:	687b      	ldr	r3, [r7, #4]
 8003030:	681b      	ldr	r3, [r3, #0]
 8003032:	68ba      	ldr	r2, [r7, #8]
 8003034:	609a      	str	r2, [r3, #8]
 8003036:	e04f      	b.n	80030d8 <HAL_TIM_ConfigClockSource+0x174>
 8003038:	687b      	ldr	r3, [r7, #4]
 800303a:	6818      	ldr	r0, [r3, #0]
 800303c:	683b      	ldr	r3, [r7, #0]
 800303e:	6899      	ldr	r1, [r3, #8]
 8003040:	683b      	ldr	r3, [r7, #0]
 8003042:	685a      	ldr	r2, [r3, #4]
 8003044:	683b      	ldr	r3, [r7, #0]
 8003046:	68db      	ldr	r3, [r3, #12]
 8003048:	f000 fae5 	bl	8003616 <TIM_ETR_SetConfig>
 800304c:	687b      	ldr	r3, [r7, #4]
 800304e:	681b      	ldr	r3, [r3, #0]
 8003050:	689a      	ldr	r2, [r3, #8]
 8003052:	687b      	ldr	r3, [r7, #4]
 8003054:	681b      	ldr	r3, [r3, #0]
 8003056:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800305a:	609a      	str	r2, [r3, #8]
 800305c:	e03c      	b.n	80030d8 <HAL_TIM_ConfigClockSource+0x174>
 800305e:	687b      	ldr	r3, [r7, #4]
 8003060:	6818      	ldr	r0, [r3, #0]
 8003062:	683b      	ldr	r3, [r7, #0]
 8003064:	6859      	ldr	r1, [r3, #4]
 8003066:	683b      	ldr	r3, [r7, #0]
 8003068:	68db      	ldr	r3, [r3, #12]
 800306a:	461a      	mov	r2, r3
 800306c:	f000 fa5c 	bl	8003528 <TIM_TI1_ConfigInputStage>
 8003070:	687b      	ldr	r3, [r7, #4]
 8003072:	681b      	ldr	r3, [r3, #0]
 8003074:	2150      	movs	r1, #80	@ 0x50
 8003076:	4618      	mov	r0, r3
 8003078:	f000 fab3 	bl	80035e2 <TIM_ITRx_SetConfig>
 800307c:	e02c      	b.n	80030d8 <HAL_TIM_ConfigClockSource+0x174>
 800307e:	687b      	ldr	r3, [r7, #4]
 8003080:	6818      	ldr	r0, [r3, #0]
 8003082:	683b      	ldr	r3, [r7, #0]
 8003084:	6859      	ldr	r1, [r3, #4]
 8003086:	683b      	ldr	r3, [r7, #0]
 8003088:	68db      	ldr	r3, [r3, #12]
 800308a:	461a      	mov	r2, r3
 800308c:	f000 fa7a 	bl	8003584 <TIM_TI2_ConfigInputStage>
 8003090:	687b      	ldr	r3, [r7, #4]
 8003092:	681b      	ldr	r3, [r3, #0]
 8003094:	2160      	movs	r1, #96	@ 0x60
 8003096:	4618      	mov	r0, r3
 8003098:	f000 faa3 	bl	80035e2 <TIM_ITRx_SetConfig>
 800309c:	e01c      	b.n	80030d8 <HAL_TIM_ConfigClockSource+0x174>
 800309e:	687b      	ldr	r3, [r7, #4]
 80030a0:	6818      	ldr	r0, [r3, #0]
 80030a2:	683b      	ldr	r3, [r7, #0]
 80030a4:	6859      	ldr	r1, [r3, #4]
 80030a6:	683b      	ldr	r3, [r7, #0]
 80030a8:	68db      	ldr	r3, [r3, #12]
 80030aa:	461a      	mov	r2, r3
 80030ac:	f000 fa3c 	bl	8003528 <TIM_TI1_ConfigInputStage>
 80030b0:	687b      	ldr	r3, [r7, #4]
 80030b2:	681b      	ldr	r3, [r3, #0]
 80030b4:	2140      	movs	r1, #64	@ 0x40
 80030b6:	4618      	mov	r0, r3
 80030b8:	f000 fa93 	bl	80035e2 <TIM_ITRx_SetConfig>
 80030bc:	e00c      	b.n	80030d8 <HAL_TIM_ConfigClockSource+0x174>
 80030be:	687b      	ldr	r3, [r7, #4]
 80030c0:	681a      	ldr	r2, [r3, #0]
 80030c2:	683b      	ldr	r3, [r7, #0]
 80030c4:	681b      	ldr	r3, [r3, #0]
 80030c6:	4619      	mov	r1, r3
 80030c8:	4610      	mov	r0, r2
 80030ca:	f000 fa8a 	bl	80035e2 <TIM_ITRx_SetConfig>
 80030ce:	e003      	b.n	80030d8 <HAL_TIM_ConfigClockSource+0x174>
 80030d0:	2301      	movs	r3, #1
 80030d2:	73fb      	strb	r3, [r7, #15]
 80030d4:	e000      	b.n	80030d8 <HAL_TIM_ConfigClockSource+0x174>
 80030d6:	bf00      	nop
 80030d8:	687b      	ldr	r3, [r7, #4]
 80030da:	2201      	movs	r2, #1
 80030dc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80030e0:	687b      	ldr	r3, [r7, #4]
 80030e2:	2200      	movs	r2, #0
 80030e4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80030e8:	7bfb      	ldrb	r3, [r7, #15]
 80030ea:	4618      	mov	r0, r3
 80030ec:	3710      	adds	r7, #16
 80030ee:	46bd      	mov	sp, r7
 80030f0:	bd80      	pop	{r7, pc}

080030f2 <HAL_TIM_OC_DelayElapsedCallback>:
 80030f2:	b480      	push	{r7}
 80030f4:	b083      	sub	sp, #12
 80030f6:	af00      	add	r7, sp, #0
 80030f8:	6078      	str	r0, [r7, #4]
 80030fa:	bf00      	nop
 80030fc:	370c      	adds	r7, #12
 80030fe:	46bd      	mov	sp, r7
 8003100:	bc80      	pop	{r7}
 8003102:	4770      	bx	lr

08003104 <HAL_TIM_IC_CaptureCallback>:
 8003104:	b480      	push	{r7}
 8003106:	b083      	sub	sp, #12
 8003108:	af00      	add	r7, sp, #0
 800310a:	6078      	str	r0, [r7, #4]
 800310c:	bf00      	nop
 800310e:	370c      	adds	r7, #12
 8003110:	46bd      	mov	sp, r7
 8003112:	bc80      	pop	{r7}
 8003114:	4770      	bx	lr

08003116 <HAL_TIM_PWM_PulseFinishedCallback>:
 8003116:	b480      	push	{r7}
 8003118:	b083      	sub	sp, #12
 800311a:	af00      	add	r7, sp, #0
 800311c:	6078      	str	r0, [r7, #4]
 800311e:	bf00      	nop
 8003120:	370c      	adds	r7, #12
 8003122:	46bd      	mov	sp, r7
 8003124:	bc80      	pop	{r7}
 8003126:	4770      	bx	lr

08003128 <HAL_TIM_TriggerCallback>:
 8003128:	b480      	push	{r7}
 800312a:	b083      	sub	sp, #12
 800312c:	af00      	add	r7, sp, #0
 800312e:	6078      	str	r0, [r7, #4]
 8003130:	bf00      	nop
 8003132:	370c      	adds	r7, #12
 8003134:	46bd      	mov	sp, r7
 8003136:	bc80      	pop	{r7}
 8003138:	4770      	bx	lr
	...

0800313c <TIM_Base_SetConfig>:
 800313c:	b480      	push	{r7}
 800313e:	b085      	sub	sp, #20
 8003140:	af00      	add	r7, sp, #0
 8003142:	6078      	str	r0, [r7, #4]
 8003144:	6039      	str	r1, [r7, #0]
 8003146:	687b      	ldr	r3, [r7, #4]
 8003148:	681b      	ldr	r3, [r3, #0]
 800314a:	60fb      	str	r3, [r7, #12]
 800314c:	687b      	ldr	r3, [r7, #4]
 800314e:	4a2f      	ldr	r2, [pc, #188]	@ (800320c <TIM_Base_SetConfig+0xd0>)
 8003150:	4293      	cmp	r3, r2
 8003152:	d00b      	beq.n	800316c <TIM_Base_SetConfig+0x30>
 8003154:	687b      	ldr	r3, [r7, #4]
 8003156:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800315a:	d007      	beq.n	800316c <TIM_Base_SetConfig+0x30>
 800315c:	687b      	ldr	r3, [r7, #4]
 800315e:	4a2c      	ldr	r2, [pc, #176]	@ (8003210 <TIM_Base_SetConfig+0xd4>)
 8003160:	4293      	cmp	r3, r2
 8003162:	d003      	beq.n	800316c <TIM_Base_SetConfig+0x30>
 8003164:	687b      	ldr	r3, [r7, #4]
 8003166:	4a2b      	ldr	r2, [pc, #172]	@ (8003214 <TIM_Base_SetConfig+0xd8>)
 8003168:	4293      	cmp	r3, r2
 800316a:	d108      	bne.n	800317e <TIM_Base_SetConfig+0x42>
 800316c:	68fb      	ldr	r3, [r7, #12]
 800316e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8003172:	60fb      	str	r3, [r7, #12]
 8003174:	683b      	ldr	r3, [r7, #0]
 8003176:	685b      	ldr	r3, [r3, #4]
 8003178:	68fa      	ldr	r2, [r7, #12]
 800317a:	4313      	orrs	r3, r2
 800317c:	60fb      	str	r3, [r7, #12]
 800317e:	687b      	ldr	r3, [r7, #4]
 8003180:	4a22      	ldr	r2, [pc, #136]	@ (800320c <TIM_Base_SetConfig+0xd0>)
 8003182:	4293      	cmp	r3, r2
 8003184:	d00b      	beq.n	800319e <TIM_Base_SetConfig+0x62>
 8003186:	687b      	ldr	r3, [r7, #4]
 8003188:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800318c:	d007      	beq.n	800319e <TIM_Base_SetConfig+0x62>
 800318e:	687b      	ldr	r3, [r7, #4]
 8003190:	4a1f      	ldr	r2, [pc, #124]	@ (8003210 <TIM_Base_SetConfig+0xd4>)
 8003192:	4293      	cmp	r3, r2
 8003194:	d003      	beq.n	800319e <TIM_Base_SetConfig+0x62>
 8003196:	687b      	ldr	r3, [r7, #4]
 8003198:	4a1e      	ldr	r2, [pc, #120]	@ (8003214 <TIM_Base_SetConfig+0xd8>)
 800319a:	4293      	cmp	r3, r2
 800319c:	d108      	bne.n	80031b0 <TIM_Base_SetConfig+0x74>
 800319e:	68fb      	ldr	r3, [r7, #12]
 80031a0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80031a4:	60fb      	str	r3, [r7, #12]
 80031a6:	683b      	ldr	r3, [r7, #0]
 80031a8:	68db      	ldr	r3, [r3, #12]
 80031aa:	68fa      	ldr	r2, [r7, #12]
 80031ac:	4313      	orrs	r3, r2
 80031ae:	60fb      	str	r3, [r7, #12]
 80031b0:	68fb      	ldr	r3, [r7, #12]
 80031b2:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 80031b6:	683b      	ldr	r3, [r7, #0]
 80031b8:	695b      	ldr	r3, [r3, #20]
 80031ba:	4313      	orrs	r3, r2
 80031bc:	60fb      	str	r3, [r7, #12]
 80031be:	687b      	ldr	r3, [r7, #4]
 80031c0:	68fa      	ldr	r2, [r7, #12]
 80031c2:	601a      	str	r2, [r3, #0]
 80031c4:	683b      	ldr	r3, [r7, #0]
 80031c6:	689a      	ldr	r2, [r3, #8]
 80031c8:	687b      	ldr	r3, [r7, #4]
 80031ca:	62da      	str	r2, [r3, #44]	@ 0x2c
 80031cc:	683b      	ldr	r3, [r7, #0]
 80031ce:	681a      	ldr	r2, [r3, #0]
 80031d0:	687b      	ldr	r3, [r7, #4]
 80031d2:	629a      	str	r2, [r3, #40]	@ 0x28
 80031d4:	687b      	ldr	r3, [r7, #4]
 80031d6:	4a0d      	ldr	r2, [pc, #52]	@ (800320c <TIM_Base_SetConfig+0xd0>)
 80031d8:	4293      	cmp	r3, r2
 80031da:	d103      	bne.n	80031e4 <TIM_Base_SetConfig+0xa8>
 80031dc:	683b      	ldr	r3, [r7, #0]
 80031de:	691a      	ldr	r2, [r3, #16]
 80031e0:	687b      	ldr	r3, [r7, #4]
 80031e2:	631a      	str	r2, [r3, #48]	@ 0x30
 80031e4:	687b      	ldr	r3, [r7, #4]
 80031e6:	2201      	movs	r2, #1
 80031e8:	615a      	str	r2, [r3, #20]
 80031ea:	687b      	ldr	r3, [r7, #4]
 80031ec:	691b      	ldr	r3, [r3, #16]
 80031ee:	f003 0301 	and.w	r3, r3, #1
 80031f2:	2b00      	cmp	r3, #0
 80031f4:	d005      	beq.n	8003202 <TIM_Base_SetConfig+0xc6>
 80031f6:	687b      	ldr	r3, [r7, #4]
 80031f8:	691b      	ldr	r3, [r3, #16]
 80031fa:	f023 0201 	bic.w	r2, r3, #1
 80031fe:	687b      	ldr	r3, [r7, #4]
 8003200:	611a      	str	r2, [r3, #16]
 8003202:	bf00      	nop
 8003204:	3714      	adds	r7, #20
 8003206:	46bd      	mov	sp, r7
 8003208:	bc80      	pop	{r7}
 800320a:	4770      	bx	lr
 800320c:	40012c00 	.word	0x40012c00
 8003210:	40000400 	.word	0x40000400
 8003214:	40000800 	.word	0x40000800

08003218 <TIM_OC1_SetConfig>:
 8003218:	b480      	push	{r7}
 800321a:	b087      	sub	sp, #28
 800321c:	af00      	add	r7, sp, #0
 800321e:	6078      	str	r0, [r7, #4]
 8003220:	6039      	str	r1, [r7, #0]
 8003222:	687b      	ldr	r3, [r7, #4]
 8003224:	6a1b      	ldr	r3, [r3, #32]
 8003226:	617b      	str	r3, [r7, #20]
 8003228:	687b      	ldr	r3, [r7, #4]
 800322a:	6a1b      	ldr	r3, [r3, #32]
 800322c:	f023 0201 	bic.w	r2, r3, #1
 8003230:	687b      	ldr	r3, [r7, #4]
 8003232:	621a      	str	r2, [r3, #32]
 8003234:	687b      	ldr	r3, [r7, #4]
 8003236:	685b      	ldr	r3, [r3, #4]
 8003238:	613b      	str	r3, [r7, #16]
 800323a:	687b      	ldr	r3, [r7, #4]
 800323c:	699b      	ldr	r3, [r3, #24]
 800323e:	60fb      	str	r3, [r7, #12]
 8003240:	68fb      	ldr	r3, [r7, #12]
 8003242:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8003246:	60fb      	str	r3, [r7, #12]
 8003248:	68fb      	ldr	r3, [r7, #12]
 800324a:	f023 0303 	bic.w	r3, r3, #3
 800324e:	60fb      	str	r3, [r7, #12]
 8003250:	683b      	ldr	r3, [r7, #0]
 8003252:	681b      	ldr	r3, [r3, #0]
 8003254:	68fa      	ldr	r2, [r7, #12]
 8003256:	4313      	orrs	r3, r2
 8003258:	60fb      	str	r3, [r7, #12]
 800325a:	697b      	ldr	r3, [r7, #20]
 800325c:	f023 0302 	bic.w	r3, r3, #2
 8003260:	617b      	str	r3, [r7, #20]
 8003262:	683b      	ldr	r3, [r7, #0]
 8003264:	689b      	ldr	r3, [r3, #8]
 8003266:	697a      	ldr	r2, [r7, #20]
 8003268:	4313      	orrs	r3, r2
 800326a:	617b      	str	r3, [r7, #20]
 800326c:	687b      	ldr	r3, [r7, #4]
 800326e:	4a1c      	ldr	r2, [pc, #112]	@ (80032e0 <TIM_OC1_SetConfig+0xc8>)
 8003270:	4293      	cmp	r3, r2
 8003272:	d10c      	bne.n	800328e <TIM_OC1_SetConfig+0x76>
 8003274:	697b      	ldr	r3, [r7, #20]
 8003276:	f023 0308 	bic.w	r3, r3, #8
 800327a:	617b      	str	r3, [r7, #20]
 800327c:	683b      	ldr	r3, [r7, #0]
 800327e:	68db      	ldr	r3, [r3, #12]
 8003280:	697a      	ldr	r2, [r7, #20]
 8003282:	4313      	orrs	r3, r2
 8003284:	617b      	str	r3, [r7, #20]
 8003286:	697b      	ldr	r3, [r7, #20]
 8003288:	f023 0304 	bic.w	r3, r3, #4
 800328c:	617b      	str	r3, [r7, #20]
 800328e:	687b      	ldr	r3, [r7, #4]
 8003290:	4a13      	ldr	r2, [pc, #76]	@ (80032e0 <TIM_OC1_SetConfig+0xc8>)
 8003292:	4293      	cmp	r3, r2
 8003294:	d111      	bne.n	80032ba <TIM_OC1_SetConfig+0xa2>
 8003296:	693b      	ldr	r3, [r7, #16]
 8003298:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800329c:	613b      	str	r3, [r7, #16]
 800329e:	693b      	ldr	r3, [r7, #16]
 80032a0:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80032a4:	613b      	str	r3, [r7, #16]
 80032a6:	683b      	ldr	r3, [r7, #0]
 80032a8:	695b      	ldr	r3, [r3, #20]
 80032aa:	693a      	ldr	r2, [r7, #16]
 80032ac:	4313      	orrs	r3, r2
 80032ae:	613b      	str	r3, [r7, #16]
 80032b0:	683b      	ldr	r3, [r7, #0]
 80032b2:	699b      	ldr	r3, [r3, #24]
 80032b4:	693a      	ldr	r2, [r7, #16]
 80032b6:	4313      	orrs	r3, r2
 80032b8:	613b      	str	r3, [r7, #16]
 80032ba:	687b      	ldr	r3, [r7, #4]
 80032bc:	693a      	ldr	r2, [r7, #16]
 80032be:	605a      	str	r2, [r3, #4]
 80032c0:	687b      	ldr	r3, [r7, #4]
 80032c2:	68fa      	ldr	r2, [r7, #12]
 80032c4:	619a      	str	r2, [r3, #24]
 80032c6:	683b      	ldr	r3, [r7, #0]
 80032c8:	685a      	ldr	r2, [r3, #4]
 80032ca:	687b      	ldr	r3, [r7, #4]
 80032cc:	635a      	str	r2, [r3, #52]	@ 0x34
 80032ce:	687b      	ldr	r3, [r7, #4]
 80032d0:	697a      	ldr	r2, [r7, #20]
 80032d2:	621a      	str	r2, [r3, #32]
 80032d4:	bf00      	nop
 80032d6:	371c      	adds	r7, #28
 80032d8:	46bd      	mov	sp, r7
 80032da:	bc80      	pop	{r7}
 80032dc:	4770      	bx	lr
 80032de:	bf00      	nop
 80032e0:	40012c00 	.word	0x40012c00

080032e4 <TIM_OC2_SetConfig>:
 80032e4:	b480      	push	{r7}
 80032e6:	b087      	sub	sp, #28
 80032e8:	af00      	add	r7, sp, #0
 80032ea:	6078      	str	r0, [r7, #4]
 80032ec:	6039      	str	r1, [r7, #0]
 80032ee:	687b      	ldr	r3, [r7, #4]
 80032f0:	6a1b      	ldr	r3, [r3, #32]
 80032f2:	617b      	str	r3, [r7, #20]
 80032f4:	687b      	ldr	r3, [r7, #4]
 80032f6:	6a1b      	ldr	r3, [r3, #32]
 80032f8:	f023 0210 	bic.w	r2, r3, #16
 80032fc:	687b      	ldr	r3, [r7, #4]
 80032fe:	621a      	str	r2, [r3, #32]
 8003300:	687b      	ldr	r3, [r7, #4]
 8003302:	685b      	ldr	r3, [r3, #4]
 8003304:	613b      	str	r3, [r7, #16]
 8003306:	687b      	ldr	r3, [r7, #4]
 8003308:	699b      	ldr	r3, [r3, #24]
 800330a:	60fb      	str	r3, [r7, #12]
 800330c:	68fb      	ldr	r3, [r7, #12]
 800330e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8003312:	60fb      	str	r3, [r7, #12]
 8003314:	68fb      	ldr	r3, [r7, #12]
 8003316:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800331a:	60fb      	str	r3, [r7, #12]
 800331c:	683b      	ldr	r3, [r7, #0]
 800331e:	681b      	ldr	r3, [r3, #0]
 8003320:	021b      	lsls	r3, r3, #8
 8003322:	68fa      	ldr	r2, [r7, #12]
 8003324:	4313      	orrs	r3, r2
 8003326:	60fb      	str	r3, [r7, #12]
 8003328:	697b      	ldr	r3, [r7, #20]
 800332a:	f023 0320 	bic.w	r3, r3, #32
 800332e:	617b      	str	r3, [r7, #20]
 8003330:	683b      	ldr	r3, [r7, #0]
 8003332:	689b      	ldr	r3, [r3, #8]
 8003334:	011b      	lsls	r3, r3, #4
 8003336:	697a      	ldr	r2, [r7, #20]
 8003338:	4313      	orrs	r3, r2
 800333a:	617b      	str	r3, [r7, #20]
 800333c:	687b      	ldr	r3, [r7, #4]
 800333e:	4a1d      	ldr	r2, [pc, #116]	@ (80033b4 <TIM_OC2_SetConfig+0xd0>)
 8003340:	4293      	cmp	r3, r2
 8003342:	d10d      	bne.n	8003360 <TIM_OC2_SetConfig+0x7c>
 8003344:	697b      	ldr	r3, [r7, #20]
 8003346:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800334a:	617b      	str	r3, [r7, #20]
 800334c:	683b      	ldr	r3, [r7, #0]
 800334e:	68db      	ldr	r3, [r3, #12]
 8003350:	011b      	lsls	r3, r3, #4
 8003352:	697a      	ldr	r2, [r7, #20]
 8003354:	4313      	orrs	r3, r2
 8003356:	617b      	str	r3, [r7, #20]
 8003358:	697b      	ldr	r3, [r7, #20]
 800335a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800335e:	617b      	str	r3, [r7, #20]
 8003360:	687b      	ldr	r3, [r7, #4]
 8003362:	4a14      	ldr	r2, [pc, #80]	@ (80033b4 <TIM_OC2_SetConfig+0xd0>)
 8003364:	4293      	cmp	r3, r2
 8003366:	d113      	bne.n	8003390 <TIM_OC2_SetConfig+0xac>
 8003368:	693b      	ldr	r3, [r7, #16]
 800336a:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800336e:	613b      	str	r3, [r7, #16]
 8003370:	693b      	ldr	r3, [r7, #16]
 8003372:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8003376:	613b      	str	r3, [r7, #16]
 8003378:	683b      	ldr	r3, [r7, #0]
 800337a:	695b      	ldr	r3, [r3, #20]
 800337c:	009b      	lsls	r3, r3, #2
 800337e:	693a      	ldr	r2, [r7, #16]
 8003380:	4313      	orrs	r3, r2
 8003382:	613b      	str	r3, [r7, #16]
 8003384:	683b      	ldr	r3, [r7, #0]
 8003386:	699b      	ldr	r3, [r3, #24]
 8003388:	009b      	lsls	r3, r3, #2
 800338a:	693a      	ldr	r2, [r7, #16]
 800338c:	4313      	orrs	r3, r2
 800338e:	613b      	str	r3, [r7, #16]
 8003390:	687b      	ldr	r3, [r7, #4]
 8003392:	693a      	ldr	r2, [r7, #16]
 8003394:	605a      	str	r2, [r3, #4]
 8003396:	687b      	ldr	r3, [r7, #4]
 8003398:	68fa      	ldr	r2, [r7, #12]
 800339a:	619a      	str	r2, [r3, #24]
 800339c:	683b      	ldr	r3, [r7, #0]
 800339e:	685a      	ldr	r2, [r3, #4]
 80033a0:	687b      	ldr	r3, [r7, #4]
 80033a2:	639a      	str	r2, [r3, #56]	@ 0x38
 80033a4:	687b      	ldr	r3, [r7, #4]
 80033a6:	697a      	ldr	r2, [r7, #20]
 80033a8:	621a      	str	r2, [r3, #32]
 80033aa:	bf00      	nop
 80033ac:	371c      	adds	r7, #28
 80033ae:	46bd      	mov	sp, r7
 80033b0:	bc80      	pop	{r7}
 80033b2:	4770      	bx	lr
 80033b4:	40012c00 	.word	0x40012c00

080033b8 <TIM_OC3_SetConfig>:
 80033b8:	b480      	push	{r7}
 80033ba:	b087      	sub	sp, #28
 80033bc:	af00      	add	r7, sp, #0
 80033be:	6078      	str	r0, [r7, #4]
 80033c0:	6039      	str	r1, [r7, #0]
 80033c2:	687b      	ldr	r3, [r7, #4]
 80033c4:	6a1b      	ldr	r3, [r3, #32]
 80033c6:	617b      	str	r3, [r7, #20]
 80033c8:	687b      	ldr	r3, [r7, #4]
 80033ca:	6a1b      	ldr	r3, [r3, #32]
 80033cc:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 80033d0:	687b      	ldr	r3, [r7, #4]
 80033d2:	621a      	str	r2, [r3, #32]
 80033d4:	687b      	ldr	r3, [r7, #4]
 80033d6:	685b      	ldr	r3, [r3, #4]
 80033d8:	613b      	str	r3, [r7, #16]
 80033da:	687b      	ldr	r3, [r7, #4]
 80033dc:	69db      	ldr	r3, [r3, #28]
 80033de:	60fb      	str	r3, [r7, #12]
 80033e0:	68fb      	ldr	r3, [r7, #12]
 80033e2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80033e6:	60fb      	str	r3, [r7, #12]
 80033e8:	68fb      	ldr	r3, [r7, #12]
 80033ea:	f023 0303 	bic.w	r3, r3, #3
 80033ee:	60fb      	str	r3, [r7, #12]
 80033f0:	683b      	ldr	r3, [r7, #0]
 80033f2:	681b      	ldr	r3, [r3, #0]
 80033f4:	68fa      	ldr	r2, [r7, #12]
 80033f6:	4313      	orrs	r3, r2
 80033f8:	60fb      	str	r3, [r7, #12]
 80033fa:	697b      	ldr	r3, [r7, #20]
 80033fc:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8003400:	617b      	str	r3, [r7, #20]
 8003402:	683b      	ldr	r3, [r7, #0]
 8003404:	689b      	ldr	r3, [r3, #8]
 8003406:	021b      	lsls	r3, r3, #8
 8003408:	697a      	ldr	r2, [r7, #20]
 800340a:	4313      	orrs	r3, r2
 800340c:	617b      	str	r3, [r7, #20]
 800340e:	687b      	ldr	r3, [r7, #4]
 8003410:	4a1d      	ldr	r2, [pc, #116]	@ (8003488 <TIM_OC3_SetConfig+0xd0>)
 8003412:	4293      	cmp	r3, r2
 8003414:	d10d      	bne.n	8003432 <TIM_OC3_SetConfig+0x7a>
 8003416:	697b      	ldr	r3, [r7, #20]
 8003418:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800341c:	617b      	str	r3, [r7, #20]
 800341e:	683b      	ldr	r3, [r7, #0]
 8003420:	68db      	ldr	r3, [r3, #12]
 8003422:	021b      	lsls	r3, r3, #8
 8003424:	697a      	ldr	r2, [r7, #20]
 8003426:	4313      	orrs	r3, r2
 8003428:	617b      	str	r3, [r7, #20]
 800342a:	697b      	ldr	r3, [r7, #20]
 800342c:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8003430:	617b      	str	r3, [r7, #20]
 8003432:	687b      	ldr	r3, [r7, #4]
 8003434:	4a14      	ldr	r2, [pc, #80]	@ (8003488 <TIM_OC3_SetConfig+0xd0>)
 8003436:	4293      	cmp	r3, r2
 8003438:	d113      	bne.n	8003462 <TIM_OC3_SetConfig+0xaa>
 800343a:	693b      	ldr	r3, [r7, #16]
 800343c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8003440:	613b      	str	r3, [r7, #16]
 8003442:	693b      	ldr	r3, [r7, #16]
 8003444:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8003448:	613b      	str	r3, [r7, #16]
 800344a:	683b      	ldr	r3, [r7, #0]
 800344c:	695b      	ldr	r3, [r3, #20]
 800344e:	011b      	lsls	r3, r3, #4
 8003450:	693a      	ldr	r2, [r7, #16]
 8003452:	4313      	orrs	r3, r2
 8003454:	613b      	str	r3, [r7, #16]
 8003456:	683b      	ldr	r3, [r7, #0]
 8003458:	699b      	ldr	r3, [r3, #24]
 800345a:	011b      	lsls	r3, r3, #4
 800345c:	693a      	ldr	r2, [r7, #16]
 800345e:	4313      	orrs	r3, r2
 8003460:	613b      	str	r3, [r7, #16]
 8003462:	687b      	ldr	r3, [r7, #4]
 8003464:	693a      	ldr	r2, [r7, #16]
 8003466:	605a      	str	r2, [r3, #4]
 8003468:	687b      	ldr	r3, [r7, #4]
 800346a:	68fa      	ldr	r2, [r7, #12]
 800346c:	61da      	str	r2, [r3, #28]
 800346e:	683b      	ldr	r3, [r7, #0]
 8003470:	685a      	ldr	r2, [r3, #4]
 8003472:	687b      	ldr	r3, [r7, #4]
 8003474:	63da      	str	r2, [r3, #60]	@ 0x3c
 8003476:	687b      	ldr	r3, [r7, #4]
 8003478:	697a      	ldr	r2, [r7, #20]
 800347a:	621a      	str	r2, [r3, #32]
 800347c:	bf00      	nop
 800347e:	371c      	adds	r7, #28
 8003480:	46bd      	mov	sp, r7
 8003482:	bc80      	pop	{r7}
 8003484:	4770      	bx	lr
 8003486:	bf00      	nop
 8003488:	40012c00 	.word	0x40012c00

0800348c <TIM_OC4_SetConfig>:
 800348c:	b480      	push	{r7}
 800348e:	b087      	sub	sp, #28
 8003490:	af00      	add	r7, sp, #0
 8003492:	6078      	str	r0, [r7, #4]
 8003494:	6039      	str	r1, [r7, #0]
 8003496:	687b      	ldr	r3, [r7, #4]
 8003498:	6a1b      	ldr	r3, [r3, #32]
 800349a:	613b      	str	r3, [r7, #16]
 800349c:	687b      	ldr	r3, [r7, #4]
 800349e:	6a1b      	ldr	r3, [r3, #32]
 80034a0:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 80034a4:	687b      	ldr	r3, [r7, #4]
 80034a6:	621a      	str	r2, [r3, #32]
 80034a8:	687b      	ldr	r3, [r7, #4]
 80034aa:	685b      	ldr	r3, [r3, #4]
 80034ac:	617b      	str	r3, [r7, #20]
 80034ae:	687b      	ldr	r3, [r7, #4]
 80034b0:	69db      	ldr	r3, [r3, #28]
 80034b2:	60fb      	str	r3, [r7, #12]
 80034b4:	68fb      	ldr	r3, [r7, #12]
 80034b6:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80034ba:	60fb      	str	r3, [r7, #12]
 80034bc:	68fb      	ldr	r3, [r7, #12]
 80034be:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80034c2:	60fb      	str	r3, [r7, #12]
 80034c4:	683b      	ldr	r3, [r7, #0]
 80034c6:	681b      	ldr	r3, [r3, #0]
 80034c8:	021b      	lsls	r3, r3, #8
 80034ca:	68fa      	ldr	r2, [r7, #12]
 80034cc:	4313      	orrs	r3, r2
 80034ce:	60fb      	str	r3, [r7, #12]
 80034d0:	693b      	ldr	r3, [r7, #16]
 80034d2:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80034d6:	613b      	str	r3, [r7, #16]
 80034d8:	683b      	ldr	r3, [r7, #0]
 80034da:	689b      	ldr	r3, [r3, #8]
 80034dc:	031b      	lsls	r3, r3, #12
 80034de:	693a      	ldr	r2, [r7, #16]
 80034e0:	4313      	orrs	r3, r2
 80034e2:	613b      	str	r3, [r7, #16]
 80034e4:	687b      	ldr	r3, [r7, #4]
 80034e6:	4a0f      	ldr	r2, [pc, #60]	@ (8003524 <TIM_OC4_SetConfig+0x98>)
 80034e8:	4293      	cmp	r3, r2
 80034ea:	d109      	bne.n	8003500 <TIM_OC4_SetConfig+0x74>
 80034ec:	697b      	ldr	r3, [r7, #20]
 80034ee:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80034f2:	617b      	str	r3, [r7, #20]
 80034f4:	683b      	ldr	r3, [r7, #0]
 80034f6:	695b      	ldr	r3, [r3, #20]
 80034f8:	019b      	lsls	r3, r3, #6
 80034fa:	697a      	ldr	r2, [r7, #20]
 80034fc:	4313      	orrs	r3, r2
 80034fe:	617b      	str	r3, [r7, #20]
 8003500:	687b      	ldr	r3, [r7, #4]
 8003502:	697a      	ldr	r2, [r7, #20]
 8003504:	605a      	str	r2, [r3, #4]
 8003506:	687b      	ldr	r3, [r7, #4]
 8003508:	68fa      	ldr	r2, [r7, #12]
 800350a:	61da      	str	r2, [r3, #28]
 800350c:	683b      	ldr	r3, [r7, #0]
 800350e:	685a      	ldr	r2, [r3, #4]
 8003510:	687b      	ldr	r3, [r7, #4]
 8003512:	641a      	str	r2, [r3, #64]	@ 0x40
 8003514:	687b      	ldr	r3, [r7, #4]
 8003516:	693a      	ldr	r2, [r7, #16]
 8003518:	621a      	str	r2, [r3, #32]
 800351a:	bf00      	nop
 800351c:	371c      	adds	r7, #28
 800351e:	46bd      	mov	sp, r7
 8003520:	bc80      	pop	{r7}
 8003522:	4770      	bx	lr
 8003524:	40012c00 	.word	0x40012c00

08003528 <TIM_TI1_ConfigInputStage>:
 8003528:	b480      	push	{r7}
 800352a:	b087      	sub	sp, #28
 800352c:	af00      	add	r7, sp, #0
 800352e:	60f8      	str	r0, [r7, #12]
 8003530:	60b9      	str	r1, [r7, #8]
 8003532:	607a      	str	r2, [r7, #4]
 8003534:	68fb      	ldr	r3, [r7, #12]
 8003536:	6a1b      	ldr	r3, [r3, #32]
 8003538:	617b      	str	r3, [r7, #20]
 800353a:	68fb      	ldr	r3, [r7, #12]
 800353c:	6a1b      	ldr	r3, [r3, #32]
 800353e:	f023 0201 	bic.w	r2, r3, #1
 8003542:	68fb      	ldr	r3, [r7, #12]
 8003544:	621a      	str	r2, [r3, #32]
 8003546:	68fb      	ldr	r3, [r7, #12]
 8003548:	699b      	ldr	r3, [r3, #24]
 800354a:	613b      	str	r3, [r7, #16]
 800354c:	693b      	ldr	r3, [r7, #16]
 800354e:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8003552:	613b      	str	r3, [r7, #16]
 8003554:	687b      	ldr	r3, [r7, #4]
 8003556:	011b      	lsls	r3, r3, #4
 8003558:	693a      	ldr	r2, [r7, #16]
 800355a:	4313      	orrs	r3, r2
 800355c:	613b      	str	r3, [r7, #16]
 800355e:	697b      	ldr	r3, [r7, #20]
 8003560:	f023 030a 	bic.w	r3, r3, #10
 8003564:	617b      	str	r3, [r7, #20]
 8003566:	697a      	ldr	r2, [r7, #20]
 8003568:	68bb      	ldr	r3, [r7, #8]
 800356a:	4313      	orrs	r3, r2
 800356c:	617b      	str	r3, [r7, #20]
 800356e:	68fb      	ldr	r3, [r7, #12]
 8003570:	693a      	ldr	r2, [r7, #16]
 8003572:	619a      	str	r2, [r3, #24]
 8003574:	68fb      	ldr	r3, [r7, #12]
 8003576:	697a      	ldr	r2, [r7, #20]
 8003578:	621a      	str	r2, [r3, #32]
 800357a:	bf00      	nop
 800357c:	371c      	adds	r7, #28
 800357e:	46bd      	mov	sp, r7
 8003580:	bc80      	pop	{r7}
 8003582:	4770      	bx	lr

08003584 <TIM_TI2_ConfigInputStage>:
 8003584:	b480      	push	{r7}
 8003586:	b087      	sub	sp, #28
 8003588:	af00      	add	r7, sp, #0
 800358a:	60f8      	str	r0, [r7, #12]
 800358c:	60b9      	str	r1, [r7, #8]
 800358e:	607a      	str	r2, [r7, #4]
 8003590:	68fb      	ldr	r3, [r7, #12]
 8003592:	6a1b      	ldr	r3, [r3, #32]
 8003594:	617b      	str	r3, [r7, #20]
 8003596:	68fb      	ldr	r3, [r7, #12]
 8003598:	6a1b      	ldr	r3, [r3, #32]
 800359a:	f023 0210 	bic.w	r2, r3, #16
 800359e:	68fb      	ldr	r3, [r7, #12]
 80035a0:	621a      	str	r2, [r3, #32]
 80035a2:	68fb      	ldr	r3, [r7, #12]
 80035a4:	699b      	ldr	r3, [r3, #24]
 80035a6:	613b      	str	r3, [r7, #16]
 80035a8:	693b      	ldr	r3, [r7, #16]
 80035aa:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 80035ae:	613b      	str	r3, [r7, #16]
 80035b0:	687b      	ldr	r3, [r7, #4]
 80035b2:	031b      	lsls	r3, r3, #12
 80035b4:	693a      	ldr	r2, [r7, #16]
 80035b6:	4313      	orrs	r3, r2
 80035b8:	613b      	str	r3, [r7, #16]
 80035ba:	697b      	ldr	r3, [r7, #20]
 80035bc:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 80035c0:	617b      	str	r3, [r7, #20]
 80035c2:	68bb      	ldr	r3, [r7, #8]
 80035c4:	011b      	lsls	r3, r3, #4
 80035c6:	697a      	ldr	r2, [r7, #20]
 80035c8:	4313      	orrs	r3, r2
 80035ca:	617b      	str	r3, [r7, #20]
 80035cc:	68fb      	ldr	r3, [r7, #12]
 80035ce:	693a      	ldr	r2, [r7, #16]
 80035d0:	619a      	str	r2, [r3, #24]
 80035d2:	68fb      	ldr	r3, [r7, #12]
 80035d4:	697a      	ldr	r2, [r7, #20]
 80035d6:	621a      	str	r2, [r3, #32]
 80035d8:	bf00      	nop
 80035da:	371c      	adds	r7, #28
 80035dc:	46bd      	mov	sp, r7
 80035de:	bc80      	pop	{r7}
 80035e0:	4770      	bx	lr

080035e2 <TIM_ITRx_SetConfig>:
 80035e2:	b480      	push	{r7}
 80035e4:	b085      	sub	sp, #20
 80035e6:	af00      	add	r7, sp, #0
 80035e8:	6078      	str	r0, [r7, #4]
 80035ea:	6039      	str	r1, [r7, #0]
 80035ec:	687b      	ldr	r3, [r7, #4]
 80035ee:	689b      	ldr	r3, [r3, #8]
 80035f0:	60fb      	str	r3, [r7, #12]
 80035f2:	68fb      	ldr	r3, [r7, #12]
 80035f4:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80035f8:	60fb      	str	r3, [r7, #12]
 80035fa:	683a      	ldr	r2, [r7, #0]
 80035fc:	68fb      	ldr	r3, [r7, #12]
 80035fe:	4313      	orrs	r3, r2
 8003600:	f043 0307 	orr.w	r3, r3, #7
 8003604:	60fb      	str	r3, [r7, #12]
 8003606:	687b      	ldr	r3, [r7, #4]
 8003608:	68fa      	ldr	r2, [r7, #12]
 800360a:	609a      	str	r2, [r3, #8]
 800360c:	bf00      	nop
 800360e:	3714      	adds	r7, #20
 8003610:	46bd      	mov	sp, r7
 8003612:	bc80      	pop	{r7}
 8003614:	4770      	bx	lr

08003616 <TIM_ETR_SetConfig>:
 8003616:	b480      	push	{r7}
 8003618:	b087      	sub	sp, #28
 800361a:	af00      	add	r7, sp, #0
 800361c:	60f8      	str	r0, [r7, #12]
 800361e:	60b9      	str	r1, [r7, #8]
 8003620:	607a      	str	r2, [r7, #4]
 8003622:	603b      	str	r3, [r7, #0]
 8003624:	68fb      	ldr	r3, [r7, #12]
 8003626:	689b      	ldr	r3, [r3, #8]
 8003628:	617b      	str	r3, [r7, #20]
 800362a:	697b      	ldr	r3, [r7, #20]
 800362c:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8003630:	617b      	str	r3, [r7, #20]
 8003632:	683b      	ldr	r3, [r7, #0]
 8003634:	021a      	lsls	r2, r3, #8
 8003636:	687b      	ldr	r3, [r7, #4]
 8003638:	431a      	orrs	r2, r3
 800363a:	68bb      	ldr	r3, [r7, #8]
 800363c:	4313      	orrs	r3, r2
 800363e:	697a      	ldr	r2, [r7, #20]
 8003640:	4313      	orrs	r3, r2
 8003642:	617b      	str	r3, [r7, #20]
 8003644:	68fb      	ldr	r3, [r7, #12]
 8003646:	697a      	ldr	r2, [r7, #20]
 8003648:	609a      	str	r2, [r3, #8]
 800364a:	bf00      	nop
 800364c:	371c      	adds	r7, #28
 800364e:	46bd      	mov	sp, r7
 8003650:	bc80      	pop	{r7}
 8003652:	4770      	bx	lr

08003654 <TIM_CCxChannelCmd>:
 8003654:	b480      	push	{r7}
 8003656:	b087      	sub	sp, #28
 8003658:	af00      	add	r7, sp, #0
 800365a:	60f8      	str	r0, [r7, #12]
 800365c:	60b9      	str	r1, [r7, #8]
 800365e:	607a      	str	r2, [r7, #4]
 8003660:	68bb      	ldr	r3, [r7, #8]
 8003662:	f003 031f 	and.w	r3, r3, #31
 8003666:	2201      	movs	r2, #1
 8003668:	fa02 f303 	lsl.w	r3, r2, r3
 800366c:	617b      	str	r3, [r7, #20]
 800366e:	68fb      	ldr	r3, [r7, #12]
 8003670:	6a1a      	ldr	r2, [r3, #32]
 8003672:	697b      	ldr	r3, [r7, #20]
 8003674:	43db      	mvns	r3, r3
 8003676:	401a      	ands	r2, r3
 8003678:	68fb      	ldr	r3, [r7, #12]
 800367a:	621a      	str	r2, [r3, #32]
 800367c:	68fb      	ldr	r3, [r7, #12]
 800367e:	6a1a      	ldr	r2, [r3, #32]
 8003680:	68bb      	ldr	r3, [r7, #8]
 8003682:	f003 031f 	and.w	r3, r3, #31
 8003686:	6879      	ldr	r1, [r7, #4]
 8003688:	fa01 f303 	lsl.w	r3, r1, r3
 800368c:	431a      	orrs	r2, r3
 800368e:	68fb      	ldr	r3, [r7, #12]
 8003690:	621a      	str	r2, [r3, #32]
 8003692:	bf00      	nop
 8003694:	371c      	adds	r7, #28
 8003696:	46bd      	mov	sp, r7
 8003698:	bc80      	pop	{r7}
 800369a:	4770      	bx	lr

0800369c <HAL_TIMEx_MasterConfigSynchronization>:
 800369c:	b480      	push	{r7}
 800369e:	b085      	sub	sp, #20
 80036a0:	af00      	add	r7, sp, #0
 80036a2:	6078      	str	r0, [r7, #4]
 80036a4:	6039      	str	r1, [r7, #0]
 80036a6:	687b      	ldr	r3, [r7, #4]
 80036a8:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80036ac:	2b01      	cmp	r3, #1
 80036ae:	d101      	bne.n	80036b4 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80036b0:	2302      	movs	r3, #2
 80036b2:	e046      	b.n	8003742 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 80036b4:	687b      	ldr	r3, [r7, #4]
 80036b6:	2201      	movs	r2, #1
 80036b8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80036bc:	687b      	ldr	r3, [r7, #4]
 80036be:	2202      	movs	r2, #2
 80036c0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80036c4:	687b      	ldr	r3, [r7, #4]
 80036c6:	681b      	ldr	r3, [r3, #0]
 80036c8:	685b      	ldr	r3, [r3, #4]
 80036ca:	60fb      	str	r3, [r7, #12]
 80036cc:	687b      	ldr	r3, [r7, #4]
 80036ce:	681b      	ldr	r3, [r3, #0]
 80036d0:	689b      	ldr	r3, [r3, #8]
 80036d2:	60bb      	str	r3, [r7, #8]
 80036d4:	68fb      	ldr	r3, [r7, #12]
 80036d6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80036da:	60fb      	str	r3, [r7, #12]
 80036dc:	683b      	ldr	r3, [r7, #0]
 80036de:	681b      	ldr	r3, [r3, #0]
 80036e0:	68fa      	ldr	r2, [r7, #12]
 80036e2:	4313      	orrs	r3, r2
 80036e4:	60fb      	str	r3, [r7, #12]
 80036e6:	687b      	ldr	r3, [r7, #4]
 80036e8:	681b      	ldr	r3, [r3, #0]
 80036ea:	68fa      	ldr	r2, [r7, #12]
 80036ec:	605a      	str	r2, [r3, #4]
 80036ee:	687b      	ldr	r3, [r7, #4]
 80036f0:	681b      	ldr	r3, [r3, #0]
 80036f2:	4a16      	ldr	r2, [pc, #88]	@ (800374c <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 80036f4:	4293      	cmp	r3, r2
 80036f6:	d00e      	beq.n	8003716 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80036f8:	687b      	ldr	r3, [r7, #4]
 80036fa:	681b      	ldr	r3, [r3, #0]
 80036fc:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003700:	d009      	beq.n	8003716 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003702:	687b      	ldr	r3, [r7, #4]
 8003704:	681b      	ldr	r3, [r3, #0]
 8003706:	4a12      	ldr	r2, [pc, #72]	@ (8003750 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8003708:	4293      	cmp	r3, r2
 800370a:	d004      	beq.n	8003716 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 800370c:	687b      	ldr	r3, [r7, #4]
 800370e:	681b      	ldr	r3, [r3, #0]
 8003710:	4a10      	ldr	r2, [pc, #64]	@ (8003754 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8003712:	4293      	cmp	r3, r2
 8003714:	d10c      	bne.n	8003730 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8003716:	68bb      	ldr	r3, [r7, #8]
 8003718:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800371c:	60bb      	str	r3, [r7, #8]
 800371e:	683b      	ldr	r3, [r7, #0]
 8003720:	685b      	ldr	r3, [r3, #4]
 8003722:	68ba      	ldr	r2, [r7, #8]
 8003724:	4313      	orrs	r3, r2
 8003726:	60bb      	str	r3, [r7, #8]
 8003728:	687b      	ldr	r3, [r7, #4]
 800372a:	681b      	ldr	r3, [r3, #0]
 800372c:	68ba      	ldr	r2, [r7, #8]
 800372e:	609a      	str	r2, [r3, #8]
 8003730:	687b      	ldr	r3, [r7, #4]
 8003732:	2201      	movs	r2, #1
 8003734:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003738:	687b      	ldr	r3, [r7, #4]
 800373a:	2200      	movs	r2, #0
 800373c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003740:	2300      	movs	r3, #0
 8003742:	4618      	mov	r0, r3
 8003744:	3714      	adds	r7, #20
 8003746:	46bd      	mov	sp, r7
 8003748:	bc80      	pop	{r7}
 800374a:	4770      	bx	lr
 800374c:	40012c00 	.word	0x40012c00
 8003750:	40000400 	.word	0x40000400
 8003754:	40000800 	.word	0x40000800

08003758 <HAL_TIMEx_ConfigBreakDeadTime>:
 8003758:	b480      	push	{r7}
 800375a:	b085      	sub	sp, #20
 800375c:	af00      	add	r7, sp, #0
 800375e:	6078      	str	r0, [r7, #4]
 8003760:	6039      	str	r1, [r7, #0]
 8003762:	2300      	movs	r3, #0
 8003764:	60fb      	str	r3, [r7, #12]
 8003766:	687b      	ldr	r3, [r7, #4]
 8003768:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800376c:	2b01      	cmp	r3, #1
 800376e:	d101      	bne.n	8003774 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8003770:	2302      	movs	r3, #2
 8003772:	e03d      	b.n	80037f0 <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 8003774:	687b      	ldr	r3, [r7, #4]
 8003776:	2201      	movs	r2, #1
 8003778:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800377c:	68fb      	ldr	r3, [r7, #12]
 800377e:	f023 02ff 	bic.w	r2, r3, #255	@ 0xff
 8003782:	683b      	ldr	r3, [r7, #0]
 8003784:	68db      	ldr	r3, [r3, #12]
 8003786:	4313      	orrs	r3, r2
 8003788:	60fb      	str	r3, [r7, #12]
 800378a:	68fb      	ldr	r3, [r7, #12]
 800378c:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8003790:	683b      	ldr	r3, [r7, #0]
 8003792:	689b      	ldr	r3, [r3, #8]
 8003794:	4313      	orrs	r3, r2
 8003796:	60fb      	str	r3, [r7, #12]
 8003798:	68fb      	ldr	r3, [r7, #12]
 800379a:	f423 6280 	bic.w	r2, r3, #1024	@ 0x400
 800379e:	683b      	ldr	r3, [r7, #0]
 80037a0:	685b      	ldr	r3, [r3, #4]
 80037a2:	4313      	orrs	r3, r2
 80037a4:	60fb      	str	r3, [r7, #12]
 80037a6:	68fb      	ldr	r3, [r7, #12]
 80037a8:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 80037ac:	683b      	ldr	r3, [r7, #0]
 80037ae:	681b      	ldr	r3, [r3, #0]
 80037b0:	4313      	orrs	r3, r2
 80037b2:	60fb      	str	r3, [r7, #12]
 80037b4:	68fb      	ldr	r3, [r7, #12]
 80037b6:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 80037ba:	683b      	ldr	r3, [r7, #0]
 80037bc:	691b      	ldr	r3, [r3, #16]
 80037be:	4313      	orrs	r3, r2
 80037c0:	60fb      	str	r3, [r7, #12]
 80037c2:	68fb      	ldr	r3, [r7, #12]
 80037c4:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 80037c8:	683b      	ldr	r3, [r7, #0]
 80037ca:	695b      	ldr	r3, [r3, #20]
 80037cc:	4313      	orrs	r3, r2
 80037ce:	60fb      	str	r3, [r7, #12]
 80037d0:	68fb      	ldr	r3, [r7, #12]
 80037d2:	f423 4280 	bic.w	r2, r3, #16384	@ 0x4000
 80037d6:	683b      	ldr	r3, [r7, #0]
 80037d8:	69db      	ldr	r3, [r3, #28]
 80037da:	4313      	orrs	r3, r2
 80037dc:	60fb      	str	r3, [r7, #12]
 80037de:	687b      	ldr	r3, [r7, #4]
 80037e0:	681b      	ldr	r3, [r3, #0]
 80037e2:	68fa      	ldr	r2, [r7, #12]
 80037e4:	645a      	str	r2, [r3, #68]	@ 0x44
 80037e6:	687b      	ldr	r3, [r7, #4]
 80037e8:	2200      	movs	r2, #0
 80037ea:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80037ee:	2300      	movs	r3, #0
 80037f0:	4618      	mov	r0, r3
 80037f2:	3714      	adds	r7, #20
 80037f4:	46bd      	mov	sp, r7
 80037f6:	bc80      	pop	{r7}
 80037f8:	4770      	bx	lr

080037fa <HAL_TIMEx_CommutCallback>:
 80037fa:	b480      	push	{r7}
 80037fc:	b083      	sub	sp, #12
 80037fe:	af00      	add	r7, sp, #0
 8003800:	6078      	str	r0, [r7, #4]
 8003802:	bf00      	nop
 8003804:	370c      	adds	r7, #12
 8003806:	46bd      	mov	sp, r7
 8003808:	bc80      	pop	{r7}
 800380a:	4770      	bx	lr

0800380c <HAL_TIMEx_BreakCallback>:
 800380c:	b480      	push	{r7}
 800380e:	b083      	sub	sp, #12
 8003810:	af00      	add	r7, sp, #0
 8003812:	6078      	str	r0, [r7, #4]
 8003814:	bf00      	nop
 8003816:	370c      	adds	r7, #12
 8003818:	46bd      	mov	sp, r7
 800381a:	bc80      	pop	{r7}
 800381c:	4770      	bx	lr

0800381e <HAL_UART_Init>:
 800381e:	b580      	push	{r7, lr}
 8003820:	b082      	sub	sp, #8
 8003822:	af00      	add	r7, sp, #0
 8003824:	6078      	str	r0, [r7, #4]
 8003826:	687b      	ldr	r3, [r7, #4]
 8003828:	2b00      	cmp	r3, #0
 800382a:	d101      	bne.n	8003830 <HAL_UART_Init+0x12>
 800382c:	2301      	movs	r3, #1
 800382e:	e042      	b.n	80038b6 <HAL_UART_Init+0x98>
 8003830:	687b      	ldr	r3, [r7, #4]
 8003832:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003836:	b2db      	uxtb	r3, r3
 8003838:	2b00      	cmp	r3, #0
 800383a:	d106      	bne.n	800384a <HAL_UART_Init+0x2c>
 800383c:	687b      	ldr	r3, [r7, #4]
 800383e:	2200      	movs	r2, #0
 8003840:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003844:	6878      	ldr	r0, [r7, #4]
 8003846:	f7fd fef5 	bl	8001634 <HAL_UART_MspInit>
 800384a:	687b      	ldr	r3, [r7, #4]
 800384c:	2224      	movs	r2, #36	@ 0x24
 800384e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003852:	687b      	ldr	r3, [r7, #4]
 8003854:	681b      	ldr	r3, [r3, #0]
 8003856:	68da      	ldr	r2, [r3, #12]
 8003858:	687b      	ldr	r3, [r7, #4]
 800385a:	681b      	ldr	r3, [r3, #0]
 800385c:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8003860:	60da      	str	r2, [r3, #12]
 8003862:	6878      	ldr	r0, [r7, #4]
 8003864:	f000 fdb0 	bl	80043c8 <UART_SetConfig>
 8003868:	687b      	ldr	r3, [r7, #4]
 800386a:	681b      	ldr	r3, [r3, #0]
 800386c:	691a      	ldr	r2, [r3, #16]
 800386e:	687b      	ldr	r3, [r7, #4]
 8003870:	681b      	ldr	r3, [r3, #0]
 8003872:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8003876:	611a      	str	r2, [r3, #16]
 8003878:	687b      	ldr	r3, [r7, #4]
 800387a:	681b      	ldr	r3, [r3, #0]
 800387c:	695a      	ldr	r2, [r3, #20]
 800387e:	687b      	ldr	r3, [r7, #4]
 8003880:	681b      	ldr	r3, [r3, #0]
 8003882:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8003886:	615a      	str	r2, [r3, #20]
 8003888:	687b      	ldr	r3, [r7, #4]
 800388a:	681b      	ldr	r3, [r3, #0]
 800388c:	68da      	ldr	r2, [r3, #12]
 800388e:	687b      	ldr	r3, [r7, #4]
 8003890:	681b      	ldr	r3, [r3, #0]
 8003892:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8003896:	60da      	str	r2, [r3, #12]
 8003898:	687b      	ldr	r3, [r7, #4]
 800389a:	2200      	movs	r2, #0
 800389c:	645a      	str	r2, [r3, #68]	@ 0x44
 800389e:	687b      	ldr	r3, [r7, #4]
 80038a0:	2220      	movs	r2, #32
 80038a2:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80038a6:	687b      	ldr	r3, [r7, #4]
 80038a8:	2220      	movs	r2, #32
 80038aa:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80038ae:	687b      	ldr	r3, [r7, #4]
 80038b0:	2200      	movs	r2, #0
 80038b2:	635a      	str	r2, [r3, #52]	@ 0x34
 80038b4:	2300      	movs	r3, #0
 80038b6:	4618      	mov	r0, r3
 80038b8:	3708      	adds	r7, #8
 80038ba:	46bd      	mov	sp, r7
 80038bc:	bd80      	pop	{r7, pc}

080038be <HAL_UART_Transmit>:
 80038be:	b580      	push	{r7, lr}
 80038c0:	b08a      	sub	sp, #40	@ 0x28
 80038c2:	af02      	add	r7, sp, #8
 80038c4:	60f8      	str	r0, [r7, #12]
 80038c6:	60b9      	str	r1, [r7, #8]
 80038c8:	603b      	str	r3, [r7, #0]
 80038ca:	4613      	mov	r3, r2
 80038cc:	80fb      	strh	r3, [r7, #6]
 80038ce:	2300      	movs	r3, #0
 80038d0:	617b      	str	r3, [r7, #20]
 80038d2:	68fb      	ldr	r3, [r7, #12]
 80038d4:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80038d8:	b2db      	uxtb	r3, r3
 80038da:	2b20      	cmp	r3, #32
 80038dc:	d175      	bne.n	80039ca <HAL_UART_Transmit+0x10c>
 80038de:	68bb      	ldr	r3, [r7, #8]
 80038e0:	2b00      	cmp	r3, #0
 80038e2:	d002      	beq.n	80038ea <HAL_UART_Transmit+0x2c>
 80038e4:	88fb      	ldrh	r3, [r7, #6]
 80038e6:	2b00      	cmp	r3, #0
 80038e8:	d101      	bne.n	80038ee <HAL_UART_Transmit+0x30>
 80038ea:	2301      	movs	r3, #1
 80038ec:	e06e      	b.n	80039cc <HAL_UART_Transmit+0x10e>
 80038ee:	68fb      	ldr	r3, [r7, #12]
 80038f0:	2200      	movs	r2, #0
 80038f2:	645a      	str	r2, [r3, #68]	@ 0x44
 80038f4:	68fb      	ldr	r3, [r7, #12]
 80038f6:	2221      	movs	r2, #33	@ 0x21
 80038f8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80038fc:	f7fe f854 	bl	80019a8 <HAL_GetTick>
 8003900:	6178      	str	r0, [r7, #20]
 8003902:	68fb      	ldr	r3, [r7, #12]
 8003904:	88fa      	ldrh	r2, [r7, #6]
 8003906:	849a      	strh	r2, [r3, #36]	@ 0x24
 8003908:	68fb      	ldr	r3, [r7, #12]
 800390a:	88fa      	ldrh	r2, [r7, #6]
 800390c:	84da      	strh	r2, [r3, #38]	@ 0x26
 800390e:	68fb      	ldr	r3, [r7, #12]
 8003910:	689b      	ldr	r3, [r3, #8]
 8003912:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003916:	d108      	bne.n	800392a <HAL_UART_Transmit+0x6c>
 8003918:	68fb      	ldr	r3, [r7, #12]
 800391a:	691b      	ldr	r3, [r3, #16]
 800391c:	2b00      	cmp	r3, #0
 800391e:	d104      	bne.n	800392a <HAL_UART_Transmit+0x6c>
 8003920:	2300      	movs	r3, #0
 8003922:	61fb      	str	r3, [r7, #28]
 8003924:	68bb      	ldr	r3, [r7, #8]
 8003926:	61bb      	str	r3, [r7, #24]
 8003928:	e003      	b.n	8003932 <HAL_UART_Transmit+0x74>
 800392a:	68bb      	ldr	r3, [r7, #8]
 800392c:	61fb      	str	r3, [r7, #28]
 800392e:	2300      	movs	r3, #0
 8003930:	61bb      	str	r3, [r7, #24]
 8003932:	e02e      	b.n	8003992 <HAL_UART_Transmit+0xd4>
 8003934:	683b      	ldr	r3, [r7, #0]
 8003936:	9300      	str	r3, [sp, #0]
 8003938:	697b      	ldr	r3, [r7, #20]
 800393a:	2200      	movs	r2, #0
 800393c:	2180      	movs	r1, #128	@ 0x80
 800393e:	68f8      	ldr	r0, [r7, #12]
 8003940:	f000 fb14 	bl	8003f6c <UART_WaitOnFlagUntilTimeout>
 8003944:	4603      	mov	r3, r0
 8003946:	2b00      	cmp	r3, #0
 8003948:	d005      	beq.n	8003956 <HAL_UART_Transmit+0x98>
 800394a:	68fb      	ldr	r3, [r7, #12]
 800394c:	2220      	movs	r2, #32
 800394e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003952:	2303      	movs	r3, #3
 8003954:	e03a      	b.n	80039cc <HAL_UART_Transmit+0x10e>
 8003956:	69fb      	ldr	r3, [r7, #28]
 8003958:	2b00      	cmp	r3, #0
 800395a:	d10b      	bne.n	8003974 <HAL_UART_Transmit+0xb6>
 800395c:	69bb      	ldr	r3, [r7, #24]
 800395e:	881b      	ldrh	r3, [r3, #0]
 8003960:	461a      	mov	r2, r3
 8003962:	68fb      	ldr	r3, [r7, #12]
 8003964:	681b      	ldr	r3, [r3, #0]
 8003966:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800396a:	605a      	str	r2, [r3, #4]
 800396c:	69bb      	ldr	r3, [r7, #24]
 800396e:	3302      	adds	r3, #2
 8003970:	61bb      	str	r3, [r7, #24]
 8003972:	e007      	b.n	8003984 <HAL_UART_Transmit+0xc6>
 8003974:	69fb      	ldr	r3, [r7, #28]
 8003976:	781a      	ldrb	r2, [r3, #0]
 8003978:	68fb      	ldr	r3, [r7, #12]
 800397a:	681b      	ldr	r3, [r3, #0]
 800397c:	605a      	str	r2, [r3, #4]
 800397e:	69fb      	ldr	r3, [r7, #28]
 8003980:	3301      	adds	r3, #1
 8003982:	61fb      	str	r3, [r7, #28]
 8003984:	68fb      	ldr	r3, [r7, #12]
 8003986:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8003988:	b29b      	uxth	r3, r3
 800398a:	3b01      	subs	r3, #1
 800398c:	b29a      	uxth	r2, r3
 800398e:	68fb      	ldr	r3, [r7, #12]
 8003990:	84da      	strh	r2, [r3, #38]	@ 0x26
 8003992:	68fb      	ldr	r3, [r7, #12]
 8003994:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8003996:	b29b      	uxth	r3, r3
 8003998:	2b00      	cmp	r3, #0
 800399a:	d1cb      	bne.n	8003934 <HAL_UART_Transmit+0x76>
 800399c:	683b      	ldr	r3, [r7, #0]
 800399e:	9300      	str	r3, [sp, #0]
 80039a0:	697b      	ldr	r3, [r7, #20]
 80039a2:	2200      	movs	r2, #0
 80039a4:	2140      	movs	r1, #64	@ 0x40
 80039a6:	68f8      	ldr	r0, [r7, #12]
 80039a8:	f000 fae0 	bl	8003f6c <UART_WaitOnFlagUntilTimeout>
 80039ac:	4603      	mov	r3, r0
 80039ae:	2b00      	cmp	r3, #0
 80039b0:	d005      	beq.n	80039be <HAL_UART_Transmit+0x100>
 80039b2:	68fb      	ldr	r3, [r7, #12]
 80039b4:	2220      	movs	r2, #32
 80039b6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80039ba:	2303      	movs	r3, #3
 80039bc:	e006      	b.n	80039cc <HAL_UART_Transmit+0x10e>
 80039be:	68fb      	ldr	r3, [r7, #12]
 80039c0:	2220      	movs	r2, #32
 80039c2:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80039c6:	2300      	movs	r3, #0
 80039c8:	e000      	b.n	80039cc <HAL_UART_Transmit+0x10e>
 80039ca:	2302      	movs	r3, #2
 80039cc:	4618      	mov	r0, r3
 80039ce:	3720      	adds	r7, #32
 80039d0:	46bd      	mov	sp, r7
 80039d2:	bd80      	pop	{r7, pc}

080039d4 <HAL_UART_Receive_IT>:
 80039d4:	b580      	push	{r7, lr}
 80039d6:	b084      	sub	sp, #16
 80039d8:	af00      	add	r7, sp, #0
 80039da:	60f8      	str	r0, [r7, #12]
 80039dc:	60b9      	str	r1, [r7, #8]
 80039de:	4613      	mov	r3, r2
 80039e0:	80fb      	strh	r3, [r7, #6]
 80039e2:	68fb      	ldr	r3, [r7, #12]
 80039e4:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80039e8:	b2db      	uxtb	r3, r3
 80039ea:	2b20      	cmp	r3, #32
 80039ec:	d112      	bne.n	8003a14 <HAL_UART_Receive_IT+0x40>
 80039ee:	68bb      	ldr	r3, [r7, #8]
 80039f0:	2b00      	cmp	r3, #0
 80039f2:	d002      	beq.n	80039fa <HAL_UART_Receive_IT+0x26>
 80039f4:	88fb      	ldrh	r3, [r7, #6]
 80039f6:	2b00      	cmp	r3, #0
 80039f8:	d101      	bne.n	80039fe <HAL_UART_Receive_IT+0x2a>
 80039fa:	2301      	movs	r3, #1
 80039fc:	e00b      	b.n	8003a16 <HAL_UART_Receive_IT+0x42>
 80039fe:	68fb      	ldr	r3, [r7, #12]
 8003a00:	2200      	movs	r2, #0
 8003a02:	631a      	str	r2, [r3, #48]	@ 0x30
 8003a04:	88fb      	ldrh	r3, [r7, #6]
 8003a06:	461a      	mov	r2, r3
 8003a08:	68b9      	ldr	r1, [r7, #8]
 8003a0a:	68f8      	ldr	r0, [r7, #12]
 8003a0c:	f000 fb07 	bl	800401e <UART_Start_Receive_IT>
 8003a10:	4603      	mov	r3, r0
 8003a12:	e000      	b.n	8003a16 <HAL_UART_Receive_IT+0x42>
 8003a14:	2302      	movs	r3, #2
 8003a16:	4618      	mov	r0, r3
 8003a18:	3710      	adds	r7, #16
 8003a1a:	46bd      	mov	sp, r7
 8003a1c:	bd80      	pop	{r7, pc}
	...

08003a20 <HAL_UART_IRQHandler>:
 8003a20:	b580      	push	{r7, lr}
 8003a22:	b0ba      	sub	sp, #232	@ 0xe8
 8003a24:	af00      	add	r7, sp, #0
 8003a26:	6078      	str	r0, [r7, #4]
 8003a28:	687b      	ldr	r3, [r7, #4]
 8003a2a:	681b      	ldr	r3, [r3, #0]
 8003a2c:	681b      	ldr	r3, [r3, #0]
 8003a2e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8003a32:	687b      	ldr	r3, [r7, #4]
 8003a34:	681b      	ldr	r3, [r3, #0]
 8003a36:	68db      	ldr	r3, [r3, #12]
 8003a38:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8003a3c:	687b      	ldr	r3, [r7, #4]
 8003a3e:	681b      	ldr	r3, [r3, #0]
 8003a40:	695b      	ldr	r3, [r3, #20]
 8003a42:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8003a46:	2300      	movs	r3, #0
 8003a48:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8003a4c:	2300      	movs	r3, #0
 8003a4e:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8003a52:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003a56:	f003 030f 	and.w	r3, r3, #15
 8003a5a:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8003a5e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8003a62:	2b00      	cmp	r3, #0
 8003a64:	d10f      	bne.n	8003a86 <HAL_UART_IRQHandler+0x66>
 8003a66:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003a6a:	f003 0320 	and.w	r3, r3, #32
 8003a6e:	2b00      	cmp	r3, #0
 8003a70:	d009      	beq.n	8003a86 <HAL_UART_IRQHandler+0x66>
 8003a72:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003a76:	f003 0320 	and.w	r3, r3, #32
 8003a7a:	2b00      	cmp	r3, #0
 8003a7c:	d003      	beq.n	8003a86 <HAL_UART_IRQHandler+0x66>
 8003a7e:	6878      	ldr	r0, [r7, #4]
 8003a80:	f000 fbe3 	bl	800424a <UART_Receive_IT>
 8003a84:	e25b      	b.n	8003f3e <HAL_UART_IRQHandler+0x51e>
 8003a86:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8003a8a:	2b00      	cmp	r3, #0
 8003a8c:	f000 80de 	beq.w	8003c4c <HAL_UART_IRQHandler+0x22c>
 8003a90:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8003a94:	f003 0301 	and.w	r3, r3, #1
 8003a98:	2b00      	cmp	r3, #0
 8003a9a:	d106      	bne.n	8003aaa <HAL_UART_IRQHandler+0x8a>
 8003a9c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003aa0:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8003aa4:	2b00      	cmp	r3, #0
 8003aa6:	f000 80d1 	beq.w	8003c4c <HAL_UART_IRQHandler+0x22c>
 8003aaa:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003aae:	f003 0301 	and.w	r3, r3, #1
 8003ab2:	2b00      	cmp	r3, #0
 8003ab4:	d00b      	beq.n	8003ace <HAL_UART_IRQHandler+0xae>
 8003ab6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003aba:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003abe:	2b00      	cmp	r3, #0
 8003ac0:	d005      	beq.n	8003ace <HAL_UART_IRQHandler+0xae>
 8003ac2:	687b      	ldr	r3, [r7, #4]
 8003ac4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003ac6:	f043 0201 	orr.w	r2, r3, #1
 8003aca:	687b      	ldr	r3, [r7, #4]
 8003acc:	645a      	str	r2, [r3, #68]	@ 0x44
 8003ace:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003ad2:	f003 0304 	and.w	r3, r3, #4
 8003ad6:	2b00      	cmp	r3, #0
 8003ad8:	d00b      	beq.n	8003af2 <HAL_UART_IRQHandler+0xd2>
 8003ada:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8003ade:	f003 0301 	and.w	r3, r3, #1
 8003ae2:	2b00      	cmp	r3, #0
 8003ae4:	d005      	beq.n	8003af2 <HAL_UART_IRQHandler+0xd2>
 8003ae6:	687b      	ldr	r3, [r7, #4]
 8003ae8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003aea:	f043 0202 	orr.w	r2, r3, #2
 8003aee:	687b      	ldr	r3, [r7, #4]
 8003af0:	645a      	str	r2, [r3, #68]	@ 0x44
 8003af2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003af6:	f003 0302 	and.w	r3, r3, #2
 8003afa:	2b00      	cmp	r3, #0
 8003afc:	d00b      	beq.n	8003b16 <HAL_UART_IRQHandler+0xf6>
 8003afe:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8003b02:	f003 0301 	and.w	r3, r3, #1
 8003b06:	2b00      	cmp	r3, #0
 8003b08:	d005      	beq.n	8003b16 <HAL_UART_IRQHandler+0xf6>
 8003b0a:	687b      	ldr	r3, [r7, #4]
 8003b0c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003b0e:	f043 0204 	orr.w	r2, r3, #4
 8003b12:	687b      	ldr	r3, [r7, #4]
 8003b14:	645a      	str	r2, [r3, #68]	@ 0x44
 8003b16:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003b1a:	f003 0308 	and.w	r3, r3, #8
 8003b1e:	2b00      	cmp	r3, #0
 8003b20:	d011      	beq.n	8003b46 <HAL_UART_IRQHandler+0x126>
 8003b22:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003b26:	f003 0320 	and.w	r3, r3, #32
 8003b2a:	2b00      	cmp	r3, #0
 8003b2c:	d105      	bne.n	8003b3a <HAL_UART_IRQHandler+0x11a>
 8003b2e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8003b32:	f003 0301 	and.w	r3, r3, #1
 8003b36:	2b00      	cmp	r3, #0
 8003b38:	d005      	beq.n	8003b46 <HAL_UART_IRQHandler+0x126>
 8003b3a:	687b      	ldr	r3, [r7, #4]
 8003b3c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003b3e:	f043 0208 	orr.w	r2, r3, #8
 8003b42:	687b      	ldr	r3, [r7, #4]
 8003b44:	645a      	str	r2, [r3, #68]	@ 0x44
 8003b46:	687b      	ldr	r3, [r7, #4]
 8003b48:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003b4a:	2b00      	cmp	r3, #0
 8003b4c:	f000 81f2 	beq.w	8003f34 <HAL_UART_IRQHandler+0x514>
 8003b50:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003b54:	f003 0320 	and.w	r3, r3, #32
 8003b58:	2b00      	cmp	r3, #0
 8003b5a:	d008      	beq.n	8003b6e <HAL_UART_IRQHandler+0x14e>
 8003b5c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003b60:	f003 0320 	and.w	r3, r3, #32
 8003b64:	2b00      	cmp	r3, #0
 8003b66:	d002      	beq.n	8003b6e <HAL_UART_IRQHandler+0x14e>
 8003b68:	6878      	ldr	r0, [r7, #4]
 8003b6a:	f000 fb6e 	bl	800424a <UART_Receive_IT>
 8003b6e:	687b      	ldr	r3, [r7, #4]
 8003b70:	681b      	ldr	r3, [r3, #0]
 8003b72:	695b      	ldr	r3, [r3, #20]
 8003b74:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003b78:	2b00      	cmp	r3, #0
 8003b7a:	bf14      	ite	ne
 8003b7c:	2301      	movne	r3, #1
 8003b7e:	2300      	moveq	r3, #0
 8003b80:	b2db      	uxtb	r3, r3
 8003b82:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8003b86:	687b      	ldr	r3, [r7, #4]
 8003b88:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003b8a:	f003 0308 	and.w	r3, r3, #8
 8003b8e:	2b00      	cmp	r3, #0
 8003b90:	d103      	bne.n	8003b9a <HAL_UART_IRQHandler+0x17a>
 8003b92:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8003b96:	2b00      	cmp	r3, #0
 8003b98:	d04f      	beq.n	8003c3a <HAL_UART_IRQHandler+0x21a>
 8003b9a:	6878      	ldr	r0, [r7, #4]
 8003b9c:	f000 fa78 	bl	8004090 <UART_EndRxTransfer>
 8003ba0:	687b      	ldr	r3, [r7, #4]
 8003ba2:	681b      	ldr	r3, [r3, #0]
 8003ba4:	695b      	ldr	r3, [r3, #20]
 8003ba6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003baa:	2b00      	cmp	r3, #0
 8003bac:	d041      	beq.n	8003c32 <HAL_UART_IRQHandler+0x212>
 8003bae:	687b      	ldr	r3, [r7, #4]
 8003bb0:	681b      	ldr	r3, [r3, #0]
 8003bb2:	3314      	adds	r3, #20
 8003bb4:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8003bb8:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8003bbc:	e853 3f00 	ldrex	r3, [r3]
 8003bc0:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8003bc4:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8003bc8:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8003bcc:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8003bd0:	687b      	ldr	r3, [r7, #4]
 8003bd2:	681b      	ldr	r3, [r3, #0]
 8003bd4:	3314      	adds	r3, #20
 8003bd6:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 8003bda:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 8003bde:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8003be2:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 8003be6:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 8003bea:	e841 2300 	strex	r3, r2, [r1]
 8003bee:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8003bf2:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8003bf6:	2b00      	cmp	r3, #0
 8003bf8:	d1d9      	bne.n	8003bae <HAL_UART_IRQHandler+0x18e>
 8003bfa:	687b      	ldr	r3, [r7, #4]
 8003bfc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003bfe:	2b00      	cmp	r3, #0
 8003c00:	d013      	beq.n	8003c2a <HAL_UART_IRQHandler+0x20a>
 8003c02:	687b      	ldr	r3, [r7, #4]
 8003c04:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003c06:	4a7e      	ldr	r2, [pc, #504]	@ (8003e00 <HAL_UART_IRQHandler+0x3e0>)
 8003c08:	635a      	str	r2, [r3, #52]	@ 0x34
 8003c0a:	687b      	ldr	r3, [r7, #4]
 8003c0c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003c0e:	4618      	mov	r0, r3
 8003c10:	f7fe f81c 	bl	8001c4c <HAL_DMA_Abort_IT>
 8003c14:	4603      	mov	r3, r0
 8003c16:	2b00      	cmp	r3, #0
 8003c18:	d016      	beq.n	8003c48 <HAL_UART_IRQHandler+0x228>
 8003c1a:	687b      	ldr	r3, [r7, #4]
 8003c1c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003c1e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003c20:	687a      	ldr	r2, [r7, #4]
 8003c22:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8003c24:	4610      	mov	r0, r2
 8003c26:	4798      	blx	r3
 8003c28:	e00e      	b.n	8003c48 <HAL_UART_IRQHandler+0x228>
 8003c2a:	6878      	ldr	r0, [r7, #4]
 8003c2c:	f7fc ff9c 	bl	8000b68 <HAL_UART_ErrorCallback>
 8003c30:	e00a      	b.n	8003c48 <HAL_UART_IRQHandler+0x228>
 8003c32:	6878      	ldr	r0, [r7, #4]
 8003c34:	f7fc ff98 	bl	8000b68 <HAL_UART_ErrorCallback>
 8003c38:	e006      	b.n	8003c48 <HAL_UART_IRQHandler+0x228>
 8003c3a:	6878      	ldr	r0, [r7, #4]
 8003c3c:	f7fc ff94 	bl	8000b68 <HAL_UART_ErrorCallback>
 8003c40:	687b      	ldr	r3, [r7, #4]
 8003c42:	2200      	movs	r2, #0
 8003c44:	645a      	str	r2, [r3, #68]	@ 0x44
 8003c46:	e175      	b.n	8003f34 <HAL_UART_IRQHandler+0x514>
 8003c48:	bf00      	nop
 8003c4a:	e173      	b.n	8003f34 <HAL_UART_IRQHandler+0x514>
 8003c4c:	687b      	ldr	r3, [r7, #4]
 8003c4e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003c50:	2b01      	cmp	r3, #1
 8003c52:	f040 814f 	bne.w	8003ef4 <HAL_UART_IRQHandler+0x4d4>
 8003c56:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003c5a:	f003 0310 	and.w	r3, r3, #16
 8003c5e:	2b00      	cmp	r3, #0
 8003c60:	f000 8148 	beq.w	8003ef4 <HAL_UART_IRQHandler+0x4d4>
 8003c64:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003c68:	f003 0310 	and.w	r3, r3, #16
 8003c6c:	2b00      	cmp	r3, #0
 8003c6e:	f000 8141 	beq.w	8003ef4 <HAL_UART_IRQHandler+0x4d4>
 8003c72:	2300      	movs	r3, #0
 8003c74:	60bb      	str	r3, [r7, #8]
 8003c76:	687b      	ldr	r3, [r7, #4]
 8003c78:	681b      	ldr	r3, [r3, #0]
 8003c7a:	681b      	ldr	r3, [r3, #0]
 8003c7c:	60bb      	str	r3, [r7, #8]
 8003c7e:	687b      	ldr	r3, [r7, #4]
 8003c80:	681b      	ldr	r3, [r3, #0]
 8003c82:	685b      	ldr	r3, [r3, #4]
 8003c84:	60bb      	str	r3, [r7, #8]
 8003c86:	68bb      	ldr	r3, [r7, #8]
 8003c88:	687b      	ldr	r3, [r7, #4]
 8003c8a:	681b      	ldr	r3, [r3, #0]
 8003c8c:	695b      	ldr	r3, [r3, #20]
 8003c8e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003c92:	2b00      	cmp	r3, #0
 8003c94:	f000 80b6 	beq.w	8003e04 <HAL_UART_IRQHandler+0x3e4>
 8003c98:	687b      	ldr	r3, [r7, #4]
 8003c9a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003c9c:	681b      	ldr	r3, [r3, #0]
 8003c9e:	685b      	ldr	r3, [r3, #4]
 8003ca0:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8003ca4:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8003ca8:	2b00      	cmp	r3, #0
 8003caa:	f000 8145 	beq.w	8003f38 <HAL_UART_IRQHandler+0x518>
 8003cae:	687b      	ldr	r3, [r7, #4]
 8003cb0:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8003cb2:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8003cb6:	429a      	cmp	r2, r3
 8003cb8:	f080 813e 	bcs.w	8003f38 <HAL_UART_IRQHandler+0x518>
 8003cbc:	687b      	ldr	r3, [r7, #4]
 8003cbe:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8003cc2:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8003cc4:	687b      	ldr	r3, [r7, #4]
 8003cc6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003cc8:	699b      	ldr	r3, [r3, #24]
 8003cca:	2b20      	cmp	r3, #32
 8003ccc:	f000 8088 	beq.w	8003de0 <HAL_UART_IRQHandler+0x3c0>
 8003cd0:	687b      	ldr	r3, [r7, #4]
 8003cd2:	681b      	ldr	r3, [r3, #0]
 8003cd4:	330c      	adds	r3, #12
 8003cd6:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8003cda:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8003cde:	e853 3f00 	ldrex	r3, [r3]
 8003ce2:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8003ce6:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8003cea:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8003cee:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8003cf2:	687b      	ldr	r3, [r7, #4]
 8003cf4:	681b      	ldr	r3, [r3, #0]
 8003cf6:	330c      	adds	r3, #12
 8003cf8:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 8003cfc:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8003d00:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8003d04:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 8003d08:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8003d0c:	e841 2300 	strex	r3, r2, [r1]
 8003d10:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8003d14:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8003d18:	2b00      	cmp	r3, #0
 8003d1a:	d1d9      	bne.n	8003cd0 <HAL_UART_IRQHandler+0x2b0>
 8003d1c:	687b      	ldr	r3, [r7, #4]
 8003d1e:	681b      	ldr	r3, [r3, #0]
 8003d20:	3314      	adds	r3, #20
 8003d22:	677b      	str	r3, [r7, #116]	@ 0x74
 8003d24:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003d26:	e853 3f00 	ldrex	r3, [r3]
 8003d2a:	673b      	str	r3, [r7, #112]	@ 0x70
 8003d2c:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8003d2e:	f023 0301 	bic.w	r3, r3, #1
 8003d32:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8003d36:	687b      	ldr	r3, [r7, #4]
 8003d38:	681b      	ldr	r3, [r3, #0]
 8003d3a:	3314      	adds	r3, #20
 8003d3c:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8003d40:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8003d44:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8003d46:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 8003d48:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 8003d4c:	e841 2300 	strex	r3, r2, [r1]
 8003d50:	67bb      	str	r3, [r7, #120]	@ 0x78
 8003d52:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8003d54:	2b00      	cmp	r3, #0
 8003d56:	d1e1      	bne.n	8003d1c <HAL_UART_IRQHandler+0x2fc>
 8003d58:	687b      	ldr	r3, [r7, #4]
 8003d5a:	681b      	ldr	r3, [r3, #0]
 8003d5c:	3314      	adds	r3, #20
 8003d5e:	663b      	str	r3, [r7, #96]	@ 0x60
 8003d60:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8003d62:	e853 3f00 	ldrex	r3, [r3]
 8003d66:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8003d68:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8003d6a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8003d6e:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8003d72:	687b      	ldr	r3, [r7, #4]
 8003d74:	681b      	ldr	r3, [r3, #0]
 8003d76:	3314      	adds	r3, #20
 8003d78:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 8003d7c:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8003d7e:	66bb      	str	r3, [r7, #104]	@ 0x68
 8003d80:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8003d82:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8003d84:	e841 2300 	strex	r3, r2, [r1]
 8003d88:	667b      	str	r3, [r7, #100]	@ 0x64
 8003d8a:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8003d8c:	2b00      	cmp	r3, #0
 8003d8e:	d1e3      	bne.n	8003d58 <HAL_UART_IRQHandler+0x338>
 8003d90:	687b      	ldr	r3, [r7, #4]
 8003d92:	2220      	movs	r2, #32
 8003d94:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003d98:	687b      	ldr	r3, [r7, #4]
 8003d9a:	2200      	movs	r2, #0
 8003d9c:	631a      	str	r2, [r3, #48]	@ 0x30
 8003d9e:	687b      	ldr	r3, [r7, #4]
 8003da0:	681b      	ldr	r3, [r3, #0]
 8003da2:	330c      	adds	r3, #12
 8003da4:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003da6:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8003da8:	e853 3f00 	ldrex	r3, [r3]
 8003dac:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003dae:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8003db0:	f023 0310 	bic.w	r3, r3, #16
 8003db4:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8003db8:	687b      	ldr	r3, [r7, #4]
 8003dba:	681b      	ldr	r3, [r3, #0]
 8003dbc:	330c      	adds	r3, #12
 8003dbe:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 8003dc2:	65ba      	str	r2, [r7, #88]	@ 0x58
 8003dc4:	657b      	str	r3, [r7, #84]	@ 0x54
 8003dc6:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8003dc8:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8003dca:	e841 2300 	strex	r3, r2, [r1]
 8003dce:	653b      	str	r3, [r7, #80]	@ 0x50
 8003dd0:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8003dd2:	2b00      	cmp	r3, #0
 8003dd4:	d1e3      	bne.n	8003d9e <HAL_UART_IRQHandler+0x37e>
 8003dd6:	687b      	ldr	r3, [r7, #4]
 8003dd8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003dda:	4618      	mov	r0, r3
 8003ddc:	f7fd fefb 	bl	8001bd6 <HAL_DMA_Abort>
 8003de0:	687b      	ldr	r3, [r7, #4]
 8003de2:	2202      	movs	r2, #2
 8003de4:	635a      	str	r2, [r3, #52]	@ 0x34
 8003de6:	687b      	ldr	r3, [r7, #4]
 8003de8:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8003dea:	687b      	ldr	r3, [r7, #4]
 8003dec:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8003dee:	b29b      	uxth	r3, r3
 8003df0:	1ad3      	subs	r3, r2, r3
 8003df2:	b29b      	uxth	r3, r3
 8003df4:	4619      	mov	r1, r3
 8003df6:	6878      	ldr	r0, [r7, #4]
 8003df8:	f000 f8ad 	bl	8003f56 <HAL_UARTEx_RxEventCallback>
 8003dfc:	e09c      	b.n	8003f38 <HAL_UART_IRQHandler+0x518>
 8003dfe:	bf00      	nop
 8003e00:	08004155 	.word	0x08004155
 8003e04:	687b      	ldr	r3, [r7, #4]
 8003e06:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8003e08:	687b      	ldr	r3, [r7, #4]
 8003e0a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8003e0c:	b29b      	uxth	r3, r3
 8003e0e:	1ad3      	subs	r3, r2, r3
 8003e10:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8003e14:	687b      	ldr	r3, [r7, #4]
 8003e16:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8003e18:	b29b      	uxth	r3, r3
 8003e1a:	2b00      	cmp	r3, #0
 8003e1c:	f000 808e 	beq.w	8003f3c <HAL_UART_IRQHandler+0x51c>
 8003e20:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8003e24:	2b00      	cmp	r3, #0
 8003e26:	f000 8089 	beq.w	8003f3c <HAL_UART_IRQHandler+0x51c>
 8003e2a:	687b      	ldr	r3, [r7, #4]
 8003e2c:	681b      	ldr	r3, [r3, #0]
 8003e2e:	330c      	adds	r3, #12
 8003e30:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003e32:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003e34:	e853 3f00 	ldrex	r3, [r3]
 8003e38:	637b      	str	r3, [r7, #52]	@ 0x34
 8003e3a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003e3c:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8003e40:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8003e44:	687b      	ldr	r3, [r7, #4]
 8003e46:	681b      	ldr	r3, [r3, #0]
 8003e48:	330c      	adds	r3, #12
 8003e4a:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 8003e4e:	647a      	str	r2, [r7, #68]	@ 0x44
 8003e50:	643b      	str	r3, [r7, #64]	@ 0x40
 8003e52:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8003e54:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8003e56:	e841 2300 	strex	r3, r2, [r1]
 8003e5a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003e5c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8003e5e:	2b00      	cmp	r3, #0
 8003e60:	d1e3      	bne.n	8003e2a <HAL_UART_IRQHandler+0x40a>
 8003e62:	687b      	ldr	r3, [r7, #4]
 8003e64:	681b      	ldr	r3, [r3, #0]
 8003e66:	3314      	adds	r3, #20
 8003e68:	627b      	str	r3, [r7, #36]	@ 0x24
 8003e6a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003e6c:	e853 3f00 	ldrex	r3, [r3]
 8003e70:	623b      	str	r3, [r7, #32]
 8003e72:	6a3b      	ldr	r3, [r7, #32]
 8003e74:	f023 0301 	bic.w	r3, r3, #1
 8003e78:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8003e7c:	687b      	ldr	r3, [r7, #4]
 8003e7e:	681b      	ldr	r3, [r3, #0]
 8003e80:	3314      	adds	r3, #20
 8003e82:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8003e86:	633a      	str	r2, [r7, #48]	@ 0x30
 8003e88:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003e8a:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8003e8c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8003e8e:	e841 2300 	strex	r3, r2, [r1]
 8003e92:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003e94:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003e96:	2b00      	cmp	r3, #0
 8003e98:	d1e3      	bne.n	8003e62 <HAL_UART_IRQHandler+0x442>
 8003e9a:	687b      	ldr	r3, [r7, #4]
 8003e9c:	2220      	movs	r2, #32
 8003e9e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003ea2:	687b      	ldr	r3, [r7, #4]
 8003ea4:	2200      	movs	r2, #0
 8003ea6:	631a      	str	r2, [r3, #48]	@ 0x30
 8003ea8:	687b      	ldr	r3, [r7, #4]
 8003eaa:	681b      	ldr	r3, [r3, #0]
 8003eac:	330c      	adds	r3, #12
 8003eae:	613b      	str	r3, [r7, #16]
 8003eb0:	693b      	ldr	r3, [r7, #16]
 8003eb2:	e853 3f00 	ldrex	r3, [r3]
 8003eb6:	60fb      	str	r3, [r7, #12]
 8003eb8:	68fb      	ldr	r3, [r7, #12]
 8003eba:	f023 0310 	bic.w	r3, r3, #16
 8003ebe:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8003ec2:	687b      	ldr	r3, [r7, #4]
 8003ec4:	681b      	ldr	r3, [r3, #0]
 8003ec6:	330c      	adds	r3, #12
 8003ec8:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 8003ecc:	61fa      	str	r2, [r7, #28]
 8003ece:	61bb      	str	r3, [r7, #24]
 8003ed0:	69b9      	ldr	r1, [r7, #24]
 8003ed2:	69fa      	ldr	r2, [r7, #28]
 8003ed4:	e841 2300 	strex	r3, r2, [r1]
 8003ed8:	617b      	str	r3, [r7, #20]
 8003eda:	697b      	ldr	r3, [r7, #20]
 8003edc:	2b00      	cmp	r3, #0
 8003ede:	d1e3      	bne.n	8003ea8 <HAL_UART_IRQHandler+0x488>
 8003ee0:	687b      	ldr	r3, [r7, #4]
 8003ee2:	2202      	movs	r2, #2
 8003ee4:	635a      	str	r2, [r3, #52]	@ 0x34
 8003ee6:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8003eea:	4619      	mov	r1, r3
 8003eec:	6878      	ldr	r0, [r7, #4]
 8003eee:	f000 f832 	bl	8003f56 <HAL_UARTEx_RxEventCallback>
 8003ef2:	e023      	b.n	8003f3c <HAL_UART_IRQHandler+0x51c>
 8003ef4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003ef8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003efc:	2b00      	cmp	r3, #0
 8003efe:	d009      	beq.n	8003f14 <HAL_UART_IRQHandler+0x4f4>
 8003f00:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003f04:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003f08:	2b00      	cmp	r3, #0
 8003f0a:	d003      	beq.n	8003f14 <HAL_UART_IRQHandler+0x4f4>
 8003f0c:	6878      	ldr	r0, [r7, #4]
 8003f0e:	f000 f935 	bl	800417c <UART_Transmit_IT>
 8003f12:	e014      	b.n	8003f3e <HAL_UART_IRQHandler+0x51e>
 8003f14:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003f18:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003f1c:	2b00      	cmp	r3, #0
 8003f1e:	d00e      	beq.n	8003f3e <HAL_UART_IRQHandler+0x51e>
 8003f20:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003f24:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003f28:	2b00      	cmp	r3, #0
 8003f2a:	d008      	beq.n	8003f3e <HAL_UART_IRQHandler+0x51e>
 8003f2c:	6878      	ldr	r0, [r7, #4]
 8003f2e:	f000 f974 	bl	800421a <UART_EndTransmit_IT>
 8003f32:	e004      	b.n	8003f3e <HAL_UART_IRQHandler+0x51e>
 8003f34:	bf00      	nop
 8003f36:	e002      	b.n	8003f3e <HAL_UART_IRQHandler+0x51e>
 8003f38:	bf00      	nop
 8003f3a:	e000      	b.n	8003f3e <HAL_UART_IRQHandler+0x51e>
 8003f3c:	bf00      	nop
 8003f3e:	37e8      	adds	r7, #232	@ 0xe8
 8003f40:	46bd      	mov	sp, r7
 8003f42:	bd80      	pop	{r7, pc}

08003f44 <HAL_UART_TxCpltCallback>:
 8003f44:	b480      	push	{r7}
 8003f46:	b083      	sub	sp, #12
 8003f48:	af00      	add	r7, sp, #0
 8003f4a:	6078      	str	r0, [r7, #4]
 8003f4c:	bf00      	nop
 8003f4e:	370c      	adds	r7, #12
 8003f50:	46bd      	mov	sp, r7
 8003f52:	bc80      	pop	{r7}
 8003f54:	4770      	bx	lr

08003f56 <HAL_UARTEx_RxEventCallback>:
 8003f56:	b480      	push	{r7}
 8003f58:	b083      	sub	sp, #12
 8003f5a:	af00      	add	r7, sp, #0
 8003f5c:	6078      	str	r0, [r7, #4]
 8003f5e:	460b      	mov	r3, r1
 8003f60:	807b      	strh	r3, [r7, #2]
 8003f62:	bf00      	nop
 8003f64:	370c      	adds	r7, #12
 8003f66:	46bd      	mov	sp, r7
 8003f68:	bc80      	pop	{r7}
 8003f6a:	4770      	bx	lr

08003f6c <UART_WaitOnFlagUntilTimeout>:
 8003f6c:	b580      	push	{r7, lr}
 8003f6e:	b086      	sub	sp, #24
 8003f70:	af00      	add	r7, sp, #0
 8003f72:	60f8      	str	r0, [r7, #12]
 8003f74:	60b9      	str	r1, [r7, #8]
 8003f76:	603b      	str	r3, [r7, #0]
 8003f78:	4613      	mov	r3, r2
 8003f7a:	71fb      	strb	r3, [r7, #7]
 8003f7c:	e03b      	b.n	8003ff6 <UART_WaitOnFlagUntilTimeout+0x8a>
 8003f7e:	6a3b      	ldr	r3, [r7, #32]
 8003f80:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003f84:	d037      	beq.n	8003ff6 <UART_WaitOnFlagUntilTimeout+0x8a>
 8003f86:	f7fd fd0f 	bl	80019a8 <HAL_GetTick>
 8003f8a:	4602      	mov	r2, r0
 8003f8c:	683b      	ldr	r3, [r7, #0]
 8003f8e:	1ad3      	subs	r3, r2, r3
 8003f90:	6a3a      	ldr	r2, [r7, #32]
 8003f92:	429a      	cmp	r2, r3
 8003f94:	d302      	bcc.n	8003f9c <UART_WaitOnFlagUntilTimeout+0x30>
 8003f96:	6a3b      	ldr	r3, [r7, #32]
 8003f98:	2b00      	cmp	r3, #0
 8003f9a:	d101      	bne.n	8003fa0 <UART_WaitOnFlagUntilTimeout+0x34>
 8003f9c:	2303      	movs	r3, #3
 8003f9e:	e03a      	b.n	8004016 <UART_WaitOnFlagUntilTimeout+0xaa>
 8003fa0:	68fb      	ldr	r3, [r7, #12]
 8003fa2:	681b      	ldr	r3, [r3, #0]
 8003fa4:	68db      	ldr	r3, [r3, #12]
 8003fa6:	f003 0304 	and.w	r3, r3, #4
 8003faa:	2b00      	cmp	r3, #0
 8003fac:	d023      	beq.n	8003ff6 <UART_WaitOnFlagUntilTimeout+0x8a>
 8003fae:	68bb      	ldr	r3, [r7, #8]
 8003fb0:	2b80      	cmp	r3, #128	@ 0x80
 8003fb2:	d020      	beq.n	8003ff6 <UART_WaitOnFlagUntilTimeout+0x8a>
 8003fb4:	68bb      	ldr	r3, [r7, #8]
 8003fb6:	2b40      	cmp	r3, #64	@ 0x40
 8003fb8:	d01d      	beq.n	8003ff6 <UART_WaitOnFlagUntilTimeout+0x8a>
 8003fba:	68fb      	ldr	r3, [r7, #12]
 8003fbc:	681b      	ldr	r3, [r3, #0]
 8003fbe:	681b      	ldr	r3, [r3, #0]
 8003fc0:	f003 0308 	and.w	r3, r3, #8
 8003fc4:	2b08      	cmp	r3, #8
 8003fc6:	d116      	bne.n	8003ff6 <UART_WaitOnFlagUntilTimeout+0x8a>
 8003fc8:	2300      	movs	r3, #0
 8003fca:	617b      	str	r3, [r7, #20]
 8003fcc:	68fb      	ldr	r3, [r7, #12]
 8003fce:	681b      	ldr	r3, [r3, #0]
 8003fd0:	681b      	ldr	r3, [r3, #0]
 8003fd2:	617b      	str	r3, [r7, #20]
 8003fd4:	68fb      	ldr	r3, [r7, #12]
 8003fd6:	681b      	ldr	r3, [r3, #0]
 8003fd8:	685b      	ldr	r3, [r3, #4]
 8003fda:	617b      	str	r3, [r7, #20]
 8003fdc:	697b      	ldr	r3, [r7, #20]
 8003fde:	68f8      	ldr	r0, [r7, #12]
 8003fe0:	f000 f856 	bl	8004090 <UART_EndRxTransfer>
 8003fe4:	68fb      	ldr	r3, [r7, #12]
 8003fe6:	2208      	movs	r2, #8
 8003fe8:	645a      	str	r2, [r3, #68]	@ 0x44
 8003fea:	68fb      	ldr	r3, [r7, #12]
 8003fec:	2200      	movs	r2, #0
 8003fee:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003ff2:	2301      	movs	r3, #1
 8003ff4:	e00f      	b.n	8004016 <UART_WaitOnFlagUntilTimeout+0xaa>
 8003ff6:	68fb      	ldr	r3, [r7, #12]
 8003ff8:	681b      	ldr	r3, [r3, #0]
 8003ffa:	681a      	ldr	r2, [r3, #0]
 8003ffc:	68bb      	ldr	r3, [r7, #8]
 8003ffe:	4013      	ands	r3, r2
 8004000:	68ba      	ldr	r2, [r7, #8]
 8004002:	429a      	cmp	r2, r3
 8004004:	bf0c      	ite	eq
 8004006:	2301      	moveq	r3, #1
 8004008:	2300      	movne	r3, #0
 800400a:	b2db      	uxtb	r3, r3
 800400c:	461a      	mov	r2, r3
 800400e:	79fb      	ldrb	r3, [r7, #7]
 8004010:	429a      	cmp	r2, r3
 8004012:	d0b4      	beq.n	8003f7e <UART_WaitOnFlagUntilTimeout+0x12>
 8004014:	2300      	movs	r3, #0
 8004016:	4618      	mov	r0, r3
 8004018:	3718      	adds	r7, #24
 800401a:	46bd      	mov	sp, r7
 800401c:	bd80      	pop	{r7, pc}

0800401e <UART_Start_Receive_IT>:
 800401e:	b480      	push	{r7}
 8004020:	b085      	sub	sp, #20
 8004022:	af00      	add	r7, sp, #0
 8004024:	60f8      	str	r0, [r7, #12]
 8004026:	60b9      	str	r1, [r7, #8]
 8004028:	4613      	mov	r3, r2
 800402a:	80fb      	strh	r3, [r7, #6]
 800402c:	68fb      	ldr	r3, [r7, #12]
 800402e:	68ba      	ldr	r2, [r7, #8]
 8004030:	629a      	str	r2, [r3, #40]	@ 0x28
 8004032:	68fb      	ldr	r3, [r7, #12]
 8004034:	88fa      	ldrh	r2, [r7, #6]
 8004036:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8004038:	68fb      	ldr	r3, [r7, #12]
 800403a:	88fa      	ldrh	r2, [r7, #6]
 800403c:	85da      	strh	r2, [r3, #46]	@ 0x2e
 800403e:	68fb      	ldr	r3, [r7, #12]
 8004040:	2200      	movs	r2, #0
 8004042:	645a      	str	r2, [r3, #68]	@ 0x44
 8004044:	68fb      	ldr	r3, [r7, #12]
 8004046:	2222      	movs	r2, #34	@ 0x22
 8004048:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800404c:	68fb      	ldr	r3, [r7, #12]
 800404e:	691b      	ldr	r3, [r3, #16]
 8004050:	2b00      	cmp	r3, #0
 8004052:	d007      	beq.n	8004064 <UART_Start_Receive_IT+0x46>
 8004054:	68fb      	ldr	r3, [r7, #12]
 8004056:	681b      	ldr	r3, [r3, #0]
 8004058:	68da      	ldr	r2, [r3, #12]
 800405a:	68fb      	ldr	r3, [r7, #12]
 800405c:	681b      	ldr	r3, [r3, #0]
 800405e:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004062:	60da      	str	r2, [r3, #12]
 8004064:	68fb      	ldr	r3, [r7, #12]
 8004066:	681b      	ldr	r3, [r3, #0]
 8004068:	695a      	ldr	r2, [r3, #20]
 800406a:	68fb      	ldr	r3, [r7, #12]
 800406c:	681b      	ldr	r3, [r3, #0]
 800406e:	f042 0201 	orr.w	r2, r2, #1
 8004072:	615a      	str	r2, [r3, #20]
 8004074:	68fb      	ldr	r3, [r7, #12]
 8004076:	681b      	ldr	r3, [r3, #0]
 8004078:	68da      	ldr	r2, [r3, #12]
 800407a:	68fb      	ldr	r3, [r7, #12]
 800407c:	681b      	ldr	r3, [r3, #0]
 800407e:	f042 0220 	orr.w	r2, r2, #32
 8004082:	60da      	str	r2, [r3, #12]
 8004084:	2300      	movs	r3, #0
 8004086:	4618      	mov	r0, r3
 8004088:	3714      	adds	r7, #20
 800408a:	46bd      	mov	sp, r7
 800408c:	bc80      	pop	{r7}
 800408e:	4770      	bx	lr

08004090 <UART_EndRxTransfer>:
 8004090:	b480      	push	{r7}
 8004092:	b095      	sub	sp, #84	@ 0x54
 8004094:	af00      	add	r7, sp, #0
 8004096:	6078      	str	r0, [r7, #4]
 8004098:	687b      	ldr	r3, [r7, #4]
 800409a:	681b      	ldr	r3, [r3, #0]
 800409c:	330c      	adds	r3, #12
 800409e:	637b      	str	r3, [r7, #52]	@ 0x34
 80040a0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80040a2:	e853 3f00 	ldrex	r3, [r3]
 80040a6:	633b      	str	r3, [r7, #48]	@ 0x30
 80040a8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80040aa:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80040ae:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80040b0:	687b      	ldr	r3, [r7, #4]
 80040b2:	681b      	ldr	r3, [r3, #0]
 80040b4:	330c      	adds	r3, #12
 80040b6:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 80040b8:	643a      	str	r2, [r7, #64]	@ 0x40
 80040ba:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80040bc:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 80040be:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 80040c0:	e841 2300 	strex	r3, r2, [r1]
 80040c4:	63bb      	str	r3, [r7, #56]	@ 0x38
 80040c6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80040c8:	2b00      	cmp	r3, #0
 80040ca:	d1e5      	bne.n	8004098 <UART_EndRxTransfer+0x8>
 80040cc:	687b      	ldr	r3, [r7, #4]
 80040ce:	681b      	ldr	r3, [r3, #0]
 80040d0:	3314      	adds	r3, #20
 80040d2:	623b      	str	r3, [r7, #32]
 80040d4:	6a3b      	ldr	r3, [r7, #32]
 80040d6:	e853 3f00 	ldrex	r3, [r3]
 80040da:	61fb      	str	r3, [r7, #28]
 80040dc:	69fb      	ldr	r3, [r7, #28]
 80040de:	f023 0301 	bic.w	r3, r3, #1
 80040e2:	64bb      	str	r3, [r7, #72]	@ 0x48
 80040e4:	687b      	ldr	r3, [r7, #4]
 80040e6:	681b      	ldr	r3, [r3, #0]
 80040e8:	3314      	adds	r3, #20
 80040ea:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80040ec:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80040ee:	62bb      	str	r3, [r7, #40]	@ 0x28
 80040f0:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80040f2:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80040f4:	e841 2300 	strex	r3, r2, [r1]
 80040f8:	627b      	str	r3, [r7, #36]	@ 0x24
 80040fa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80040fc:	2b00      	cmp	r3, #0
 80040fe:	d1e5      	bne.n	80040cc <UART_EndRxTransfer+0x3c>
 8004100:	687b      	ldr	r3, [r7, #4]
 8004102:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004104:	2b01      	cmp	r3, #1
 8004106:	d119      	bne.n	800413c <UART_EndRxTransfer+0xac>
 8004108:	687b      	ldr	r3, [r7, #4]
 800410a:	681b      	ldr	r3, [r3, #0]
 800410c:	330c      	adds	r3, #12
 800410e:	60fb      	str	r3, [r7, #12]
 8004110:	68fb      	ldr	r3, [r7, #12]
 8004112:	e853 3f00 	ldrex	r3, [r3]
 8004116:	60bb      	str	r3, [r7, #8]
 8004118:	68bb      	ldr	r3, [r7, #8]
 800411a:	f023 0310 	bic.w	r3, r3, #16
 800411e:	647b      	str	r3, [r7, #68]	@ 0x44
 8004120:	687b      	ldr	r3, [r7, #4]
 8004122:	681b      	ldr	r3, [r3, #0]
 8004124:	330c      	adds	r3, #12
 8004126:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8004128:	61ba      	str	r2, [r7, #24]
 800412a:	617b      	str	r3, [r7, #20]
 800412c:	6979      	ldr	r1, [r7, #20]
 800412e:	69ba      	ldr	r2, [r7, #24]
 8004130:	e841 2300 	strex	r3, r2, [r1]
 8004134:	613b      	str	r3, [r7, #16]
 8004136:	693b      	ldr	r3, [r7, #16]
 8004138:	2b00      	cmp	r3, #0
 800413a:	d1e5      	bne.n	8004108 <UART_EndRxTransfer+0x78>
 800413c:	687b      	ldr	r3, [r7, #4]
 800413e:	2220      	movs	r2, #32
 8004140:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004144:	687b      	ldr	r3, [r7, #4]
 8004146:	2200      	movs	r2, #0
 8004148:	631a      	str	r2, [r3, #48]	@ 0x30
 800414a:	bf00      	nop
 800414c:	3754      	adds	r7, #84	@ 0x54
 800414e:	46bd      	mov	sp, r7
 8004150:	bc80      	pop	{r7}
 8004152:	4770      	bx	lr

08004154 <UART_DMAAbortOnError>:
 8004154:	b580      	push	{r7, lr}
 8004156:	b084      	sub	sp, #16
 8004158:	af00      	add	r7, sp, #0
 800415a:	6078      	str	r0, [r7, #4]
 800415c:	687b      	ldr	r3, [r7, #4]
 800415e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004160:	60fb      	str	r3, [r7, #12]
 8004162:	68fb      	ldr	r3, [r7, #12]
 8004164:	2200      	movs	r2, #0
 8004166:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8004168:	68fb      	ldr	r3, [r7, #12]
 800416a:	2200      	movs	r2, #0
 800416c:	84da      	strh	r2, [r3, #38]	@ 0x26
 800416e:	68f8      	ldr	r0, [r7, #12]
 8004170:	f7fc fcfa 	bl	8000b68 <HAL_UART_ErrorCallback>
 8004174:	bf00      	nop
 8004176:	3710      	adds	r7, #16
 8004178:	46bd      	mov	sp, r7
 800417a:	bd80      	pop	{r7, pc}

0800417c <UART_Transmit_IT>:
 800417c:	b480      	push	{r7}
 800417e:	b085      	sub	sp, #20
 8004180:	af00      	add	r7, sp, #0
 8004182:	6078      	str	r0, [r7, #4]
 8004184:	687b      	ldr	r3, [r7, #4]
 8004186:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800418a:	b2db      	uxtb	r3, r3
 800418c:	2b21      	cmp	r3, #33	@ 0x21
 800418e:	d13e      	bne.n	800420e <UART_Transmit_IT+0x92>
 8004190:	687b      	ldr	r3, [r7, #4]
 8004192:	689b      	ldr	r3, [r3, #8]
 8004194:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004198:	d114      	bne.n	80041c4 <UART_Transmit_IT+0x48>
 800419a:	687b      	ldr	r3, [r7, #4]
 800419c:	691b      	ldr	r3, [r3, #16]
 800419e:	2b00      	cmp	r3, #0
 80041a0:	d110      	bne.n	80041c4 <UART_Transmit_IT+0x48>
 80041a2:	687b      	ldr	r3, [r7, #4]
 80041a4:	6a1b      	ldr	r3, [r3, #32]
 80041a6:	60fb      	str	r3, [r7, #12]
 80041a8:	68fb      	ldr	r3, [r7, #12]
 80041aa:	881b      	ldrh	r3, [r3, #0]
 80041ac:	461a      	mov	r2, r3
 80041ae:	687b      	ldr	r3, [r7, #4]
 80041b0:	681b      	ldr	r3, [r3, #0]
 80041b2:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80041b6:	605a      	str	r2, [r3, #4]
 80041b8:	687b      	ldr	r3, [r7, #4]
 80041ba:	6a1b      	ldr	r3, [r3, #32]
 80041bc:	1c9a      	adds	r2, r3, #2
 80041be:	687b      	ldr	r3, [r7, #4]
 80041c0:	621a      	str	r2, [r3, #32]
 80041c2:	e008      	b.n	80041d6 <UART_Transmit_IT+0x5a>
 80041c4:	687b      	ldr	r3, [r7, #4]
 80041c6:	6a1b      	ldr	r3, [r3, #32]
 80041c8:	1c59      	adds	r1, r3, #1
 80041ca:	687a      	ldr	r2, [r7, #4]
 80041cc:	6211      	str	r1, [r2, #32]
 80041ce:	781a      	ldrb	r2, [r3, #0]
 80041d0:	687b      	ldr	r3, [r7, #4]
 80041d2:	681b      	ldr	r3, [r3, #0]
 80041d4:	605a      	str	r2, [r3, #4]
 80041d6:	687b      	ldr	r3, [r7, #4]
 80041d8:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 80041da:	b29b      	uxth	r3, r3
 80041dc:	3b01      	subs	r3, #1
 80041de:	b29b      	uxth	r3, r3
 80041e0:	687a      	ldr	r2, [r7, #4]
 80041e2:	4619      	mov	r1, r3
 80041e4:	84d1      	strh	r1, [r2, #38]	@ 0x26
 80041e6:	2b00      	cmp	r3, #0
 80041e8:	d10f      	bne.n	800420a <UART_Transmit_IT+0x8e>
 80041ea:	687b      	ldr	r3, [r7, #4]
 80041ec:	681b      	ldr	r3, [r3, #0]
 80041ee:	68da      	ldr	r2, [r3, #12]
 80041f0:	687b      	ldr	r3, [r7, #4]
 80041f2:	681b      	ldr	r3, [r3, #0]
 80041f4:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80041f8:	60da      	str	r2, [r3, #12]
 80041fa:	687b      	ldr	r3, [r7, #4]
 80041fc:	681b      	ldr	r3, [r3, #0]
 80041fe:	68da      	ldr	r2, [r3, #12]
 8004200:	687b      	ldr	r3, [r7, #4]
 8004202:	681b      	ldr	r3, [r3, #0]
 8004204:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8004208:	60da      	str	r2, [r3, #12]
 800420a:	2300      	movs	r3, #0
 800420c:	e000      	b.n	8004210 <UART_Transmit_IT+0x94>
 800420e:	2302      	movs	r3, #2
 8004210:	4618      	mov	r0, r3
 8004212:	3714      	adds	r7, #20
 8004214:	46bd      	mov	sp, r7
 8004216:	bc80      	pop	{r7}
 8004218:	4770      	bx	lr

0800421a <UART_EndTransmit_IT>:
 800421a:	b580      	push	{r7, lr}
 800421c:	b082      	sub	sp, #8
 800421e:	af00      	add	r7, sp, #0
 8004220:	6078      	str	r0, [r7, #4]
 8004222:	687b      	ldr	r3, [r7, #4]
 8004224:	681b      	ldr	r3, [r3, #0]
 8004226:	68da      	ldr	r2, [r3, #12]
 8004228:	687b      	ldr	r3, [r7, #4]
 800422a:	681b      	ldr	r3, [r3, #0]
 800422c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8004230:	60da      	str	r2, [r3, #12]
 8004232:	687b      	ldr	r3, [r7, #4]
 8004234:	2220      	movs	r2, #32
 8004236:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800423a:	6878      	ldr	r0, [r7, #4]
 800423c:	f7ff fe82 	bl	8003f44 <HAL_UART_TxCpltCallback>
 8004240:	2300      	movs	r3, #0
 8004242:	4618      	mov	r0, r3
 8004244:	3708      	adds	r7, #8
 8004246:	46bd      	mov	sp, r7
 8004248:	bd80      	pop	{r7, pc}

0800424a <UART_Receive_IT>:
 800424a:	b580      	push	{r7, lr}
 800424c:	b08c      	sub	sp, #48	@ 0x30
 800424e:	af00      	add	r7, sp, #0
 8004250:	6078      	str	r0, [r7, #4]
 8004252:	687b      	ldr	r3, [r7, #4]
 8004254:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8004258:	b2db      	uxtb	r3, r3
 800425a:	2b22      	cmp	r3, #34	@ 0x22
 800425c:	f040 80ae 	bne.w	80043bc <UART_Receive_IT+0x172>
 8004260:	687b      	ldr	r3, [r7, #4]
 8004262:	689b      	ldr	r3, [r3, #8]
 8004264:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004268:	d117      	bne.n	800429a <UART_Receive_IT+0x50>
 800426a:	687b      	ldr	r3, [r7, #4]
 800426c:	691b      	ldr	r3, [r3, #16]
 800426e:	2b00      	cmp	r3, #0
 8004270:	d113      	bne.n	800429a <UART_Receive_IT+0x50>
 8004272:	2300      	movs	r3, #0
 8004274:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004276:	687b      	ldr	r3, [r7, #4]
 8004278:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800427a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800427c:	687b      	ldr	r3, [r7, #4]
 800427e:	681b      	ldr	r3, [r3, #0]
 8004280:	685b      	ldr	r3, [r3, #4]
 8004282:	b29b      	uxth	r3, r3
 8004284:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004288:	b29a      	uxth	r2, r3
 800428a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800428c:	801a      	strh	r2, [r3, #0]
 800428e:	687b      	ldr	r3, [r7, #4]
 8004290:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004292:	1c9a      	adds	r2, r3, #2
 8004294:	687b      	ldr	r3, [r7, #4]
 8004296:	629a      	str	r2, [r3, #40]	@ 0x28
 8004298:	e026      	b.n	80042e8 <UART_Receive_IT+0x9e>
 800429a:	687b      	ldr	r3, [r7, #4]
 800429c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800429e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80042a0:	2300      	movs	r3, #0
 80042a2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80042a4:	687b      	ldr	r3, [r7, #4]
 80042a6:	689b      	ldr	r3, [r3, #8]
 80042a8:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80042ac:	d007      	beq.n	80042be <UART_Receive_IT+0x74>
 80042ae:	687b      	ldr	r3, [r7, #4]
 80042b0:	689b      	ldr	r3, [r3, #8]
 80042b2:	2b00      	cmp	r3, #0
 80042b4:	d10a      	bne.n	80042cc <UART_Receive_IT+0x82>
 80042b6:	687b      	ldr	r3, [r7, #4]
 80042b8:	691b      	ldr	r3, [r3, #16]
 80042ba:	2b00      	cmp	r3, #0
 80042bc:	d106      	bne.n	80042cc <UART_Receive_IT+0x82>
 80042be:	687b      	ldr	r3, [r7, #4]
 80042c0:	681b      	ldr	r3, [r3, #0]
 80042c2:	685b      	ldr	r3, [r3, #4]
 80042c4:	b2da      	uxtb	r2, r3
 80042c6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80042c8:	701a      	strb	r2, [r3, #0]
 80042ca:	e008      	b.n	80042de <UART_Receive_IT+0x94>
 80042cc:	687b      	ldr	r3, [r7, #4]
 80042ce:	681b      	ldr	r3, [r3, #0]
 80042d0:	685b      	ldr	r3, [r3, #4]
 80042d2:	b2db      	uxtb	r3, r3
 80042d4:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80042d8:	b2da      	uxtb	r2, r3
 80042da:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80042dc:	701a      	strb	r2, [r3, #0]
 80042de:	687b      	ldr	r3, [r7, #4]
 80042e0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80042e2:	1c5a      	adds	r2, r3, #1
 80042e4:	687b      	ldr	r3, [r7, #4]
 80042e6:	629a      	str	r2, [r3, #40]	@ 0x28
 80042e8:	687b      	ldr	r3, [r7, #4]
 80042ea:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80042ec:	b29b      	uxth	r3, r3
 80042ee:	3b01      	subs	r3, #1
 80042f0:	b29b      	uxth	r3, r3
 80042f2:	687a      	ldr	r2, [r7, #4]
 80042f4:	4619      	mov	r1, r3
 80042f6:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 80042f8:	2b00      	cmp	r3, #0
 80042fa:	d15d      	bne.n	80043b8 <UART_Receive_IT+0x16e>
 80042fc:	687b      	ldr	r3, [r7, #4]
 80042fe:	681b      	ldr	r3, [r3, #0]
 8004300:	68da      	ldr	r2, [r3, #12]
 8004302:	687b      	ldr	r3, [r7, #4]
 8004304:	681b      	ldr	r3, [r3, #0]
 8004306:	f022 0220 	bic.w	r2, r2, #32
 800430a:	60da      	str	r2, [r3, #12]
 800430c:	687b      	ldr	r3, [r7, #4]
 800430e:	681b      	ldr	r3, [r3, #0]
 8004310:	68da      	ldr	r2, [r3, #12]
 8004312:	687b      	ldr	r3, [r7, #4]
 8004314:	681b      	ldr	r3, [r3, #0]
 8004316:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800431a:	60da      	str	r2, [r3, #12]
 800431c:	687b      	ldr	r3, [r7, #4]
 800431e:	681b      	ldr	r3, [r3, #0]
 8004320:	695a      	ldr	r2, [r3, #20]
 8004322:	687b      	ldr	r3, [r7, #4]
 8004324:	681b      	ldr	r3, [r3, #0]
 8004326:	f022 0201 	bic.w	r2, r2, #1
 800432a:	615a      	str	r2, [r3, #20]
 800432c:	687b      	ldr	r3, [r7, #4]
 800432e:	2220      	movs	r2, #32
 8004330:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004334:	687b      	ldr	r3, [r7, #4]
 8004336:	2200      	movs	r2, #0
 8004338:	635a      	str	r2, [r3, #52]	@ 0x34
 800433a:	687b      	ldr	r3, [r7, #4]
 800433c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800433e:	2b01      	cmp	r3, #1
 8004340:	d135      	bne.n	80043ae <UART_Receive_IT+0x164>
 8004342:	687b      	ldr	r3, [r7, #4]
 8004344:	2200      	movs	r2, #0
 8004346:	631a      	str	r2, [r3, #48]	@ 0x30
 8004348:	687b      	ldr	r3, [r7, #4]
 800434a:	681b      	ldr	r3, [r3, #0]
 800434c:	330c      	adds	r3, #12
 800434e:	617b      	str	r3, [r7, #20]
 8004350:	697b      	ldr	r3, [r7, #20]
 8004352:	e853 3f00 	ldrex	r3, [r3]
 8004356:	613b      	str	r3, [r7, #16]
 8004358:	693b      	ldr	r3, [r7, #16]
 800435a:	f023 0310 	bic.w	r3, r3, #16
 800435e:	627b      	str	r3, [r7, #36]	@ 0x24
 8004360:	687b      	ldr	r3, [r7, #4]
 8004362:	681b      	ldr	r3, [r3, #0]
 8004364:	330c      	adds	r3, #12
 8004366:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004368:	623a      	str	r2, [r7, #32]
 800436a:	61fb      	str	r3, [r7, #28]
 800436c:	69f9      	ldr	r1, [r7, #28]
 800436e:	6a3a      	ldr	r2, [r7, #32]
 8004370:	e841 2300 	strex	r3, r2, [r1]
 8004374:	61bb      	str	r3, [r7, #24]
 8004376:	69bb      	ldr	r3, [r7, #24]
 8004378:	2b00      	cmp	r3, #0
 800437a:	d1e5      	bne.n	8004348 <UART_Receive_IT+0xfe>
 800437c:	687b      	ldr	r3, [r7, #4]
 800437e:	681b      	ldr	r3, [r3, #0]
 8004380:	681b      	ldr	r3, [r3, #0]
 8004382:	f003 0310 	and.w	r3, r3, #16
 8004386:	2b10      	cmp	r3, #16
 8004388:	d10a      	bne.n	80043a0 <UART_Receive_IT+0x156>
 800438a:	2300      	movs	r3, #0
 800438c:	60fb      	str	r3, [r7, #12]
 800438e:	687b      	ldr	r3, [r7, #4]
 8004390:	681b      	ldr	r3, [r3, #0]
 8004392:	681b      	ldr	r3, [r3, #0]
 8004394:	60fb      	str	r3, [r7, #12]
 8004396:	687b      	ldr	r3, [r7, #4]
 8004398:	681b      	ldr	r3, [r3, #0]
 800439a:	685b      	ldr	r3, [r3, #4]
 800439c:	60fb      	str	r3, [r7, #12]
 800439e:	68fb      	ldr	r3, [r7, #12]
 80043a0:	687b      	ldr	r3, [r7, #4]
 80043a2:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 80043a4:	4619      	mov	r1, r3
 80043a6:	6878      	ldr	r0, [r7, #4]
 80043a8:	f7ff fdd5 	bl	8003f56 <HAL_UARTEx_RxEventCallback>
 80043ac:	e002      	b.n	80043b4 <UART_Receive_IT+0x16a>
 80043ae:	6878      	ldr	r0, [r7, #4]
 80043b0:	f7fc fbc4 	bl	8000b3c <HAL_UART_RxCpltCallback>
 80043b4:	2300      	movs	r3, #0
 80043b6:	e002      	b.n	80043be <UART_Receive_IT+0x174>
 80043b8:	2300      	movs	r3, #0
 80043ba:	e000      	b.n	80043be <UART_Receive_IT+0x174>
 80043bc:	2302      	movs	r3, #2
 80043be:	4618      	mov	r0, r3
 80043c0:	3730      	adds	r7, #48	@ 0x30
 80043c2:	46bd      	mov	sp, r7
 80043c4:	bd80      	pop	{r7, pc}
	...

080043c8 <UART_SetConfig>:
 80043c8:	b580      	push	{r7, lr}
 80043ca:	b084      	sub	sp, #16
 80043cc:	af00      	add	r7, sp, #0
 80043ce:	6078      	str	r0, [r7, #4]
 80043d0:	687b      	ldr	r3, [r7, #4]
 80043d2:	681b      	ldr	r3, [r3, #0]
 80043d4:	691b      	ldr	r3, [r3, #16]
 80043d6:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 80043da:	687b      	ldr	r3, [r7, #4]
 80043dc:	68da      	ldr	r2, [r3, #12]
 80043de:	687b      	ldr	r3, [r7, #4]
 80043e0:	681b      	ldr	r3, [r3, #0]
 80043e2:	430a      	orrs	r2, r1
 80043e4:	611a      	str	r2, [r3, #16]
 80043e6:	687b      	ldr	r3, [r7, #4]
 80043e8:	689a      	ldr	r2, [r3, #8]
 80043ea:	687b      	ldr	r3, [r7, #4]
 80043ec:	691b      	ldr	r3, [r3, #16]
 80043ee:	431a      	orrs	r2, r3
 80043f0:	687b      	ldr	r3, [r7, #4]
 80043f2:	695b      	ldr	r3, [r3, #20]
 80043f4:	4313      	orrs	r3, r2
 80043f6:	60bb      	str	r3, [r7, #8]
 80043f8:	687b      	ldr	r3, [r7, #4]
 80043fa:	681b      	ldr	r3, [r3, #0]
 80043fc:	68db      	ldr	r3, [r3, #12]
 80043fe:	f423 53b0 	bic.w	r3, r3, #5632	@ 0x1600
 8004402:	f023 030c 	bic.w	r3, r3, #12
 8004406:	687a      	ldr	r2, [r7, #4]
 8004408:	6812      	ldr	r2, [r2, #0]
 800440a:	68b9      	ldr	r1, [r7, #8]
 800440c:	430b      	orrs	r3, r1
 800440e:	60d3      	str	r3, [r2, #12]
 8004410:	687b      	ldr	r3, [r7, #4]
 8004412:	681b      	ldr	r3, [r3, #0]
 8004414:	695b      	ldr	r3, [r3, #20]
 8004416:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 800441a:	687b      	ldr	r3, [r7, #4]
 800441c:	699a      	ldr	r2, [r3, #24]
 800441e:	687b      	ldr	r3, [r7, #4]
 8004420:	681b      	ldr	r3, [r3, #0]
 8004422:	430a      	orrs	r2, r1
 8004424:	615a      	str	r2, [r3, #20]
 8004426:	687b      	ldr	r3, [r7, #4]
 8004428:	681b      	ldr	r3, [r3, #0]
 800442a:	4a2c      	ldr	r2, [pc, #176]	@ (80044dc <UART_SetConfig+0x114>)
 800442c:	4293      	cmp	r3, r2
 800442e:	d103      	bne.n	8004438 <UART_SetConfig+0x70>
 8004430:	f7fe fa20 	bl	8002874 <HAL_RCC_GetPCLK2Freq>
 8004434:	60f8      	str	r0, [r7, #12]
 8004436:	e002      	b.n	800443e <UART_SetConfig+0x76>
 8004438:	f7fe fa08 	bl	800284c <HAL_RCC_GetPCLK1Freq>
 800443c:	60f8      	str	r0, [r7, #12]
 800443e:	68fa      	ldr	r2, [r7, #12]
 8004440:	4613      	mov	r3, r2
 8004442:	009b      	lsls	r3, r3, #2
 8004444:	4413      	add	r3, r2
 8004446:	009a      	lsls	r2, r3, #2
 8004448:	441a      	add	r2, r3
 800444a:	687b      	ldr	r3, [r7, #4]
 800444c:	685b      	ldr	r3, [r3, #4]
 800444e:	009b      	lsls	r3, r3, #2
 8004450:	fbb2 f3f3 	udiv	r3, r2, r3
 8004454:	4a22      	ldr	r2, [pc, #136]	@ (80044e0 <UART_SetConfig+0x118>)
 8004456:	fba2 2303 	umull	r2, r3, r2, r3
 800445a:	095b      	lsrs	r3, r3, #5
 800445c:	0119      	lsls	r1, r3, #4
 800445e:	68fa      	ldr	r2, [r7, #12]
 8004460:	4613      	mov	r3, r2
 8004462:	009b      	lsls	r3, r3, #2
 8004464:	4413      	add	r3, r2
 8004466:	009a      	lsls	r2, r3, #2
 8004468:	441a      	add	r2, r3
 800446a:	687b      	ldr	r3, [r7, #4]
 800446c:	685b      	ldr	r3, [r3, #4]
 800446e:	009b      	lsls	r3, r3, #2
 8004470:	fbb2 f2f3 	udiv	r2, r2, r3
 8004474:	4b1a      	ldr	r3, [pc, #104]	@ (80044e0 <UART_SetConfig+0x118>)
 8004476:	fba3 0302 	umull	r0, r3, r3, r2
 800447a:	095b      	lsrs	r3, r3, #5
 800447c:	2064      	movs	r0, #100	@ 0x64
 800447e:	fb00 f303 	mul.w	r3, r0, r3
 8004482:	1ad3      	subs	r3, r2, r3
 8004484:	011b      	lsls	r3, r3, #4
 8004486:	3332      	adds	r3, #50	@ 0x32
 8004488:	4a15      	ldr	r2, [pc, #84]	@ (80044e0 <UART_SetConfig+0x118>)
 800448a:	fba2 2303 	umull	r2, r3, r2, r3
 800448e:	095b      	lsrs	r3, r3, #5
 8004490:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8004494:	4419      	add	r1, r3
 8004496:	68fa      	ldr	r2, [r7, #12]
 8004498:	4613      	mov	r3, r2
 800449a:	009b      	lsls	r3, r3, #2
 800449c:	4413      	add	r3, r2
 800449e:	009a      	lsls	r2, r3, #2
 80044a0:	441a      	add	r2, r3
 80044a2:	687b      	ldr	r3, [r7, #4]
 80044a4:	685b      	ldr	r3, [r3, #4]
 80044a6:	009b      	lsls	r3, r3, #2
 80044a8:	fbb2 f2f3 	udiv	r2, r2, r3
 80044ac:	4b0c      	ldr	r3, [pc, #48]	@ (80044e0 <UART_SetConfig+0x118>)
 80044ae:	fba3 0302 	umull	r0, r3, r3, r2
 80044b2:	095b      	lsrs	r3, r3, #5
 80044b4:	2064      	movs	r0, #100	@ 0x64
 80044b6:	fb00 f303 	mul.w	r3, r0, r3
 80044ba:	1ad3      	subs	r3, r2, r3
 80044bc:	011b      	lsls	r3, r3, #4
 80044be:	3332      	adds	r3, #50	@ 0x32
 80044c0:	4a07      	ldr	r2, [pc, #28]	@ (80044e0 <UART_SetConfig+0x118>)
 80044c2:	fba2 2303 	umull	r2, r3, r2, r3
 80044c6:	095b      	lsrs	r3, r3, #5
 80044c8:	f003 020f 	and.w	r2, r3, #15
 80044cc:	687b      	ldr	r3, [r7, #4]
 80044ce:	681b      	ldr	r3, [r3, #0]
 80044d0:	440a      	add	r2, r1
 80044d2:	609a      	str	r2, [r3, #8]
 80044d4:	bf00      	nop
 80044d6:	3710      	adds	r7, #16
 80044d8:	46bd      	mov	sp, r7
 80044da:	bd80      	pop	{r7, pc}
 80044dc:	40013800 	.word	0x40013800
 80044e0:	51eb851f 	.word	0x51eb851f

080044e4 <sniprintf>:
 80044e4:	b40c      	push	{r2, r3}
 80044e6:	b530      	push	{r4, r5, lr}
 80044e8:	4b17      	ldr	r3, [pc, #92]	@ (8004548 <sniprintf+0x64>)
 80044ea:	1e0c      	subs	r4, r1, #0
 80044ec:	681d      	ldr	r5, [r3, #0]
 80044ee:	b09d      	sub	sp, #116	@ 0x74
 80044f0:	da08      	bge.n	8004504 <sniprintf+0x20>
 80044f2:	238b      	movs	r3, #139	@ 0x8b
 80044f4:	f04f 30ff 	mov.w	r0, #4294967295
 80044f8:	602b      	str	r3, [r5, #0]
 80044fa:	b01d      	add	sp, #116	@ 0x74
 80044fc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8004500:	b002      	add	sp, #8
 8004502:	4770      	bx	lr
 8004504:	f44f 7302 	mov.w	r3, #520	@ 0x208
 8004508:	f8ad 3014 	strh.w	r3, [sp, #20]
 800450c:	bf0c      	ite	eq
 800450e:	4623      	moveq	r3, r4
 8004510:	f104 33ff 	addne.w	r3, r4, #4294967295
 8004514:	9304      	str	r3, [sp, #16]
 8004516:	9307      	str	r3, [sp, #28]
 8004518:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800451c:	9002      	str	r0, [sp, #8]
 800451e:	9006      	str	r0, [sp, #24]
 8004520:	f8ad 3016 	strh.w	r3, [sp, #22]
 8004524:	4628      	mov	r0, r5
 8004526:	ab21      	add	r3, sp, #132	@ 0x84
 8004528:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800452a:	a902      	add	r1, sp, #8
 800452c:	9301      	str	r3, [sp, #4]
 800452e:	f000 f9a1 	bl	8004874 <_svfiprintf_r>
 8004532:	1c43      	adds	r3, r0, #1
 8004534:	bfbc      	itt	lt
 8004536:	238b      	movlt	r3, #139	@ 0x8b
 8004538:	602b      	strlt	r3, [r5, #0]
 800453a:	2c00      	cmp	r4, #0
 800453c:	d0dd      	beq.n	80044fa <sniprintf+0x16>
 800453e:	2200      	movs	r2, #0
 8004540:	9b02      	ldr	r3, [sp, #8]
 8004542:	701a      	strb	r2, [r3, #0]
 8004544:	e7d9      	b.n	80044fa <sniprintf+0x16>
 8004546:	bf00      	nop
 8004548:	20000074 	.word	0x20000074

0800454c <memset>:
 800454c:	4603      	mov	r3, r0
 800454e:	4402      	add	r2, r0
 8004550:	4293      	cmp	r3, r2
 8004552:	d100      	bne.n	8004556 <memset+0xa>
 8004554:	4770      	bx	lr
 8004556:	f803 1b01 	strb.w	r1, [r3], #1
 800455a:	e7f9      	b.n	8004550 <memset+0x4>

0800455c <__errno>:
 800455c:	4b01      	ldr	r3, [pc, #4]	@ (8004564 <__errno+0x8>)
 800455e:	6818      	ldr	r0, [r3, #0]
 8004560:	4770      	bx	lr
 8004562:	bf00      	nop
 8004564:	20000074 	.word	0x20000074

08004568 <__libc_init_array>:
 8004568:	b570      	push	{r4, r5, r6, lr}
 800456a:	2600      	movs	r6, #0
 800456c:	4d0c      	ldr	r5, [pc, #48]	@ (80045a0 <__libc_init_array+0x38>)
 800456e:	4c0d      	ldr	r4, [pc, #52]	@ (80045a4 <__libc_init_array+0x3c>)
 8004570:	1b64      	subs	r4, r4, r5
 8004572:	10a4      	asrs	r4, r4, #2
 8004574:	42a6      	cmp	r6, r4
 8004576:	d109      	bne.n	800458c <__libc_init_array+0x24>
 8004578:	f000 fc78 	bl	8004e6c <_init>
 800457c:	2600      	movs	r6, #0
 800457e:	4d0a      	ldr	r5, [pc, #40]	@ (80045a8 <__libc_init_array+0x40>)
 8004580:	4c0a      	ldr	r4, [pc, #40]	@ (80045ac <__libc_init_array+0x44>)
 8004582:	1b64      	subs	r4, r4, r5
 8004584:	10a4      	asrs	r4, r4, #2
 8004586:	42a6      	cmp	r6, r4
 8004588:	d105      	bne.n	8004596 <__libc_init_array+0x2e>
 800458a:	bd70      	pop	{r4, r5, r6, pc}
 800458c:	f855 3b04 	ldr.w	r3, [r5], #4
 8004590:	4798      	blx	r3
 8004592:	3601      	adds	r6, #1
 8004594:	e7ee      	b.n	8004574 <__libc_init_array+0xc>
 8004596:	f855 3b04 	ldr.w	r3, [r5], #4
 800459a:	4798      	blx	r3
 800459c:	3601      	adds	r6, #1
 800459e:	e7f2      	b.n	8004586 <__libc_init_array+0x1e>
 80045a0:	08004fac 	.word	0x08004fac
 80045a4:	08004fac 	.word	0x08004fac
 80045a8:	08004fac 	.word	0x08004fac
 80045ac:	08004fb0 	.word	0x08004fb0

080045b0 <__retarget_lock_acquire_recursive>:
 80045b0:	4770      	bx	lr

080045b2 <__retarget_lock_release_recursive>:
 80045b2:	4770      	bx	lr

080045b4 <memcpy>:
 80045b4:	440a      	add	r2, r1
 80045b6:	4291      	cmp	r1, r2
 80045b8:	f100 33ff 	add.w	r3, r0, #4294967295
 80045bc:	d100      	bne.n	80045c0 <memcpy+0xc>
 80045be:	4770      	bx	lr
 80045c0:	b510      	push	{r4, lr}
 80045c2:	f811 4b01 	ldrb.w	r4, [r1], #1
 80045c6:	4291      	cmp	r1, r2
 80045c8:	f803 4f01 	strb.w	r4, [r3, #1]!
 80045cc:	d1f9      	bne.n	80045c2 <memcpy+0xe>
 80045ce:	bd10      	pop	{r4, pc}

080045d0 <_free_r>:
 80045d0:	b538      	push	{r3, r4, r5, lr}
 80045d2:	4605      	mov	r5, r0
 80045d4:	2900      	cmp	r1, #0
 80045d6:	d040      	beq.n	800465a <_free_r+0x8a>
 80045d8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80045dc:	1f0c      	subs	r4, r1, #4
 80045de:	2b00      	cmp	r3, #0
 80045e0:	bfb8      	it	lt
 80045e2:	18e4      	addlt	r4, r4, r3
 80045e4:	f000 f8de 	bl	80047a4 <__malloc_lock>
 80045e8:	4a1c      	ldr	r2, [pc, #112]	@ (800465c <_free_r+0x8c>)
 80045ea:	6813      	ldr	r3, [r2, #0]
 80045ec:	b933      	cbnz	r3, 80045fc <_free_r+0x2c>
 80045ee:	6063      	str	r3, [r4, #4]
 80045f0:	6014      	str	r4, [r2, #0]
 80045f2:	4628      	mov	r0, r5
 80045f4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80045f8:	f000 b8da 	b.w	80047b0 <__malloc_unlock>
 80045fc:	42a3      	cmp	r3, r4
 80045fe:	d908      	bls.n	8004612 <_free_r+0x42>
 8004600:	6820      	ldr	r0, [r4, #0]
 8004602:	1821      	adds	r1, r4, r0
 8004604:	428b      	cmp	r3, r1
 8004606:	bf01      	itttt	eq
 8004608:	6819      	ldreq	r1, [r3, #0]
 800460a:	685b      	ldreq	r3, [r3, #4]
 800460c:	1809      	addeq	r1, r1, r0
 800460e:	6021      	streq	r1, [r4, #0]
 8004610:	e7ed      	b.n	80045ee <_free_r+0x1e>
 8004612:	461a      	mov	r2, r3
 8004614:	685b      	ldr	r3, [r3, #4]
 8004616:	b10b      	cbz	r3, 800461c <_free_r+0x4c>
 8004618:	42a3      	cmp	r3, r4
 800461a:	d9fa      	bls.n	8004612 <_free_r+0x42>
 800461c:	6811      	ldr	r1, [r2, #0]
 800461e:	1850      	adds	r0, r2, r1
 8004620:	42a0      	cmp	r0, r4
 8004622:	d10b      	bne.n	800463c <_free_r+0x6c>
 8004624:	6820      	ldr	r0, [r4, #0]
 8004626:	4401      	add	r1, r0
 8004628:	1850      	adds	r0, r2, r1
 800462a:	4283      	cmp	r3, r0
 800462c:	6011      	str	r1, [r2, #0]
 800462e:	d1e0      	bne.n	80045f2 <_free_r+0x22>
 8004630:	6818      	ldr	r0, [r3, #0]
 8004632:	685b      	ldr	r3, [r3, #4]
 8004634:	4408      	add	r0, r1
 8004636:	6010      	str	r0, [r2, #0]
 8004638:	6053      	str	r3, [r2, #4]
 800463a:	e7da      	b.n	80045f2 <_free_r+0x22>
 800463c:	d902      	bls.n	8004644 <_free_r+0x74>
 800463e:	230c      	movs	r3, #12
 8004640:	602b      	str	r3, [r5, #0]
 8004642:	e7d6      	b.n	80045f2 <_free_r+0x22>
 8004644:	6820      	ldr	r0, [r4, #0]
 8004646:	1821      	adds	r1, r4, r0
 8004648:	428b      	cmp	r3, r1
 800464a:	bf01      	itttt	eq
 800464c:	6819      	ldreq	r1, [r3, #0]
 800464e:	685b      	ldreq	r3, [r3, #4]
 8004650:	1809      	addeq	r1, r1, r0
 8004652:	6021      	streq	r1, [r4, #0]
 8004654:	6063      	str	r3, [r4, #4]
 8004656:	6054      	str	r4, [r2, #4]
 8004658:	e7cb      	b.n	80045f2 <_free_r+0x22>
 800465a:	bd38      	pop	{r3, r4, r5, pc}
 800465c:	200004f8 	.word	0x200004f8

08004660 <sbrk_aligned>:
 8004660:	b570      	push	{r4, r5, r6, lr}
 8004662:	4e0f      	ldr	r6, [pc, #60]	@ (80046a0 <sbrk_aligned+0x40>)
 8004664:	460c      	mov	r4, r1
 8004666:	6831      	ldr	r1, [r6, #0]
 8004668:	4605      	mov	r5, r0
 800466a:	b911      	cbnz	r1, 8004672 <sbrk_aligned+0x12>
 800466c:	f000 fbaa 	bl	8004dc4 <_sbrk_r>
 8004670:	6030      	str	r0, [r6, #0]
 8004672:	4621      	mov	r1, r4
 8004674:	4628      	mov	r0, r5
 8004676:	f000 fba5 	bl	8004dc4 <_sbrk_r>
 800467a:	1c43      	adds	r3, r0, #1
 800467c:	d103      	bne.n	8004686 <sbrk_aligned+0x26>
 800467e:	f04f 34ff 	mov.w	r4, #4294967295
 8004682:	4620      	mov	r0, r4
 8004684:	bd70      	pop	{r4, r5, r6, pc}
 8004686:	1cc4      	adds	r4, r0, #3
 8004688:	f024 0403 	bic.w	r4, r4, #3
 800468c:	42a0      	cmp	r0, r4
 800468e:	d0f8      	beq.n	8004682 <sbrk_aligned+0x22>
 8004690:	1a21      	subs	r1, r4, r0
 8004692:	4628      	mov	r0, r5
 8004694:	f000 fb96 	bl	8004dc4 <_sbrk_r>
 8004698:	3001      	adds	r0, #1
 800469a:	d1f2      	bne.n	8004682 <sbrk_aligned+0x22>
 800469c:	e7ef      	b.n	800467e <sbrk_aligned+0x1e>
 800469e:	bf00      	nop
 80046a0:	200004f4 	.word	0x200004f4

080046a4 <_malloc_r>:
 80046a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80046a8:	1ccd      	adds	r5, r1, #3
 80046aa:	f025 0503 	bic.w	r5, r5, #3
 80046ae:	3508      	adds	r5, #8
 80046b0:	2d0c      	cmp	r5, #12
 80046b2:	bf38      	it	cc
 80046b4:	250c      	movcc	r5, #12
 80046b6:	2d00      	cmp	r5, #0
 80046b8:	4606      	mov	r6, r0
 80046ba:	db01      	blt.n	80046c0 <_malloc_r+0x1c>
 80046bc:	42a9      	cmp	r1, r5
 80046be:	d904      	bls.n	80046ca <_malloc_r+0x26>
 80046c0:	230c      	movs	r3, #12
 80046c2:	6033      	str	r3, [r6, #0]
 80046c4:	2000      	movs	r0, #0
 80046c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80046ca:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80047a0 <_malloc_r+0xfc>
 80046ce:	f000 f869 	bl	80047a4 <__malloc_lock>
 80046d2:	f8d8 3000 	ldr.w	r3, [r8]
 80046d6:	461c      	mov	r4, r3
 80046d8:	bb44      	cbnz	r4, 800472c <_malloc_r+0x88>
 80046da:	4629      	mov	r1, r5
 80046dc:	4630      	mov	r0, r6
 80046de:	f7ff ffbf 	bl	8004660 <sbrk_aligned>
 80046e2:	1c43      	adds	r3, r0, #1
 80046e4:	4604      	mov	r4, r0
 80046e6:	d158      	bne.n	800479a <_malloc_r+0xf6>
 80046e8:	f8d8 4000 	ldr.w	r4, [r8]
 80046ec:	4627      	mov	r7, r4
 80046ee:	2f00      	cmp	r7, #0
 80046f0:	d143      	bne.n	800477a <_malloc_r+0xd6>
 80046f2:	2c00      	cmp	r4, #0
 80046f4:	d04b      	beq.n	800478e <_malloc_r+0xea>
 80046f6:	6823      	ldr	r3, [r4, #0]
 80046f8:	4639      	mov	r1, r7
 80046fa:	4630      	mov	r0, r6
 80046fc:	eb04 0903 	add.w	r9, r4, r3
 8004700:	f000 fb60 	bl	8004dc4 <_sbrk_r>
 8004704:	4581      	cmp	r9, r0
 8004706:	d142      	bne.n	800478e <_malloc_r+0xea>
 8004708:	6821      	ldr	r1, [r4, #0]
 800470a:	4630      	mov	r0, r6
 800470c:	1a6d      	subs	r5, r5, r1
 800470e:	4629      	mov	r1, r5
 8004710:	f7ff ffa6 	bl	8004660 <sbrk_aligned>
 8004714:	3001      	adds	r0, #1
 8004716:	d03a      	beq.n	800478e <_malloc_r+0xea>
 8004718:	6823      	ldr	r3, [r4, #0]
 800471a:	442b      	add	r3, r5
 800471c:	6023      	str	r3, [r4, #0]
 800471e:	f8d8 3000 	ldr.w	r3, [r8]
 8004722:	685a      	ldr	r2, [r3, #4]
 8004724:	bb62      	cbnz	r2, 8004780 <_malloc_r+0xdc>
 8004726:	f8c8 7000 	str.w	r7, [r8]
 800472a:	e00f      	b.n	800474c <_malloc_r+0xa8>
 800472c:	6822      	ldr	r2, [r4, #0]
 800472e:	1b52      	subs	r2, r2, r5
 8004730:	d420      	bmi.n	8004774 <_malloc_r+0xd0>
 8004732:	2a0b      	cmp	r2, #11
 8004734:	d917      	bls.n	8004766 <_malloc_r+0xc2>
 8004736:	1961      	adds	r1, r4, r5
 8004738:	42a3      	cmp	r3, r4
 800473a:	6025      	str	r5, [r4, #0]
 800473c:	bf18      	it	ne
 800473e:	6059      	strne	r1, [r3, #4]
 8004740:	6863      	ldr	r3, [r4, #4]
 8004742:	bf08      	it	eq
 8004744:	f8c8 1000 	streq.w	r1, [r8]
 8004748:	5162      	str	r2, [r4, r5]
 800474a:	604b      	str	r3, [r1, #4]
 800474c:	4630      	mov	r0, r6
 800474e:	f000 f82f 	bl	80047b0 <__malloc_unlock>
 8004752:	f104 000b 	add.w	r0, r4, #11
 8004756:	1d23      	adds	r3, r4, #4
 8004758:	f020 0007 	bic.w	r0, r0, #7
 800475c:	1ac2      	subs	r2, r0, r3
 800475e:	bf1c      	itt	ne
 8004760:	1a1b      	subne	r3, r3, r0
 8004762:	50a3      	strne	r3, [r4, r2]
 8004764:	e7af      	b.n	80046c6 <_malloc_r+0x22>
 8004766:	6862      	ldr	r2, [r4, #4]
 8004768:	42a3      	cmp	r3, r4
 800476a:	bf0c      	ite	eq
 800476c:	f8c8 2000 	streq.w	r2, [r8]
 8004770:	605a      	strne	r2, [r3, #4]
 8004772:	e7eb      	b.n	800474c <_malloc_r+0xa8>
 8004774:	4623      	mov	r3, r4
 8004776:	6864      	ldr	r4, [r4, #4]
 8004778:	e7ae      	b.n	80046d8 <_malloc_r+0x34>
 800477a:	463c      	mov	r4, r7
 800477c:	687f      	ldr	r7, [r7, #4]
 800477e:	e7b6      	b.n	80046ee <_malloc_r+0x4a>
 8004780:	461a      	mov	r2, r3
 8004782:	685b      	ldr	r3, [r3, #4]
 8004784:	42a3      	cmp	r3, r4
 8004786:	d1fb      	bne.n	8004780 <_malloc_r+0xdc>
 8004788:	2300      	movs	r3, #0
 800478a:	6053      	str	r3, [r2, #4]
 800478c:	e7de      	b.n	800474c <_malloc_r+0xa8>
 800478e:	230c      	movs	r3, #12
 8004790:	4630      	mov	r0, r6
 8004792:	6033      	str	r3, [r6, #0]
 8004794:	f000 f80c 	bl	80047b0 <__malloc_unlock>
 8004798:	e794      	b.n	80046c4 <_malloc_r+0x20>
 800479a:	6005      	str	r5, [r0, #0]
 800479c:	e7d6      	b.n	800474c <_malloc_r+0xa8>
 800479e:	bf00      	nop
 80047a0:	200004f8 	.word	0x200004f8

080047a4 <__malloc_lock>:
 80047a4:	4801      	ldr	r0, [pc, #4]	@ (80047ac <__malloc_lock+0x8>)
 80047a6:	f7ff bf03 	b.w	80045b0 <__retarget_lock_acquire_recursive>
 80047aa:	bf00      	nop
 80047ac:	200004f0 	.word	0x200004f0

080047b0 <__malloc_unlock>:
 80047b0:	4801      	ldr	r0, [pc, #4]	@ (80047b8 <__malloc_unlock+0x8>)
 80047b2:	f7ff befe 	b.w	80045b2 <__retarget_lock_release_recursive>
 80047b6:	bf00      	nop
 80047b8:	200004f0 	.word	0x200004f0

080047bc <__ssputs_r>:
 80047bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80047c0:	461f      	mov	r7, r3
 80047c2:	688e      	ldr	r6, [r1, #8]
 80047c4:	4682      	mov	sl, r0
 80047c6:	42be      	cmp	r6, r7
 80047c8:	460c      	mov	r4, r1
 80047ca:	4690      	mov	r8, r2
 80047cc:	680b      	ldr	r3, [r1, #0]
 80047ce:	d82d      	bhi.n	800482c <__ssputs_r+0x70>
 80047d0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80047d4:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 80047d8:	d026      	beq.n	8004828 <__ssputs_r+0x6c>
 80047da:	6965      	ldr	r5, [r4, #20]
 80047dc:	6909      	ldr	r1, [r1, #16]
 80047de:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80047e2:	eba3 0901 	sub.w	r9, r3, r1
 80047e6:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80047ea:	1c7b      	adds	r3, r7, #1
 80047ec:	444b      	add	r3, r9
 80047ee:	106d      	asrs	r5, r5, #1
 80047f0:	429d      	cmp	r5, r3
 80047f2:	bf38      	it	cc
 80047f4:	461d      	movcc	r5, r3
 80047f6:	0553      	lsls	r3, r2, #21
 80047f8:	d527      	bpl.n	800484a <__ssputs_r+0x8e>
 80047fa:	4629      	mov	r1, r5
 80047fc:	f7ff ff52 	bl	80046a4 <_malloc_r>
 8004800:	4606      	mov	r6, r0
 8004802:	b360      	cbz	r0, 800485e <__ssputs_r+0xa2>
 8004804:	464a      	mov	r2, r9
 8004806:	6921      	ldr	r1, [r4, #16]
 8004808:	f7ff fed4 	bl	80045b4 <memcpy>
 800480c:	89a3      	ldrh	r3, [r4, #12]
 800480e:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8004812:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004816:	81a3      	strh	r3, [r4, #12]
 8004818:	6126      	str	r6, [r4, #16]
 800481a:	444e      	add	r6, r9
 800481c:	6026      	str	r6, [r4, #0]
 800481e:	463e      	mov	r6, r7
 8004820:	6165      	str	r5, [r4, #20]
 8004822:	eba5 0509 	sub.w	r5, r5, r9
 8004826:	60a5      	str	r5, [r4, #8]
 8004828:	42be      	cmp	r6, r7
 800482a:	d900      	bls.n	800482e <__ssputs_r+0x72>
 800482c:	463e      	mov	r6, r7
 800482e:	4632      	mov	r2, r6
 8004830:	4641      	mov	r1, r8
 8004832:	6820      	ldr	r0, [r4, #0]
 8004834:	f000 faac 	bl	8004d90 <memmove>
 8004838:	2000      	movs	r0, #0
 800483a:	68a3      	ldr	r3, [r4, #8]
 800483c:	1b9b      	subs	r3, r3, r6
 800483e:	60a3      	str	r3, [r4, #8]
 8004840:	6823      	ldr	r3, [r4, #0]
 8004842:	4433      	add	r3, r6
 8004844:	6023      	str	r3, [r4, #0]
 8004846:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800484a:	462a      	mov	r2, r5
 800484c:	f000 fad8 	bl	8004e00 <_realloc_r>
 8004850:	4606      	mov	r6, r0
 8004852:	2800      	cmp	r0, #0
 8004854:	d1e0      	bne.n	8004818 <__ssputs_r+0x5c>
 8004856:	4650      	mov	r0, sl
 8004858:	6921      	ldr	r1, [r4, #16]
 800485a:	f7ff feb9 	bl	80045d0 <_free_r>
 800485e:	230c      	movs	r3, #12
 8004860:	f8ca 3000 	str.w	r3, [sl]
 8004864:	89a3      	ldrh	r3, [r4, #12]
 8004866:	f04f 30ff 	mov.w	r0, #4294967295
 800486a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800486e:	81a3      	strh	r3, [r4, #12]
 8004870:	e7e9      	b.n	8004846 <__ssputs_r+0x8a>
	...

08004874 <_svfiprintf_r>:
 8004874:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004878:	4698      	mov	r8, r3
 800487a:	898b      	ldrh	r3, [r1, #12]
 800487c:	4607      	mov	r7, r0
 800487e:	061b      	lsls	r3, r3, #24
 8004880:	460d      	mov	r5, r1
 8004882:	4614      	mov	r4, r2
 8004884:	b09d      	sub	sp, #116	@ 0x74
 8004886:	d510      	bpl.n	80048aa <_svfiprintf_r+0x36>
 8004888:	690b      	ldr	r3, [r1, #16]
 800488a:	b973      	cbnz	r3, 80048aa <_svfiprintf_r+0x36>
 800488c:	2140      	movs	r1, #64	@ 0x40
 800488e:	f7ff ff09 	bl	80046a4 <_malloc_r>
 8004892:	6028      	str	r0, [r5, #0]
 8004894:	6128      	str	r0, [r5, #16]
 8004896:	b930      	cbnz	r0, 80048a6 <_svfiprintf_r+0x32>
 8004898:	230c      	movs	r3, #12
 800489a:	603b      	str	r3, [r7, #0]
 800489c:	f04f 30ff 	mov.w	r0, #4294967295
 80048a0:	b01d      	add	sp, #116	@ 0x74
 80048a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80048a6:	2340      	movs	r3, #64	@ 0x40
 80048a8:	616b      	str	r3, [r5, #20]
 80048aa:	2300      	movs	r3, #0
 80048ac:	9309      	str	r3, [sp, #36]	@ 0x24
 80048ae:	2320      	movs	r3, #32
 80048b0:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80048b4:	2330      	movs	r3, #48	@ 0x30
 80048b6:	f04f 0901 	mov.w	r9, #1
 80048ba:	f8cd 800c 	str.w	r8, [sp, #12]
 80048be:	f8df 8198 	ldr.w	r8, [pc, #408]	@ 8004a58 <_svfiprintf_r+0x1e4>
 80048c2:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80048c6:	4623      	mov	r3, r4
 80048c8:	469a      	mov	sl, r3
 80048ca:	f813 2b01 	ldrb.w	r2, [r3], #1
 80048ce:	b10a      	cbz	r2, 80048d4 <_svfiprintf_r+0x60>
 80048d0:	2a25      	cmp	r2, #37	@ 0x25
 80048d2:	d1f9      	bne.n	80048c8 <_svfiprintf_r+0x54>
 80048d4:	ebba 0b04 	subs.w	fp, sl, r4
 80048d8:	d00b      	beq.n	80048f2 <_svfiprintf_r+0x7e>
 80048da:	465b      	mov	r3, fp
 80048dc:	4622      	mov	r2, r4
 80048de:	4629      	mov	r1, r5
 80048e0:	4638      	mov	r0, r7
 80048e2:	f7ff ff6b 	bl	80047bc <__ssputs_r>
 80048e6:	3001      	adds	r0, #1
 80048e8:	f000 80a7 	beq.w	8004a3a <_svfiprintf_r+0x1c6>
 80048ec:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80048ee:	445a      	add	r2, fp
 80048f0:	9209      	str	r2, [sp, #36]	@ 0x24
 80048f2:	f89a 3000 	ldrb.w	r3, [sl]
 80048f6:	2b00      	cmp	r3, #0
 80048f8:	f000 809f 	beq.w	8004a3a <_svfiprintf_r+0x1c6>
 80048fc:	2300      	movs	r3, #0
 80048fe:	f04f 32ff 	mov.w	r2, #4294967295
 8004902:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004906:	f10a 0a01 	add.w	sl, sl, #1
 800490a:	9304      	str	r3, [sp, #16]
 800490c:	9307      	str	r3, [sp, #28]
 800490e:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8004912:	931a      	str	r3, [sp, #104]	@ 0x68
 8004914:	4654      	mov	r4, sl
 8004916:	2205      	movs	r2, #5
 8004918:	f814 1b01 	ldrb.w	r1, [r4], #1
 800491c:	484e      	ldr	r0, [pc, #312]	@ (8004a58 <_svfiprintf_r+0x1e4>)
 800491e:	f000 fa61 	bl	8004de4 <memchr>
 8004922:	9a04      	ldr	r2, [sp, #16]
 8004924:	b9d8      	cbnz	r0, 800495e <_svfiprintf_r+0xea>
 8004926:	06d0      	lsls	r0, r2, #27
 8004928:	bf44      	itt	mi
 800492a:	2320      	movmi	r3, #32
 800492c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004930:	0711      	lsls	r1, r2, #28
 8004932:	bf44      	itt	mi
 8004934:	232b      	movmi	r3, #43	@ 0x2b
 8004936:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800493a:	f89a 3000 	ldrb.w	r3, [sl]
 800493e:	2b2a      	cmp	r3, #42	@ 0x2a
 8004940:	d015      	beq.n	800496e <_svfiprintf_r+0xfa>
 8004942:	4654      	mov	r4, sl
 8004944:	2000      	movs	r0, #0
 8004946:	f04f 0c0a 	mov.w	ip, #10
 800494a:	9a07      	ldr	r2, [sp, #28]
 800494c:	4621      	mov	r1, r4
 800494e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004952:	3b30      	subs	r3, #48	@ 0x30
 8004954:	2b09      	cmp	r3, #9
 8004956:	d94b      	bls.n	80049f0 <_svfiprintf_r+0x17c>
 8004958:	b1b0      	cbz	r0, 8004988 <_svfiprintf_r+0x114>
 800495a:	9207      	str	r2, [sp, #28]
 800495c:	e014      	b.n	8004988 <_svfiprintf_r+0x114>
 800495e:	eba0 0308 	sub.w	r3, r0, r8
 8004962:	fa09 f303 	lsl.w	r3, r9, r3
 8004966:	4313      	orrs	r3, r2
 8004968:	46a2      	mov	sl, r4
 800496a:	9304      	str	r3, [sp, #16]
 800496c:	e7d2      	b.n	8004914 <_svfiprintf_r+0xa0>
 800496e:	9b03      	ldr	r3, [sp, #12]
 8004970:	1d19      	adds	r1, r3, #4
 8004972:	681b      	ldr	r3, [r3, #0]
 8004974:	9103      	str	r1, [sp, #12]
 8004976:	2b00      	cmp	r3, #0
 8004978:	bfbb      	ittet	lt
 800497a:	425b      	neglt	r3, r3
 800497c:	f042 0202 	orrlt.w	r2, r2, #2
 8004980:	9307      	strge	r3, [sp, #28]
 8004982:	9307      	strlt	r3, [sp, #28]
 8004984:	bfb8      	it	lt
 8004986:	9204      	strlt	r2, [sp, #16]
 8004988:	7823      	ldrb	r3, [r4, #0]
 800498a:	2b2e      	cmp	r3, #46	@ 0x2e
 800498c:	d10a      	bne.n	80049a4 <_svfiprintf_r+0x130>
 800498e:	7863      	ldrb	r3, [r4, #1]
 8004990:	2b2a      	cmp	r3, #42	@ 0x2a
 8004992:	d132      	bne.n	80049fa <_svfiprintf_r+0x186>
 8004994:	9b03      	ldr	r3, [sp, #12]
 8004996:	3402      	adds	r4, #2
 8004998:	1d1a      	adds	r2, r3, #4
 800499a:	681b      	ldr	r3, [r3, #0]
 800499c:	9203      	str	r2, [sp, #12]
 800499e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80049a2:	9305      	str	r3, [sp, #20]
 80049a4:	f8df a0b4 	ldr.w	sl, [pc, #180]	@ 8004a5c <_svfiprintf_r+0x1e8>
 80049a8:	2203      	movs	r2, #3
 80049aa:	4650      	mov	r0, sl
 80049ac:	7821      	ldrb	r1, [r4, #0]
 80049ae:	f000 fa19 	bl	8004de4 <memchr>
 80049b2:	b138      	cbz	r0, 80049c4 <_svfiprintf_r+0x150>
 80049b4:	2240      	movs	r2, #64	@ 0x40
 80049b6:	9b04      	ldr	r3, [sp, #16]
 80049b8:	eba0 000a 	sub.w	r0, r0, sl
 80049bc:	4082      	lsls	r2, r0
 80049be:	4313      	orrs	r3, r2
 80049c0:	3401      	adds	r4, #1
 80049c2:	9304      	str	r3, [sp, #16]
 80049c4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80049c8:	2206      	movs	r2, #6
 80049ca:	4825      	ldr	r0, [pc, #148]	@ (8004a60 <_svfiprintf_r+0x1ec>)
 80049cc:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80049d0:	f000 fa08 	bl	8004de4 <memchr>
 80049d4:	2800      	cmp	r0, #0
 80049d6:	d036      	beq.n	8004a46 <_svfiprintf_r+0x1d2>
 80049d8:	4b22      	ldr	r3, [pc, #136]	@ (8004a64 <_svfiprintf_r+0x1f0>)
 80049da:	bb1b      	cbnz	r3, 8004a24 <_svfiprintf_r+0x1b0>
 80049dc:	9b03      	ldr	r3, [sp, #12]
 80049de:	3307      	adds	r3, #7
 80049e0:	f023 0307 	bic.w	r3, r3, #7
 80049e4:	3308      	adds	r3, #8
 80049e6:	9303      	str	r3, [sp, #12]
 80049e8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80049ea:	4433      	add	r3, r6
 80049ec:	9309      	str	r3, [sp, #36]	@ 0x24
 80049ee:	e76a      	b.n	80048c6 <_svfiprintf_r+0x52>
 80049f0:	460c      	mov	r4, r1
 80049f2:	2001      	movs	r0, #1
 80049f4:	fb0c 3202 	mla	r2, ip, r2, r3
 80049f8:	e7a8      	b.n	800494c <_svfiprintf_r+0xd8>
 80049fa:	2300      	movs	r3, #0
 80049fc:	f04f 0c0a 	mov.w	ip, #10
 8004a00:	4619      	mov	r1, r3
 8004a02:	3401      	adds	r4, #1
 8004a04:	9305      	str	r3, [sp, #20]
 8004a06:	4620      	mov	r0, r4
 8004a08:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004a0c:	3a30      	subs	r2, #48	@ 0x30
 8004a0e:	2a09      	cmp	r2, #9
 8004a10:	d903      	bls.n	8004a1a <_svfiprintf_r+0x1a6>
 8004a12:	2b00      	cmp	r3, #0
 8004a14:	d0c6      	beq.n	80049a4 <_svfiprintf_r+0x130>
 8004a16:	9105      	str	r1, [sp, #20]
 8004a18:	e7c4      	b.n	80049a4 <_svfiprintf_r+0x130>
 8004a1a:	4604      	mov	r4, r0
 8004a1c:	2301      	movs	r3, #1
 8004a1e:	fb0c 2101 	mla	r1, ip, r1, r2
 8004a22:	e7f0      	b.n	8004a06 <_svfiprintf_r+0x192>
 8004a24:	ab03      	add	r3, sp, #12
 8004a26:	9300      	str	r3, [sp, #0]
 8004a28:	462a      	mov	r2, r5
 8004a2a:	4638      	mov	r0, r7
 8004a2c:	4b0e      	ldr	r3, [pc, #56]	@ (8004a68 <_svfiprintf_r+0x1f4>)
 8004a2e:	a904      	add	r1, sp, #16
 8004a30:	f3af 8000 	nop.w
 8004a34:	1c42      	adds	r2, r0, #1
 8004a36:	4606      	mov	r6, r0
 8004a38:	d1d6      	bne.n	80049e8 <_svfiprintf_r+0x174>
 8004a3a:	89ab      	ldrh	r3, [r5, #12]
 8004a3c:	065b      	lsls	r3, r3, #25
 8004a3e:	f53f af2d 	bmi.w	800489c <_svfiprintf_r+0x28>
 8004a42:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004a44:	e72c      	b.n	80048a0 <_svfiprintf_r+0x2c>
 8004a46:	ab03      	add	r3, sp, #12
 8004a48:	9300      	str	r3, [sp, #0]
 8004a4a:	462a      	mov	r2, r5
 8004a4c:	4638      	mov	r0, r7
 8004a4e:	4b06      	ldr	r3, [pc, #24]	@ (8004a68 <_svfiprintf_r+0x1f4>)
 8004a50:	a904      	add	r1, sp, #16
 8004a52:	f000 f87d 	bl	8004b50 <_printf_i>
 8004a56:	e7ed      	b.n	8004a34 <_svfiprintf_r+0x1c0>
 8004a58:	08004f76 	.word	0x08004f76
 8004a5c:	08004f7c 	.word	0x08004f7c
 8004a60:	08004f80 	.word	0x08004f80
 8004a64:	00000000 	.word	0x00000000
 8004a68:	080047bd 	.word	0x080047bd

08004a6c <_printf_common>:
 8004a6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004a70:	4616      	mov	r6, r2
 8004a72:	4698      	mov	r8, r3
 8004a74:	688a      	ldr	r2, [r1, #8]
 8004a76:	690b      	ldr	r3, [r1, #16]
 8004a78:	4607      	mov	r7, r0
 8004a7a:	4293      	cmp	r3, r2
 8004a7c:	bfb8      	it	lt
 8004a7e:	4613      	movlt	r3, r2
 8004a80:	6033      	str	r3, [r6, #0]
 8004a82:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8004a86:	460c      	mov	r4, r1
 8004a88:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8004a8c:	b10a      	cbz	r2, 8004a92 <_printf_common+0x26>
 8004a8e:	3301      	adds	r3, #1
 8004a90:	6033      	str	r3, [r6, #0]
 8004a92:	6823      	ldr	r3, [r4, #0]
 8004a94:	0699      	lsls	r1, r3, #26
 8004a96:	bf42      	ittt	mi
 8004a98:	6833      	ldrmi	r3, [r6, #0]
 8004a9a:	3302      	addmi	r3, #2
 8004a9c:	6033      	strmi	r3, [r6, #0]
 8004a9e:	6825      	ldr	r5, [r4, #0]
 8004aa0:	f015 0506 	ands.w	r5, r5, #6
 8004aa4:	d106      	bne.n	8004ab4 <_printf_common+0x48>
 8004aa6:	f104 0a19 	add.w	sl, r4, #25
 8004aaa:	68e3      	ldr	r3, [r4, #12]
 8004aac:	6832      	ldr	r2, [r6, #0]
 8004aae:	1a9b      	subs	r3, r3, r2
 8004ab0:	42ab      	cmp	r3, r5
 8004ab2:	dc2b      	bgt.n	8004b0c <_printf_common+0xa0>
 8004ab4:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8004ab8:	6822      	ldr	r2, [r4, #0]
 8004aba:	3b00      	subs	r3, #0
 8004abc:	bf18      	it	ne
 8004abe:	2301      	movne	r3, #1
 8004ac0:	0692      	lsls	r2, r2, #26
 8004ac2:	d430      	bmi.n	8004b26 <_printf_common+0xba>
 8004ac4:	4641      	mov	r1, r8
 8004ac6:	4638      	mov	r0, r7
 8004ac8:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8004acc:	47c8      	blx	r9
 8004ace:	3001      	adds	r0, #1
 8004ad0:	d023      	beq.n	8004b1a <_printf_common+0xae>
 8004ad2:	6823      	ldr	r3, [r4, #0]
 8004ad4:	6922      	ldr	r2, [r4, #16]
 8004ad6:	f003 0306 	and.w	r3, r3, #6
 8004ada:	2b04      	cmp	r3, #4
 8004adc:	bf14      	ite	ne
 8004ade:	2500      	movne	r5, #0
 8004ae0:	6833      	ldreq	r3, [r6, #0]
 8004ae2:	f04f 0600 	mov.w	r6, #0
 8004ae6:	bf08      	it	eq
 8004ae8:	68e5      	ldreq	r5, [r4, #12]
 8004aea:	f104 041a 	add.w	r4, r4, #26
 8004aee:	bf08      	it	eq
 8004af0:	1aed      	subeq	r5, r5, r3
 8004af2:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8004af6:	bf08      	it	eq
 8004af8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004afc:	4293      	cmp	r3, r2
 8004afe:	bfc4      	itt	gt
 8004b00:	1a9b      	subgt	r3, r3, r2
 8004b02:	18ed      	addgt	r5, r5, r3
 8004b04:	42b5      	cmp	r5, r6
 8004b06:	d11a      	bne.n	8004b3e <_printf_common+0xd2>
 8004b08:	2000      	movs	r0, #0
 8004b0a:	e008      	b.n	8004b1e <_printf_common+0xb2>
 8004b0c:	2301      	movs	r3, #1
 8004b0e:	4652      	mov	r2, sl
 8004b10:	4641      	mov	r1, r8
 8004b12:	4638      	mov	r0, r7
 8004b14:	47c8      	blx	r9
 8004b16:	3001      	adds	r0, #1
 8004b18:	d103      	bne.n	8004b22 <_printf_common+0xb6>
 8004b1a:	f04f 30ff 	mov.w	r0, #4294967295
 8004b1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004b22:	3501      	adds	r5, #1
 8004b24:	e7c1      	b.n	8004aaa <_printf_common+0x3e>
 8004b26:	2030      	movs	r0, #48	@ 0x30
 8004b28:	18e1      	adds	r1, r4, r3
 8004b2a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8004b2e:	1c5a      	adds	r2, r3, #1
 8004b30:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8004b34:	4422      	add	r2, r4
 8004b36:	3302      	adds	r3, #2
 8004b38:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8004b3c:	e7c2      	b.n	8004ac4 <_printf_common+0x58>
 8004b3e:	2301      	movs	r3, #1
 8004b40:	4622      	mov	r2, r4
 8004b42:	4641      	mov	r1, r8
 8004b44:	4638      	mov	r0, r7
 8004b46:	47c8      	blx	r9
 8004b48:	3001      	adds	r0, #1
 8004b4a:	d0e6      	beq.n	8004b1a <_printf_common+0xae>
 8004b4c:	3601      	adds	r6, #1
 8004b4e:	e7d9      	b.n	8004b04 <_printf_common+0x98>

08004b50 <_printf_i>:
 8004b50:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004b54:	7e0f      	ldrb	r7, [r1, #24]
 8004b56:	4691      	mov	r9, r2
 8004b58:	2f78      	cmp	r7, #120	@ 0x78
 8004b5a:	4680      	mov	r8, r0
 8004b5c:	460c      	mov	r4, r1
 8004b5e:	469a      	mov	sl, r3
 8004b60:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8004b62:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8004b66:	d807      	bhi.n	8004b78 <_printf_i+0x28>
 8004b68:	2f62      	cmp	r7, #98	@ 0x62
 8004b6a:	d80a      	bhi.n	8004b82 <_printf_i+0x32>
 8004b6c:	2f00      	cmp	r7, #0
 8004b6e:	f000 80d3 	beq.w	8004d18 <_printf_i+0x1c8>
 8004b72:	2f58      	cmp	r7, #88	@ 0x58
 8004b74:	f000 80ba 	beq.w	8004cec <_printf_i+0x19c>
 8004b78:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8004b7c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8004b80:	e03a      	b.n	8004bf8 <_printf_i+0xa8>
 8004b82:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8004b86:	2b15      	cmp	r3, #21
 8004b88:	d8f6      	bhi.n	8004b78 <_printf_i+0x28>
 8004b8a:	a101      	add	r1, pc, #4	@ (adr r1, 8004b90 <_printf_i+0x40>)
 8004b8c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8004b90:	08004be9 	.word	0x08004be9
 8004b94:	08004bfd 	.word	0x08004bfd
 8004b98:	08004b79 	.word	0x08004b79
 8004b9c:	08004b79 	.word	0x08004b79
 8004ba0:	08004b79 	.word	0x08004b79
 8004ba4:	08004b79 	.word	0x08004b79
 8004ba8:	08004bfd 	.word	0x08004bfd
 8004bac:	08004b79 	.word	0x08004b79
 8004bb0:	08004b79 	.word	0x08004b79
 8004bb4:	08004b79 	.word	0x08004b79
 8004bb8:	08004b79 	.word	0x08004b79
 8004bbc:	08004cff 	.word	0x08004cff
 8004bc0:	08004c27 	.word	0x08004c27
 8004bc4:	08004cb9 	.word	0x08004cb9
 8004bc8:	08004b79 	.word	0x08004b79
 8004bcc:	08004b79 	.word	0x08004b79
 8004bd0:	08004d21 	.word	0x08004d21
 8004bd4:	08004b79 	.word	0x08004b79
 8004bd8:	08004c27 	.word	0x08004c27
 8004bdc:	08004b79 	.word	0x08004b79
 8004be0:	08004b79 	.word	0x08004b79
 8004be4:	08004cc1 	.word	0x08004cc1
 8004be8:	6833      	ldr	r3, [r6, #0]
 8004bea:	1d1a      	adds	r2, r3, #4
 8004bec:	681b      	ldr	r3, [r3, #0]
 8004bee:	6032      	str	r2, [r6, #0]
 8004bf0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8004bf4:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8004bf8:	2301      	movs	r3, #1
 8004bfa:	e09e      	b.n	8004d3a <_printf_i+0x1ea>
 8004bfc:	6833      	ldr	r3, [r6, #0]
 8004bfe:	6820      	ldr	r0, [r4, #0]
 8004c00:	1d19      	adds	r1, r3, #4
 8004c02:	6031      	str	r1, [r6, #0]
 8004c04:	0606      	lsls	r6, r0, #24
 8004c06:	d501      	bpl.n	8004c0c <_printf_i+0xbc>
 8004c08:	681d      	ldr	r5, [r3, #0]
 8004c0a:	e003      	b.n	8004c14 <_printf_i+0xc4>
 8004c0c:	0645      	lsls	r5, r0, #25
 8004c0e:	d5fb      	bpl.n	8004c08 <_printf_i+0xb8>
 8004c10:	f9b3 5000 	ldrsh.w	r5, [r3]
 8004c14:	2d00      	cmp	r5, #0
 8004c16:	da03      	bge.n	8004c20 <_printf_i+0xd0>
 8004c18:	232d      	movs	r3, #45	@ 0x2d
 8004c1a:	426d      	negs	r5, r5
 8004c1c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8004c20:	230a      	movs	r3, #10
 8004c22:	4859      	ldr	r0, [pc, #356]	@ (8004d88 <_printf_i+0x238>)
 8004c24:	e011      	b.n	8004c4a <_printf_i+0xfa>
 8004c26:	6821      	ldr	r1, [r4, #0]
 8004c28:	6833      	ldr	r3, [r6, #0]
 8004c2a:	0608      	lsls	r0, r1, #24
 8004c2c:	f853 5b04 	ldr.w	r5, [r3], #4
 8004c30:	d402      	bmi.n	8004c38 <_printf_i+0xe8>
 8004c32:	0649      	lsls	r1, r1, #25
 8004c34:	bf48      	it	mi
 8004c36:	b2ad      	uxthmi	r5, r5
 8004c38:	2f6f      	cmp	r7, #111	@ 0x6f
 8004c3a:	6033      	str	r3, [r6, #0]
 8004c3c:	bf14      	ite	ne
 8004c3e:	230a      	movne	r3, #10
 8004c40:	2308      	moveq	r3, #8
 8004c42:	4851      	ldr	r0, [pc, #324]	@ (8004d88 <_printf_i+0x238>)
 8004c44:	2100      	movs	r1, #0
 8004c46:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8004c4a:	6866      	ldr	r6, [r4, #4]
 8004c4c:	2e00      	cmp	r6, #0
 8004c4e:	bfa8      	it	ge
 8004c50:	6821      	ldrge	r1, [r4, #0]
 8004c52:	60a6      	str	r6, [r4, #8]
 8004c54:	bfa4      	itt	ge
 8004c56:	f021 0104 	bicge.w	r1, r1, #4
 8004c5a:	6021      	strge	r1, [r4, #0]
 8004c5c:	b90d      	cbnz	r5, 8004c62 <_printf_i+0x112>
 8004c5e:	2e00      	cmp	r6, #0
 8004c60:	d04b      	beq.n	8004cfa <_printf_i+0x1aa>
 8004c62:	4616      	mov	r6, r2
 8004c64:	fbb5 f1f3 	udiv	r1, r5, r3
 8004c68:	fb03 5711 	mls	r7, r3, r1, r5
 8004c6c:	5dc7      	ldrb	r7, [r0, r7]
 8004c6e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8004c72:	462f      	mov	r7, r5
 8004c74:	42bb      	cmp	r3, r7
 8004c76:	460d      	mov	r5, r1
 8004c78:	d9f4      	bls.n	8004c64 <_printf_i+0x114>
 8004c7a:	2b08      	cmp	r3, #8
 8004c7c:	d10b      	bne.n	8004c96 <_printf_i+0x146>
 8004c7e:	6823      	ldr	r3, [r4, #0]
 8004c80:	07df      	lsls	r7, r3, #31
 8004c82:	d508      	bpl.n	8004c96 <_printf_i+0x146>
 8004c84:	6923      	ldr	r3, [r4, #16]
 8004c86:	6861      	ldr	r1, [r4, #4]
 8004c88:	4299      	cmp	r1, r3
 8004c8a:	bfde      	ittt	le
 8004c8c:	2330      	movle	r3, #48	@ 0x30
 8004c8e:	f806 3c01 	strble.w	r3, [r6, #-1]
 8004c92:	f106 36ff 	addle.w	r6, r6, #4294967295
 8004c96:	1b92      	subs	r2, r2, r6
 8004c98:	6122      	str	r2, [r4, #16]
 8004c9a:	464b      	mov	r3, r9
 8004c9c:	4621      	mov	r1, r4
 8004c9e:	4640      	mov	r0, r8
 8004ca0:	f8cd a000 	str.w	sl, [sp]
 8004ca4:	aa03      	add	r2, sp, #12
 8004ca6:	f7ff fee1 	bl	8004a6c <_printf_common>
 8004caa:	3001      	adds	r0, #1
 8004cac:	d14a      	bne.n	8004d44 <_printf_i+0x1f4>
 8004cae:	f04f 30ff 	mov.w	r0, #4294967295
 8004cb2:	b004      	add	sp, #16
 8004cb4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004cb8:	6823      	ldr	r3, [r4, #0]
 8004cba:	f043 0320 	orr.w	r3, r3, #32
 8004cbe:	6023      	str	r3, [r4, #0]
 8004cc0:	2778      	movs	r7, #120	@ 0x78
 8004cc2:	4832      	ldr	r0, [pc, #200]	@ (8004d8c <_printf_i+0x23c>)
 8004cc4:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8004cc8:	6823      	ldr	r3, [r4, #0]
 8004cca:	6831      	ldr	r1, [r6, #0]
 8004ccc:	061f      	lsls	r7, r3, #24
 8004cce:	f851 5b04 	ldr.w	r5, [r1], #4
 8004cd2:	d402      	bmi.n	8004cda <_printf_i+0x18a>
 8004cd4:	065f      	lsls	r7, r3, #25
 8004cd6:	bf48      	it	mi
 8004cd8:	b2ad      	uxthmi	r5, r5
 8004cda:	6031      	str	r1, [r6, #0]
 8004cdc:	07d9      	lsls	r1, r3, #31
 8004cde:	bf44      	itt	mi
 8004ce0:	f043 0320 	orrmi.w	r3, r3, #32
 8004ce4:	6023      	strmi	r3, [r4, #0]
 8004ce6:	b11d      	cbz	r5, 8004cf0 <_printf_i+0x1a0>
 8004ce8:	2310      	movs	r3, #16
 8004cea:	e7ab      	b.n	8004c44 <_printf_i+0xf4>
 8004cec:	4826      	ldr	r0, [pc, #152]	@ (8004d88 <_printf_i+0x238>)
 8004cee:	e7e9      	b.n	8004cc4 <_printf_i+0x174>
 8004cf0:	6823      	ldr	r3, [r4, #0]
 8004cf2:	f023 0320 	bic.w	r3, r3, #32
 8004cf6:	6023      	str	r3, [r4, #0]
 8004cf8:	e7f6      	b.n	8004ce8 <_printf_i+0x198>
 8004cfa:	4616      	mov	r6, r2
 8004cfc:	e7bd      	b.n	8004c7a <_printf_i+0x12a>
 8004cfe:	6833      	ldr	r3, [r6, #0]
 8004d00:	6825      	ldr	r5, [r4, #0]
 8004d02:	1d18      	adds	r0, r3, #4
 8004d04:	6961      	ldr	r1, [r4, #20]
 8004d06:	6030      	str	r0, [r6, #0]
 8004d08:	062e      	lsls	r6, r5, #24
 8004d0a:	681b      	ldr	r3, [r3, #0]
 8004d0c:	d501      	bpl.n	8004d12 <_printf_i+0x1c2>
 8004d0e:	6019      	str	r1, [r3, #0]
 8004d10:	e002      	b.n	8004d18 <_printf_i+0x1c8>
 8004d12:	0668      	lsls	r0, r5, #25
 8004d14:	d5fb      	bpl.n	8004d0e <_printf_i+0x1be>
 8004d16:	8019      	strh	r1, [r3, #0]
 8004d18:	2300      	movs	r3, #0
 8004d1a:	4616      	mov	r6, r2
 8004d1c:	6123      	str	r3, [r4, #16]
 8004d1e:	e7bc      	b.n	8004c9a <_printf_i+0x14a>
 8004d20:	6833      	ldr	r3, [r6, #0]
 8004d22:	2100      	movs	r1, #0
 8004d24:	1d1a      	adds	r2, r3, #4
 8004d26:	6032      	str	r2, [r6, #0]
 8004d28:	681e      	ldr	r6, [r3, #0]
 8004d2a:	6862      	ldr	r2, [r4, #4]
 8004d2c:	4630      	mov	r0, r6
 8004d2e:	f000 f859 	bl	8004de4 <memchr>
 8004d32:	b108      	cbz	r0, 8004d38 <_printf_i+0x1e8>
 8004d34:	1b80      	subs	r0, r0, r6
 8004d36:	6060      	str	r0, [r4, #4]
 8004d38:	6863      	ldr	r3, [r4, #4]
 8004d3a:	6123      	str	r3, [r4, #16]
 8004d3c:	2300      	movs	r3, #0
 8004d3e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8004d42:	e7aa      	b.n	8004c9a <_printf_i+0x14a>
 8004d44:	4632      	mov	r2, r6
 8004d46:	4649      	mov	r1, r9
 8004d48:	4640      	mov	r0, r8
 8004d4a:	6923      	ldr	r3, [r4, #16]
 8004d4c:	47d0      	blx	sl
 8004d4e:	3001      	adds	r0, #1
 8004d50:	d0ad      	beq.n	8004cae <_printf_i+0x15e>
 8004d52:	6823      	ldr	r3, [r4, #0]
 8004d54:	079b      	lsls	r3, r3, #30
 8004d56:	d413      	bmi.n	8004d80 <_printf_i+0x230>
 8004d58:	68e0      	ldr	r0, [r4, #12]
 8004d5a:	9b03      	ldr	r3, [sp, #12]
 8004d5c:	4298      	cmp	r0, r3
 8004d5e:	bfb8      	it	lt
 8004d60:	4618      	movlt	r0, r3
 8004d62:	e7a6      	b.n	8004cb2 <_printf_i+0x162>
 8004d64:	2301      	movs	r3, #1
 8004d66:	4632      	mov	r2, r6
 8004d68:	4649      	mov	r1, r9
 8004d6a:	4640      	mov	r0, r8
 8004d6c:	47d0      	blx	sl
 8004d6e:	3001      	adds	r0, #1
 8004d70:	d09d      	beq.n	8004cae <_printf_i+0x15e>
 8004d72:	3501      	adds	r5, #1
 8004d74:	68e3      	ldr	r3, [r4, #12]
 8004d76:	9903      	ldr	r1, [sp, #12]
 8004d78:	1a5b      	subs	r3, r3, r1
 8004d7a:	42ab      	cmp	r3, r5
 8004d7c:	dcf2      	bgt.n	8004d64 <_printf_i+0x214>
 8004d7e:	e7eb      	b.n	8004d58 <_printf_i+0x208>
 8004d80:	2500      	movs	r5, #0
 8004d82:	f104 0619 	add.w	r6, r4, #25
 8004d86:	e7f5      	b.n	8004d74 <_printf_i+0x224>
 8004d88:	08004f87 	.word	0x08004f87
 8004d8c:	08004f98 	.word	0x08004f98

08004d90 <memmove>:
 8004d90:	4288      	cmp	r0, r1
 8004d92:	b510      	push	{r4, lr}
 8004d94:	eb01 0402 	add.w	r4, r1, r2
 8004d98:	d902      	bls.n	8004da0 <memmove+0x10>
 8004d9a:	4284      	cmp	r4, r0
 8004d9c:	4623      	mov	r3, r4
 8004d9e:	d807      	bhi.n	8004db0 <memmove+0x20>
 8004da0:	1e43      	subs	r3, r0, #1
 8004da2:	42a1      	cmp	r1, r4
 8004da4:	d008      	beq.n	8004db8 <memmove+0x28>
 8004da6:	f811 2b01 	ldrb.w	r2, [r1], #1
 8004daa:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004dae:	e7f8      	b.n	8004da2 <memmove+0x12>
 8004db0:	4601      	mov	r1, r0
 8004db2:	4402      	add	r2, r0
 8004db4:	428a      	cmp	r2, r1
 8004db6:	d100      	bne.n	8004dba <memmove+0x2a>
 8004db8:	bd10      	pop	{r4, pc}
 8004dba:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004dbe:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8004dc2:	e7f7      	b.n	8004db4 <memmove+0x24>

08004dc4 <_sbrk_r>:
 8004dc4:	b538      	push	{r3, r4, r5, lr}
 8004dc6:	2300      	movs	r3, #0
 8004dc8:	4d05      	ldr	r5, [pc, #20]	@ (8004de0 <_sbrk_r+0x1c>)
 8004dca:	4604      	mov	r4, r0
 8004dcc:	4608      	mov	r0, r1
 8004dce:	602b      	str	r3, [r5, #0]
 8004dd0:	f7fc fd04 	bl	80017dc <_sbrk>
 8004dd4:	1c43      	adds	r3, r0, #1
 8004dd6:	d102      	bne.n	8004dde <_sbrk_r+0x1a>
 8004dd8:	682b      	ldr	r3, [r5, #0]
 8004dda:	b103      	cbz	r3, 8004dde <_sbrk_r+0x1a>
 8004ddc:	6023      	str	r3, [r4, #0]
 8004dde:	bd38      	pop	{r3, r4, r5, pc}
 8004de0:	200004ec 	.word	0x200004ec

08004de4 <memchr>:
 8004de4:	4603      	mov	r3, r0
 8004de6:	b510      	push	{r4, lr}
 8004de8:	b2c9      	uxtb	r1, r1
 8004dea:	4402      	add	r2, r0
 8004dec:	4293      	cmp	r3, r2
 8004dee:	4618      	mov	r0, r3
 8004df0:	d101      	bne.n	8004df6 <memchr+0x12>
 8004df2:	2000      	movs	r0, #0
 8004df4:	e003      	b.n	8004dfe <memchr+0x1a>
 8004df6:	7804      	ldrb	r4, [r0, #0]
 8004df8:	3301      	adds	r3, #1
 8004dfa:	428c      	cmp	r4, r1
 8004dfc:	d1f6      	bne.n	8004dec <memchr+0x8>
 8004dfe:	bd10      	pop	{r4, pc}

08004e00 <_realloc_r>:
 8004e00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004e04:	4680      	mov	r8, r0
 8004e06:	4615      	mov	r5, r2
 8004e08:	460c      	mov	r4, r1
 8004e0a:	b921      	cbnz	r1, 8004e16 <_realloc_r+0x16>
 8004e0c:	4611      	mov	r1, r2
 8004e0e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004e12:	f7ff bc47 	b.w	80046a4 <_malloc_r>
 8004e16:	b92a      	cbnz	r2, 8004e24 <_realloc_r+0x24>
 8004e18:	f7ff fbda 	bl	80045d0 <_free_r>
 8004e1c:	2400      	movs	r4, #0
 8004e1e:	4620      	mov	r0, r4
 8004e20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004e24:	f000 f81a 	bl	8004e5c <_malloc_usable_size_r>
 8004e28:	4285      	cmp	r5, r0
 8004e2a:	4606      	mov	r6, r0
 8004e2c:	d802      	bhi.n	8004e34 <_realloc_r+0x34>
 8004e2e:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 8004e32:	d8f4      	bhi.n	8004e1e <_realloc_r+0x1e>
 8004e34:	4629      	mov	r1, r5
 8004e36:	4640      	mov	r0, r8
 8004e38:	f7ff fc34 	bl	80046a4 <_malloc_r>
 8004e3c:	4607      	mov	r7, r0
 8004e3e:	2800      	cmp	r0, #0
 8004e40:	d0ec      	beq.n	8004e1c <_realloc_r+0x1c>
 8004e42:	42b5      	cmp	r5, r6
 8004e44:	462a      	mov	r2, r5
 8004e46:	4621      	mov	r1, r4
 8004e48:	bf28      	it	cs
 8004e4a:	4632      	movcs	r2, r6
 8004e4c:	f7ff fbb2 	bl	80045b4 <memcpy>
 8004e50:	4621      	mov	r1, r4
 8004e52:	4640      	mov	r0, r8
 8004e54:	f7ff fbbc 	bl	80045d0 <_free_r>
 8004e58:	463c      	mov	r4, r7
 8004e5a:	e7e0      	b.n	8004e1e <_realloc_r+0x1e>

08004e5c <_malloc_usable_size_r>:
 8004e5c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004e60:	1f18      	subs	r0, r3, #4
 8004e62:	2b00      	cmp	r3, #0
 8004e64:	bfbc      	itt	lt
 8004e66:	580b      	ldrlt	r3, [r1, r0]
 8004e68:	18c0      	addlt	r0, r0, r3
 8004e6a:	4770      	bx	lr

08004e6c <_init>:
 8004e6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004e6e:	bf00      	nop
 8004e70:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004e72:	bc08      	pop	{r3}
 8004e74:	469e      	mov	lr, r3
 8004e76:	4770      	bx	lr

08004e78 <_fini>:
 8004e78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004e7a:	bf00      	nop
 8004e7c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004e7e:	bc08      	pop	{r3}
 8004e80:	469e      	mov	lr, r3
 8004e82:	4770      	bx	lr
